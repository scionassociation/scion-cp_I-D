{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-09-04T00:21:48.688596+00:00",
  "repo": "scionassociation/scion-cp_I-D",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "Prio 1",
      "description": "",
      "color": "DC0E1A"
    },
    {
      "name": "Prio 2",
      "description": "",
      "color": "FBCA04"
    },
    {
      "name": "Prio 3",
      "description": "",
      "color": "0E8A16"
    },
    {
      "name": "editorial",
      "description": "",
      "color": "9855E2"
    },
    {
      "name": "needs-discussion",
      "description": "",
      "color": "fbca04"
    },
    {
      "name": "design",
      "description": "",
      "color": "1d76db"
    }
  ],
  "issues": [
    {
      "number": 5,
      "id": "I_kwDOJx2-rs57ZNLr",
      "title": "Language: MAC v.s. MAC",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/5",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "We should only use MAC with one meaning, not with two at the same time\r\n\r\n(Moved from https://github.com/scionassociation/standards/issues/98)\r\n",
      "createdAt": "2024-01-08T10:56:49Z",
      "updatedAt": "2024-02-22T16:55:35Z",
      "closedAt": "2024-02-22T16:55:35Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOJx2-rs57Z9-D",
      "title": "Unaddressed Feedback from Reviews",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/6",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "Prio 1",
        "Prio 2"
      ],
      "body": "This issues lists all unaddressed feedback from reviews of the Control Plane draft before January 2024. New feedback is in dedicated issues\n\n(Aggregated from https://github.com/scionassociation/standards/issues/79 and https://github.com/scionassociation/standards/issues/90)\n\n\n**General points:**\n- [x] #7 \n- [x] Add Security Considerations (see also [RFC 3552](https://www.rfc-editor.org/info/rfc3552.html)) \n- [x] Make sure the references are correct: \n       - #14 \n       - #15 \n       - Normative references: Needed for the specification; specification is based on it.\n       - Informative references: Provide background/additional information\n-  #12 \n- [x] What text can be removed? Be concise. Make sure every word that is there must be there. \n- [x] ~~If time allows, add related work (not too academical, just overview)~~\n- [x] Complete IPR disclosure process with Anapaya. See also: https://github.com/scionassociation/standards/issues/101\n- [x] #8\n- [x] Improve the definition of \"endpoint\"\n- [x] section 2.1: \"Intra-ISD beaconing creates path segments from core ASes to non-\ncore ASes.\" sounds a bit vague. We could rephrase with something like this text, that Matthias wrote for the documentation: \"Every core AS originates PCBs at regular intervals, and sends these to all egress interfaces to connected neighbor ASes. An originated PCB sent to a neighboring core ASes initiates an inter-ISD beacon, ultimately resulting in a core-segment. An originated PCB sent to a child AS initiates the intra-ISD beacon creating an up/down segment.\"\n\n**ISE Feedback:**\n- [x]  #17 \n- [x] #21\n- [x] **Remind reader about critical terminology** , as we introduce quite a lot of new acronyms.  For some critical ones, we should remind reader what they mean along the document, so reader is reminded. THis especially for: \n\u201cISD\u201d should be defined on first use.\nSame goes for PCB \n- [x] #18\n- [x] ~~**Interoperability**: we should add something especially for data and CP. There could even be one separate document for the ISE on the topic.~~ --> TO be handled in separate future documents\n- [x] ~~**Deployment**: add what is needed to run SCION, we can leave a reference to scion.org, scion Association~~ --> We are working on a separate draft for PANRG\n- [x] #19\n- [x] #20\n- [x] **Get some third party review**: do I have enough information to build SCION from the draft? Ask someone who is building SCION to check if the drafts are enough to build a SCION implementation.. Do they spot inconsistencies?  Example: they are building a Bluetooth ALG, and the coders realized that there are some small divergencies..\n\n**Decision TC Standardisation**\n- [x]  #9\n\n**Eliot Lear (ISE IETF):**\n- [x] Section 1.3 would benefit from a one or more simple diagrams that demonstrates an ISD, ASes, and the various types of links.  Please keep the diagrams small.  **--> CdK: Added one relatively small figure of an ISD with all link types to section 1.3.**\n- [x] I would like you to spend a bit more time on loop detection.  In particular, I would like you to explain how loops are averted within richly connected cores. **--> CdK: Added some additional text about avoiding loops to section 2.3.2.1.**\n- [x] Along those same lines, classic routing geeks will look for two words in this draft and not find them: partition and healing. Partition occurs when one network is split into two because of a link failure.  Healing is the process of recovery from partition.\n- [x] I find Section 1.5.2.1 confusing.  You seem to be saying that for values greater than 232-1, you should represent them in colon-separated lower-case hex, but then you go on to say, \u201cprograms SHOULD always use the decimal representation for display.\u201d  I would say: pick a way you want things displayed and stick to it. **--> CdK: Adapted the sentence about this in section 1.5.2.1 \"Formatting\" to make it more clear.**\n- [x] In Section 1.6, please create normative references for both GRPC and protobufs. **--> CdK: Done**\n- [x] I hope this doesn't come as a shock to you, but Figure 2 in Section 2.1.4 is quite busy, and requires a more detail, flow-based explanation.  Please give that some thought. **--> CdK: Done**\n- [x] The text below Figure 2 and above Figure 3 could be simplified to say that a PCB consists of one or more path segments at a given time T from the vantage point of a particular AS F.  Also, I think there's an editorial error in that diagram, unless I'm confused.  You label two segments \"path segment 2\" (the 2nd and the last).  I am further confused by the terminology, given the diagram, in that the diagram seems to infer a link-state database. **--> CdK: Done**\n- [x] I think for 2.2.1, it helps to show a full example message, or otherwise link to one in the Appendix. **--> CdK: Added an Appendix with a full example of one PCB in Protobuf message format.**  \n- [x] Section 2.2.1.4.3 is underspecified.  It must be crystal clear how to sign a message and how to verify it.  Now I think your intent is to have a separate document for that.  If so, leave a forward reference for now. **--> CdK: Added a mathematical formula and a reference to the relevant section in the SCION CP-PKI Internet-Draft.**\n\n**Juan Garcia-Pardo:**\n- [x] Can one ingress or egress be part of two different links? Refers to section 1.3 \"Introduction > Paths and Links\". --> we clarified over time that IF IDs MUST be unique, therefore they cannot be part of more than one ingress/egress\n- [x] Explain why there is a \"next_isd_as\" field in the signed component of an AS body element (PCB). Refers to section 2.4.2 \"PCB > AS Entry Signed Component\". #97 \n- [x] Where do the suggested values for set size and propagation time of PCBs in section 2.3.1.1. \"Storing and Selecting Candidate PCBs\" come from? Do they depend on the network topology? Explain. --> This relates to scalability concerns, handled in #8 \n\n**Roger Lapuh:**\n- [x] Add an overview picture to section 2.2.1 \"Paths and Links\". \n- [x] Networking is very sensitive to flooding. So reading this as network engineer causes some concerns. In order to remove concerns the flooding terminology should always be supported with a statement along which path flooding is used and how flooding loops are prevented. _CdK: I have replaced the term \"flooded\" with \"sent\"._\n- [ ] ~Explain why why 4030 ISDs is enough for public addressing. Refers to section 2.2.3 \"Addressing > ISD Numbers\"\nSee~ https://github.com/scionassociation/scion-deployment_I-D/issues/1 \n- [x] #22\n",
      "createdAt": "2024-01-08T12:56:27Z",
      "updatedAt": "2025-02-26T17:32:35Z",
      "closedAt": "2025-02-26T17:32:35Z",
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOJx2-rs57aARE",
      "title": "Write IANA Considerations Section",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/7",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nicorusti",
        "jiceatscion"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "See [RFC 8126](https://www.rfc-editor.org/rfc/rfc8126.html)\r\n\r\n(Copied from https://github.com/scionassociation/standards/issues/100)\r\n",
      "createdAt": "2024-01-08T13:01:45Z",
      "updatedAt": "2024-05-16T10:34:52Z",
      "closedAt": "2024-05-16T10:34:51Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For the control plane, there seems to be only two IANA consideration to address:\r\n- Informational: The fact that SCION mirrors the UDP port space into the SCION/UDP port space. \r\n- The control service/discovery SCION/UDP port at 30252 which may need to become a reserved UDP/IP port as a consequence of the first point.\r\n \r\nEverything else is AS-internal so requires no IANA arbitration.\r\n\r\nRegarding port 30252, it is not even clear if that needs to be a reserved SCION/UDP port, given that it needs not be addressed directly but can be reached by way of a service address (and was once a dynamic port). As for port 30252 in to UDP/IP space, it is an AS-internal configuration anyway, so unless port 30252 needs to be reserved in the SCION/UDP space, it doesn't need to be reserved in the UDP/IP space.\r\n\r\nOn the other hand, Service Addresses themselves contain a hard-coded well-known number, so we might need to establish a registry for those. However, that would not be in the CP draft but may-be in the DP draft. Opinions welcome.\r\n\r\n",
          "createdAt": "2024-01-11T14:01:13Z",
          "updatedAt": "2024-01-11T14:01:13Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Update: our internet drafts must not have any IANA actions so, for better or for worse we have to let everything be freely configurable. We might mention that \"Informational: The fact that SCION mirrors the UDP port space into the SCION/UDP port space.\" as a justification for the absence of any IANA action requirement. Otherwise, should we just close this issue?\r\n",
          "createdAt": "2024-02-22T15:14:33Z",
          "updatedAt": "2024-02-22T15:15:01Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Hi @jceatscion in the draft we don't have the service discovery part (there was some discussion about this a while ago, and I think we removed it from the drafts, it might be in the old repo) ",
          "createdAt": "2024-02-23T18:03:59Z",
          "updatedAt": "2024-02-23T18:03:59Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "We discussed this with @jiceatscion and @matzf, port 30252 does not need to be reserved, this is an AS local configuration.",
          "createdAt": "2024-05-16T10:34:51Z",
          "updatedAt": "2024-05-16T10:34:51Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOJx2-rs57aHuA",
      "title": "Add section on scalability and convergence time",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/8",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "matzf"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "Jeff Tantsura at our IETF117 presentation mentioned that it was not clear how SCION does in terms of convergence time. \r\nThen we also got this question from the iSE review: \r\n\r\n> From:\tJoel Halpern\r\n> There appears to be a very fundamental gap in the scaling description.  On the one hand, SCION claims to scale well (presumably to large numbers of participating AS.  There is no discussion of the effect of the number of participants or meshiness on the number of PCBs.  There are very strict limits on the rate at which PCBs are propagated.  But no analysis as to whether the system will ever converge .  Particularly if the number of interfaces between AS becomes large. \r\n\r\nSomething about convergence time and scalability should be added to the draft. We could start from something like this:\r\n> Note that, since there is no convergence phase in SCION, we cannot compare to BGP\u2019s convergence time. SCION path-segments are stable as soon as they are disseminated.\r\n\r\nSource:\r\nhttps://netsec.ethz.ch/publications/papers/2021_conext_deployment.pdf\r\n\r\n(Copied from https://github.com/scionassociation/standards/issues/82)\r\n\r\n> From Roger Lapuh:  Explain why why 4030 ISDs is enough for public addressing. Refers to section 2.2.3 \"Addressing > ISD Numbers\"\r\n\r\n> From Juan Garcia Pardo:  Where do the suggested values for set size and propagation time of PCBs in section 2.3.1.1. \"Storing and Selecting Candidate PCBs\" come from? Do they depend on the network topology? Explain. \r\n",
      "createdAt": "2024-01-08T13:19:15Z",
      "updatedAt": "2024-07-08T15:35:59Z",
      "closedAt": "2024-07-08T15:35:59Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Convergence time: \r\n\r\n- Clarify there is no convergence\r\n- Time to bootstrap \r\n- Time to discover new link\r\n\r\n\r\nScalability: clarify tradeoffs\r\n- Number of ISDs and core ASes\r\n- Propagation intervals\r\n- Number of AS entries\r\n- meshyness of network\r\n\r\nWhat is the cost metric: communication, storage, computation (e.g. signature verification) \r\n",
          "createdAt": "2024-06-13T08:58:47Z",
          "updatedAt": "2024-06-13T08:58:47Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOJx2-rs57aLVE",
      "title": "Adapt Section on SCION AS Numbers",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/9",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "(Moved from https://github.com/scionassociation/standards/issues/91)\r\n\r\nSection 1.5.2 on AS numbering in the Control Plane draft must be changed, as it may cause problems or even a blocking of the draft at the IETF.  See also Eliot Lear's mail from 28.8:\r\n\r\n> There is an issue in Section 1.5.2:\r\n> There will be a conflict if the IETF decides to increase the ASN size.  This may not make it past the IESG in RFC 5742 review.  I just went through this with GNS and would not like to repeat that experience.  Therefore, my suggestion is that you view the ASN field as two separate fields: BASE and and EXTENSION, where if EXTENSION is 0, base must be an IANA-assigned ASN value.\r\n> \r\n\r\nAt the 3rd TC meeting on Tuesday 5 September, it was decided that the SCION AS numbering will not be described in detail in the CP draft. It should be mentioned that the SCION AS numbering is totally independent from the BGP AS numbering. For all other details, refer to a future and/or other draft.   \r\n\r\nFor the problem description and possible future solution, see slide 11-14 of the slide deck for the TC Standardisation meeting on 5.9.23. [TC-Standardisation_3meeting_Sept23.pdf](https://github.com/scionassociation/standards/files/12534358/TC-Standardisation_3meeting_Sept23.pdf)",
      "createdAt": "2024-01-08T13:27:03Z",
      "updatedAt": "2024-02-22T18:20:57Z",
      "closedAt": "2024-02-22T18:20:57Z",
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOJx2-rs6APwCE",
      "title": "Continue improving use of MUST and SHOULD according to rfc2119 and rfc8174",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/12",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "editorial"
      ],
      "body": "Continue work done in #11: \r\n       - MUST: Without this, the protocol will not work\r\n       - SHOULD: Should do this unless you have a very good reason not to\r\n       - MAY: Try to not use \"MAY\", if not needed\r\n      \r\n\r\netc.",
      "createdAt": "2024-02-23T18:42:28Z",
      "updatedAt": "2024-07-08T09:51:55Z",
      "closedAt": "2024-07-08T09:51:55Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Let's fix the: \"Allowed\", review use of MAY, and then resolve this",
          "createdAt": "2024-05-16T09:10:56Z",
          "updatedAt": "2024-05-16T09:10:56Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "While we added words,  we need to look at capitalization of these words, this is still not right in all places:\r\n\r\nFrom rfc8174: \r\n> The words have the meanings specified herein only when they are in all capitals.\"\r\n\r\n\r\nKeywords are:  \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\r\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\r\n   \"OPTIONAL\" ",
          "createdAt": "2024-07-04T10:44:18Z",
          "updatedAt": "2024-07-04T10:45:54Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOJx2-rs6IwwiF",
      "title": "Extend introduction, add overview and remove/edit notes",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/14",
      "state": "CLOSED",
      "author": "elear",
      "authorAssociation": "NONE",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "Prio 1",
        "editorial"
      ],
      "body": ">   \\*Note:\\* It is assumed that readers of this draft are familiar with\r\n   the basic concepts of the SCION next-generation inter-domain network\r\n   architecture.  If not, please find more detailed information in the\r\n   IETF Internet Drafts [I-D.scion-overview], [I-D.scion-components],\r\n   [I-D.scion-dp], and [I-D.scion-cppki], as well as in [CHUAT22],\r\n   especially Chapter 2.  A short description of the SCION basic terms\r\n   and elements can be found in Section 1.1 below.\r\n\r\nthe first two documents are not in my queue and I don't expect them.\r\n\r\n\r\nSame issue in other drafts: \r\n- DP https://github.com/scionassociation/scion-dp_I-D/issues/10\r\n- CPPKI https://github.com/scionassociation/scion-cppki_I-D/issues/29",
      "createdAt": "2024-05-14T05:57:55Z",
      "updatedAt": "2024-07-04T15:54:51Z",
      "closedAt": "2024-07-04T15:54:51Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "- [x] on the ISD definition, change language on jurisdiction (i.e. --> e.g.) ",
          "createdAt": "2024-06-06T08:20:23Z",
          "updatedAt": "2024-07-04T15:54:47Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOJx2-rs6IwxcL",
      "title": "gRPC & service discovery - dangling reference",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/15",
      "state": "CLOSED",
      "author": "elear",
      "authorAssociation": "NONE",
      "assignees": [
        "nicorusti",
        "jiceatscion"
      ],
      "labels": [
        "question",
        "needs-discussion"
      ],
      "body": "\r\n   > \\*Note:\\* The details of how gRPC is mapped to the SCION data plane\r\n   will be described in a separate document.\r\n\r\nWhich document?",
      "createdAt": "2024-05-14T05:59:13Z",
      "updatedAt": "2024-06-04T08:55:04Z",
      "closedAt": "2024-06-04T08:55:04Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "This is referring to the SCION gRPC API. \r\n\r\nP.S.: There is ongoing work to transition to connect, see https://github.com/scionproto/scion/issues/4434 / https://github.com/scionproto/scion/tree/connectrpc (which is incrementally deployable and backwards compatible to  legacy gRPC nodes), [also see IETF 118 Hackathon presentation](https://github.com/IETF-Hackathon/ietf118-project-presentations/blob/main/ietf118-SCION-apps-RPC.pdf)\r\n\r\n@matzf @jiceatscion check status in scionproto and see how this can be described within this draft. We could use some text from [here](https://github.com/scionassociation/standards/blob/f9aeed78d97a1bcc79938fce4b5d140b59273e56/source/control-plane/service-discovery.rst)\r\n\r\nRelates to https://github.com/scionassociation/scion-dp_I-D/issues/13 \r\n\r\n",
          "createdAt": "2024-05-16T10:23:09Z",
          "updatedAt": "2024-06-03T07:48:49Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOJx2-rs6I_TuN",
      "title": "Beaconing: Clarify PCB selection policies and how they meet endpoint's needs ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/16",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "katyatitkova",
        "nicorusti"
      ],
      "labels": [
        "Prio 1",
        "needs-discussion",
        "design"
      ],
      "body": "> From:\tJoel Halpern\r\n> There seems to be a philosophical contradiction in section 2.3.1 (Selection of PCBs to propagate) of the control plane document. Given the philosophy of SCION, the goal should be to propagate PCBs with the highest probability of collectively meeting the needs of the end hosts that will perform path construction.  Of course, this AS doesn't know that.   But the text ignores this distinction.\r\n\r\nTis also relates to [rfc9217 section-2.8](https://www.rfc-editor.org/rfc/rfc9217.html#section-2.8):\r\n```how can the incentives of network operators and end users be aligned to realize the vision of path-aware networking, ...```\r\n",
      "createdAt": "2024-05-15T15:57:30Z",
      "updatedAt": "2025-07-03T09:08:50Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Ideally, we'd like not to mandate or recommend any specific selection policy. PCB selection, overall gives some control to the AS, that can \"limit\" what its endpoint gets. \r\nFor an AS where endpoints are direct customers, selection policies can be driven by what was bought by customer (e.g. premium paths or not). \r\nFor a transit AS, this gets more complicated.",
          "createdAt": "2024-05-16T10:46:52Z",
          "updatedAt": "2024-05-17T07:42:46Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Maybe giving what we have in the OS as an example could help? \r\nhttps://docs.scion.org/en/latest/dev/design/BeaconService.html#beacon-selection \r\n",
          "createdAt": "2024-05-31T14:53:55Z",
          "updatedAt": "2024-05-31T14:53:55Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "- [x] What selection policy do we have implemented now @jiceatscion ?\n- [ ] Shall we add a more formal representation of policies? Or at least we should add some more specific wording about them:\n\n___ \nFeedback from David Galan:\n\n4. Regarding PCB Selection Policies (now mentioned in Section 2.3.1.1 \"Storing and Selecting Candidate PCBs\" and in Subsection 2.3.1.2 \"Selection Policy Example\"), we think it is important to introduce a more structured representation for those policies.\n\nAs part of our formal analysis, we have been using a particular representation of these policies that might be a good fit for this I-D. A possible way to explain our representation in English prose is as follows: \n\n\"A PCB Selection Policy can be expressed as a stateful filter of paths, i.e., a function which indicates whether to accept or deny a given path. This filter is stateful in that it can be updated each time its AS registers a new segment (e.g., for policies based on path diversity).\"\n\nAs future work, we believe that it would be particularly beneficial to the community if we extend this definition to include a machine readable (i.e., source code) representation for policies. This would, for example, enable the use of tools to compare different policies.\n\n\n5. In Subsection 2.2.4. \"Configuration\", consider mentioning that the PCB Selection Policy chosen by the AS should be such that it does not accidentally isolate the AS from the network, i.e., such that it does not block upstream connectivity to providers and ensures downstream connectivity for customers.\n\n6. Our formal model reveals that certain degenerate PCB Selection Policies may potentially undermine some properties. While the proposal outlined in point 5 (question B) addresses the majority of these concerns, it is nevertheless advantageous to incorporate a more precise methodology for delineating reasonable and unreasonable policies.\n\nTo this end, we propose the inclusion of one or more reference PCB Selection Policies. These reference policies impose minimal requirements on the ASes\u2019 own policies, but ASes are otherwise at liberty to make their own selection decisions. A (sub)network of ASes following these requirements is guaranteed to enjoy the Control Plane\u2019s correctness and security properties and, in particular, connectivity between any pair of ASes in that subnetwork. \n\nWe have designed an algorithm to compare PCB Selection Policies. This algorithm can be used to decide whether an AS policy adheres to a given reference policy.\n\n\nAlso relates to #72 ",
          "createdAt": "2025-02-04T17:41:50Z",
          "updatedAt": "2025-02-27T18:35:26Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@jiceatscion [wrote](https://scionassociation.slack.com/archives/C06JRLBMAT0/p1738691240039759) regarding point 1: policies are specified in [here](https://github.com/scionproto/scion/blob/ca467d2fefef818119b91d58e346ce0e259e7375/control/beacon/policy.go#L180) and are relatively simple.   \n\n\n> Regarding point 2, there is no interoperability requirement that implies specifying the policy representations. It can perfectly be unique to each implementation of the SCION stack and even each deployment. For that reason, a protocol specification has no business impeding that freedom.\n\nIndeed, I already mention to David that I'd not add a specific machine-readable representation for policies.. So I think we can look at improving the text we have, but without adding a specific representation.",
          "createdAt": "2025-02-05T11:39:38Z",
          "updatedAt": "2025-02-27T18:41:41Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Reopening due to feedback from Alvaro. TODO\n\n- [ ] Update text in 2.1.2 to mention potentially conflicting policies \n- [ ] Move text '[] \"SHOULD adopt a PCB selection policy...does not accidentally isolate the AS from the network\"\nfrom  [2.2.4. ](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-08.html#section-2.2.4)[Configuration](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-08.html#name-configuration)  to 2.3.3. and remove SHOULD\n\n\n```\n782 2.1.2.  Appending Entries to a PCB\n\n784   Every propagation interval (as configured by the AS), the Control\n785   Service:\n\n787   *  selects the best combinations of PCBs and interfaces connecting to\n788      a neighboring AS (i.e. a child AS or a core AS).  This is\n789      described in Section 2.3.3.\n```\n>  What is the criteria used to determine the \"best\"?  \u00a72.3.3 lists some\nfactors, and \u00a72.3.4 recommends the size of the PCB set.  However, it looks\nlike the selection of the \"best\" is not deterministic; instead, it is\nlocally determined based on policy -- is that correct?\nThere is then a possibility of \"conflicting\" policies.  I'm thinking\nespecially of the core where (in a triangle configuration, for example) two\nISDs may prefer each other to reach the third one...  Is this possible?\nLook at rfc7789; it is the best example I can think of right now.  I\nunderstand the differences, but the effect of filtering prefixes (rfc7789)\nmay be similar to \"filtering\" PCBs using policy.\n\n\n```\n[] \"SHOULD adopt a PCB selection policy...does not accidentally isolate the AS from the network\"\n```\n\nWhen is it ok to adopt a policy that isolates the AS from the network? ;-)   The use of \"SHOULD\" implies that there are cases where it is ok not to do what is specified.  In this case, I assume it is never ok to select a policy that isolates the AS -- and if it were done, then it wouldn't be accidental.\n\nThis is to say that this sentence has no Normative value here.  It may be better if something similar (\"care should be taken to avoid...\", maybe with an example) were included in \u00a72.3.3.\n\n\nCC @katyatitkova ",
          "createdAt": "2025-06-12T09:06:11Z",
          "updatedAt": "2025-06-25T13:06:17Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "We discussed this, \"triangle routing\" should not be problematic and it won't create a loop. Maybe we need to make the text clearer. TODO: draw this and think about it one more time..\n [Slack Discussion](https://scionproto.slack.com/archives/C8ADA9CEP/p1750792582215319)",
          "createdAt": "2025-06-12T12:00:50Z",
          "updatedAt": "2025-06-24T19:18:00Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I discussed this with @katyatitkova . She agrees that the triangle situation is in principle possible, however in the current implementation we don't have policies configurable in a way that would cause them (but they could be in principle implemented)",
          "createdAt": "2025-07-03T09:08:50Z",
          "updatedAt": "2025-07-03T09:08:50Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOJx2-rs6I_apu",
      "title": "Clarifications about AS interfaces and peering",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/17",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf",
        "jiceatscion"
      ],
      "labels": [
        "question"
      ],
      "body": "> From:\tJoel Halpern \r\n> There is no description of how an A control service knows the existence of the many AS interfaces, whether they are core, up, down, or peering interfaces, and what AS they go to.\r\n\r\n> There is also no information about how the needed properties of peering adjacencies are made available to the control service.\r\n\r\n> Also, somewhere (not sure if it is a data plane or control plane mechanism), there needs to be a mechanism to translate neighbor interface identifiers to underlay addresses.\r\n\r\nMost if this is pre-configured by the AS, in the OS implementation in the [topology file](https://docs.scion.org/en/latest/manuals/common.html#topology-json), we should indeed add something about this to the draft.\r\n\r\n\r\nAlso, Eliot commented about  peering ASe: We use the expression in the introduction. We say that peering links can cross ISDs. We need to define what is a peering AS (especially WRT to case outside an ISD). Important to make it clear that peering is possible across ISDs. \r\n ",
      "createdAt": "2024-05-15T16:10:06Z",
      "updatedAt": "2024-06-13T08:41:56Z",
      "closedAt": "2024-06-13T08:41:56Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I tried to address all three points by I probably failed at least one. PTAL.\r\n\r\n",
          "createdAt": "2024-05-28T16:46:59Z",
          "updatedAt": "2024-05-28T16:47:53Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I think this is addressed",
          "createdAt": "2024-06-05T08:37:02Z",
          "updatedAt": "2024-06-05T08:37:02Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOJx2-rs6JFOrJ",
      "title": "Clarify time synchronization dependency",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/18",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "question"
      ],
      "body": "What are the time synchronization dependencies between routers? Do you assume NTP? What happens if clocks drift?  Any dependencies must be listed. Maybe we could even have a section about dependencies. It is important as SCION is a such fundamentalc component that we must clearly list dependencies.. \r\n\r\n- [x] CLarify  routers requires syncronized time for path segments expiration (depending on lifetime on path segments, between 6m and one day, with 6m granularity).\r\n- [x] There is a tolerance value for CP certificate verification. In SCIONLab this had to be extended where NTPs did not work. \r\n- [x] Add a reference to where lifetimes are specified (could be the DP draft)\r\n- [x] Check if DP draft also needs to be updated\r\n- [x] ~Certificate validation for gRPC calls: what is the tolerance and where is it specified~",
      "createdAt": "2024-05-16T09:26:22Z",
      "updatedAt": "2024-06-19T20:32:19Z",
      "closedAt": "2024-06-19T20:32:19Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressed the question of clock drift in the dataplane with: https://github.com/scionassociation/scion-dp_I-D/pull/19",
          "createdAt": "2024-05-24T15:19:30Z",
          "updatedAt": "2024-05-24T15:19:30Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also copied the formula to interpret expTime from the DP draft.",
          "createdAt": "2024-05-24T17:25:03Z",
          "updatedAt": "2024-05-24T17:25:03Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that the time-tolerance for certificates is no-longer needed nor applied: Updated the cp draft to clarify that segments are not authenticated by certificates valid \"now\", but by certificates valid for the same period as the segment. Therefore current time during validation plays no role. Possibly a time offset between an AS's certificate originator and that of its core control service could play a role, but I think it's safe to assume that, being in the same AS, they can have the same time source. gRPC connections are quic/TLS connections, authenticated with the same AS certs. Subject to the same time check. No tolerance. None needed. Clarified that in the draft.\r\n",
          "createdAt": "2024-05-27T12:58:04Z",
          "updatedAt": "2024-05-27T15:30:54Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Finally closing this after both CP & DP are updated. Thanks a lot @jiceatscion !",
          "createdAt": "2024-06-19T20:32:19Z",
          "updatedAt": "2024-06-19T20:32:19Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOJx2-rs6JFS5N",
      "title": "Add context to bullet points in 2.1.2 (Extending a PCB) ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/19",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": " 2.1.2: in the bullet point where we have references, we should expand this sentences and add some short context (5/6 words) before the pointer to the other section\r\n ```\r\n   *  For the specification of one PCB, see Section 2.2\r\n\r\n   *  For more details on selecting PCBs, see Section 2.3.1\r\n\r\n   *  For more details on propagating PCBs, see Section 2.3.2\r\n ```\r\n\r\nFrom discussion with Eliot (28.08.23)",
      "createdAt": "2024-05-16T09:34:23Z",
      "updatedAt": "2024-10-18T10:04:32Z",
      "closedAt": "2024-10-18T10:04:32Z",
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDOJx2-rs6JFU0C",
      "title": "Manageability: what must an AS monitor (paths, links, certificates, \u2026) and reference to deployment",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/20",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "Prio 2",
        "needs-discussion"
      ],
      "body": "Manageability: small discussion of things that must be tracked in order to maintain service: PCB entries on devices, paths, links, certificates, \u2026\r\n\r\n- [x] Check if this is not clear from the draft and if some text has to be adapted\r\n\r\nThis input comes from Eliot. \r\n\r\n- [x] short paragraph in the appendix (and pointer to SCIONLab)\r\n- [x] Mention it in changelog\r\n- [ ] add in other drafts\r\n\r\n",
      "createdAt": "2024-05-16T09:38:07Z",
      "updatedAt": "2024-10-18T15:07:50Z",
      "closedAt": "2024-10-18T14:26:13Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Meeting Eliot Oct 2024: \r\n\r\n> Show fully flashed out config of how to have SCION nodes, a device in the middle, they did this with M-BONE. And the 6 bone to play with IPv6. If you have someone who wants to build an implementation, how can they test that it works and that they can interoperate. \r\nWhat do you have to do if you want to want to add a GW. Show a reference to what you can do (guide how to participate) e.g. to SCIONLab, not docs.scion.org. Goal; meet interop requirement. No Anapaya docs (but could be). Beginning as vendor implementation, intent is to offer to community for further improvement and potential standardization later on.\r\n",
          "createdAt": "2024-10-08T09:06:50Z",
          "updatedAt": "2024-10-08T09:06:50Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "We discussed this, we are not sure this really belongs to this draft as this would potentially be many pages. This is more ops/SRE considerations rather than protocol specification.\r\n\r\nThings that come to my mind: \r\n* Availability of paths\r\n* Having valid certificates\r\n* Be sending and receiving beacons\r\n* Be serving path lookups and registrations\r\n* Have functioning links \r\n\r\nMetrics monitored by Anapaya's implementation are mentioned in https://docs.anapaya.net/en/latest/gate/operations/telemetry/ \r\n\r\n",
          "createdAt": "2024-10-15T10:10:43Z",
          "updatedAt": "2024-10-15T10:10:43Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOJx2-rs6JFXal",
      "title": "Add a section \u201cLife of a routing advertisement\u201d ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/21",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "Add a section \u201cLife of a routing advertisement\u201d summarizing the steps for routing,  from a initial state, to exploration, registration (a numbered list of steps). It could be something similar to what is in our 117 slides. This will give the draft an overall structure that shows: Here is the process, here is an example, here it is the details.",
      "createdAt": "2024-05-16T09:43:10Z",
      "updatedAt": "2024-05-16T10:55:18Z",
      "closedAt": "2024-05-16T10:55:17Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "This was already added in 1.4.  Routing, issue is obsolete. ",
          "createdAt": "2024-05-16T10:55:17Z",
          "updatedAt": "2024-05-16T10:55:17Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOJx2-rs6JFfLE",
      "title": "Clarify path reversal for symmetric routing",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/22",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "question"
      ],
      "body": " think in the provider world it is expected that traffic between two endpoints uses bidirectionally the same path symmetrically. As each AS can select its own path to other AS's, it looks like SCION is not symmetrical. Maybe a comment around that could help.\r\n \r\n  @nicorusti: a sentence to clarify this could be added in 1.6. at bullet point path reversal.",
      "createdAt": "2024-05-16T09:55:40Z",
      "updatedAt": "2024-07-04T15:52:23Z",
      "closedAt": "2024-07-04T15:52:23Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOJx2-rs6JR5P1",
      "title": "Clarify selection of MAC algorithm",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/23",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf"
      ],
      "labels": [
        "question",
        "Prio 2"
      ],
      "body": "> From Joel Halpern\r\n> I may have misread the text, but the description of the hop authentication algorithm seems to say \"use an algorithm that is consistent across the AS.  The problem with that answer is that an implementor needs to implement a specific algorithm.  I think there at least needs to be a mandatory to implement algorithm, so implementors can interoperate.\r\n\r\nMACs for hop fields are created and then verified always within an AS. This means that each AS can use a different MAC algorithm, while interoperating with other ASes. We mention this in the data plane draft: \r\n ```  only the control service and routers of the AS need\r\n   to agree on keys, algorithm, and input for the MAC.  However, note\r\n   that we do not provide nor specify any mechanism to coordinate AS-\r\n   specific choices between the routers and the control services of the\r\n   AS.\r\n```\r\n Two points should be clarified: \r\n- [x] make it clearer also in the control plane draft that MAC algorithm is AS specific\r\n- [x] Clarify vendor interoperability _within an AS_: e.g. mention one mandatory algorithm within an AS \r\n\r\n   \r\n\r\nIssue in DP: https://github.com/scionassociation/scion-dp_I-D/issues/7  \r\n\r\n",
      "createdAt": "2024-05-17T16:38:24Z",
      "updatedAt": "2024-06-21T16:38:38Z",
      "closedAt": "2024-06-21T16:38:38Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@matzf I was looking into Joel's emails, he provided some more hints: \r\n\r\n> <jmh>Yes, I get that each AS can in principle use a different algorithm.  Now look at it from the point of view of an implementor.  What algorithm shall I implement?  I am expecting to sell to multiple operators.  I am expecting to need to interoperate with solutions from other vendors.  I have no problem with allowing a range of choices.  But I need something that ensures interoperability.  The usual answer is to say that all implementations must implement and support X, and that operators can use anything they like that their devices support as long as all devices in the AS use the same thing. </jmh>\r\n\r\nRight, this depends on the MAC algorithm. Safely truncating requires certain MAC algorithms, e.g. ones that have properties of a pseudorandom function. We should clarify this.\r\n\r\n> <jmh>If it depends upon the MAC that is used, then you need to tell operators enough to make an appropriate choice of MAC.  Still seems that XORing together th three \"xhorts\" from the MAC would always be stronger.  But I am not a security expert. </jmh> ",
          "createdAt": "2024-06-04T10:39:09Z",
          "updatedAt": "2024-06-04T10:39:09Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I think this is resolved by #34 ",
          "createdAt": "2024-06-21T16:38:38Z",
          "updatedAt": "2024-06-21T16:38:38Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOJx2-rs6KWhZE",
      "title": "Private AS range typo",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/26",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": "There is a typo here, this range should be `ffaa:0:0/24`,  same as in the [scionproto wiki](https://github.com/scionproto/scion/wiki/ISD-and-AS-numbering)\r\n```\r\n    +-------------------+-------------+-------------------------------+\r\n    | ff00:0:0/24       | ~16.8 mill. | Reserved for private use      |\r\n    |                   |             | (analogous to [RFC6996]).     |\r\n    |                   |             | These numbers can be used for |\r\n    |                   |             | testing/private deployments.  |\r\n    +-------------------+-------------+-------------------------------+\r\n```\r\n\r\n\r\n\r\nIntroduced in this initial commit https://github.com/scionassociation/scion-cp_I-D/commit/d427570b5b9d0ed0f7155e895bb87e185dec9688",
      "createdAt": "2024-05-28T14:01:17Z",
      "updatedAt": "2024-05-30T09:14:56Z",
      "closedAt": "2024-05-30T09:14:56Z",
      "comments": []
    },
    {
      "number": 28,
      "id": "I_kwDOJx2-rs6KWwVP",
      "title": "High availability language",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/28",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": "This is a bit vague: \r\n```\r\nIn addition, the control services\r\n   are designed to be deployed on replicated instances so that requests\r\n   can be balanced.\r\n```\r\n\r\n@shitz proposes \r\n\"In addition, control services should be implemented in a distributed and replicated manner so that requests can be balanced and a single instance failure does not result in a total failure of the control plane of a SCION AS.\"",
      "createdAt": "2024-05-28T14:25:20Z",
      "updatedAt": "2024-06-21T16:53:07Z",
      "closedAt": "2024-06-21T16:53:07Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "This was handled in #27 ",
          "createdAt": "2024-06-21T16:53:07Z",
          "updatedAt": "2024-06-21T16:53:07Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOJx2-rs6KdvU1",
      "title": "Add component overview",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/30",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "knmeynell"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-29T11:13:20Z",
      "updatedAt": "2024-06-03T07:10:44Z",
      "closedAt": "2024-06-03T07:10:44Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Duplicate of #14",
          "createdAt": "2024-06-03T07:10:44Z",
          "updatedAt": "2024-06-03T07:10:44Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "I_kwDOJx2-rs6LVtmw",
      "title": "Language for PCB propagation ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/36",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": ">  As core beaconing is based on _flooding_ PCBs,\r\n\r\nIs there a better wording? \r\n\r\n> As core beaconing is based on propagating PCBs to all AS neighbors,\r\n\r\n",
      "createdAt": "2024-06-06T08:55:53Z",
      "updatedAt": "2024-06-06T12:06:35Z",
      "closedAt": "2024-06-06T12:06:35Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "I_kwDOJx2-rs6MeGq8",
      "title": "Normative/informative references",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/40",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": " Make sure the references are righttly placed according to [guidelines](https://datatracker.ietf.org/doc/statement-iesg-iesg-statement-normative-and-informative-references-20060419/#:~:text=Normative%20references%20specify%20documents%20that,it%20only%20provides%20additional%20information): \r\n- Normative references: Needed for the specification; specification is based on it.\r\n- Informative references: Provide background/additional information\r\n\r\n\r\nPotential changes: \r\n- [ ] I-D.scion-cppki should be normative \r\n- [ ] Several RFCs might be informative\r\n- [x] Check if other drafts affected\r\n\r\nDP https://github.com/scionassociation/scion-dp_I-D/issues/25 \r\nPKI: https://github.com/scionassociation/scion-cppki_I-D/issues/32",
      "createdAt": "2024-06-17T08:16:14Z",
      "updatedAt": "2024-06-21T16:09:07Z",
      "closedAt": "2024-06-21T16:09:07Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "```\r\n7.1.  Normative References\r\n\r\n   [I-D.scion-cp]\r\n              de Kater, C., Rustignoli, N., and S. Hitz, \"SCION Control\r\n              Plane\", 2024, <https://datatracker.ietf.org/doc/draft-\r\n              dekater-scion-controlplane/>.\r\n              \r\n```",
          "createdAt": "2024-06-21T15:44:14Z",
          "updatedAt": "2024-06-21T15:44:14Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "FIxed with #38 ",
          "createdAt": "2024-06-21T16:09:07Z",
          "updatedAt": "2024-06-21T16:09:07Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOJx2-rs6OtERN",
      "title": "Clarify origination v.s. propagation interval",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/45",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "Prio 3",
        "needs-discussion"
      ],
      "body": "We currently only mention propagation interval in the draft. However, there is a separate origination interval in the implementation. \r\n\r\n\r\nAs reported by @tzaeschke  in https://github.com/scionassociation/scion-cp_I-D/pull/42#issuecomment-2211084556 : \r\n\r\n> The notes contain several references to \"beacon origination interval\", i.e. the interval at which new beacons are created. I couldn't find any description of this interval, maybe I overlooked it? Is it the same as the propagation interval? \r\n> I couldn't find a discussion of beacon origination interval (or the RegistrationInterval), see \"[DefaultOriginationInterval](https://github.com/scionproto/scion/blob/a1ed6246ecd6beae9c82544032de4f9fecab1058/control/config/config.go#L37)\" (or the DefaultRegistrationInterval) in the code.\r\n\r\n> ### Partition and Healing\r\n> Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the propagation interval and the origination interval.\r\n\r\n> ### Path Discovery Time and Scalability {#scalability} \r\n> Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n \r\n \r\n Does this distinction make sense? We might distinguish between interval for core beaconing and intra-ISD beaconing",
      "createdAt": "2024-07-07T19:07:10Z",
      "updatedAt": "2024-09-24T15:08:48Z",
      "closedAt": "2024-09-24T15:08:48Z",
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In my opinion, the distinction between origination interval and propagation interval is not necessary for the draft. The term \"propagation interval\" might not be entirely apropos for beacon origination, but the concepts are identical. I'd suggest to use \"propagation interval\" exclusively in the draft, or alternatively replace it with a more generic term (e.g. \"announcement interval\" or \"PCB creation interval\").\r\n\r\nFor what it's worth, I think the distinction of origination and propagation interval is not even useful in the implementation. If anything, we'd want to separately configure a frequency for core and non-core beaconing, but the configuration does allow to make this distinction. \r\nIn the draft, I think this also not necessary. I think the description is abstract enough to allow different values for this interval in different contexts.\r\n\r\n\r\n----\r\n\r\n> Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the propagation interval and the origination interval.\r\n\r\nQuoting the current text from that section:\r\n\r\n> Recovering (also called healing) from a partitioned network is also seamless, as only coarse time synchronization between the partitions is required to resume normal operation and move forward with updates of the cryptographic material.\r\n\r\nMy reading was that it means that the control plane can just resume with path discovery once the broken links have been recovered. That doesn't mean that it won't take some time to actually build the paths from that point on, just that nothing special needs to be done.\r\nIt's a bit vague, and perhaps also not very illuminating, but to me it seems that this doesn't _have to_ discuss the time until paths are found.",
          "createdAt": "2024-07-08T14:54:39Z",
          "updatedAt": "2024-07-08T14:54:39Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Also, for the records, these are the values in the prod network (as [confirmed](https://scionproto.slack.com/archives/C8ADA9CEP/p1720446254828389?thread_ts=1720431398.661119&cid=C8ADA9CEP) by @oncilla)\r\n```toml\r\n[beaconing]\r\norigination_interval = \"30s\"\r\npropagation_interval = \"30s\"\r\nregistration_interval = \"5s\"\r\n```",
          "createdAt": "2024-07-08T15:01:16Z",
          "updatedAt": "2024-07-08T15:01:16Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I agree with @matzf that there is no editing action needed on the draft because of this issue ",
          "createdAt": "2024-09-24T15:08:48Z",
          "updatedAt": "2024-09-24T15:08:48Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOJx2-rs6OtOg6",
      "title": "Clarifications in introduction and beaconing (Til's feedback)",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/46",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "jiceatscion"
      ],
      "labels": [
        "Prio 3"
      ],
      "body": "Copied over from feeedbac received by @tzaeschke  in https://github.com/scionassociation/scion-cp_I-D/pull/42#issuecomment-2211084556\r\n\r\n\r\n# Introduction\r\n## Avoiding Circular Dependencies and Partitioning\r\n- Does this section (title) make sense as it is? The two topics (circular dependencies and partitioning) appear unrelated. Partitioning is discussed in a separate subsection\r\n- Also, this section claims to contain a list that explains how circular dependencies are avoided.\r\n  However, I am not sure how anything in the list explains anything about circular dependencies?\r\n\r\n### Partition and Healing\r\n- `ASes could always switch to otherwise unused links`. \r\n\r\n  - What are `unused` links? `Unused` indicates that they are not in the \"Best PCB\" set. \r\n  If that is the case, then we cannot simply \"switch\" to use them, we first need to have them discovered by beacons. This takes time, see `propagation interval` (unless PCB are forwarded immediately) and beacon `origination interval`.\r\n  - Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the `propagation interval` and the `origination interval`.\r\n  As I understand, with propagation interval being set to e.g. 10Minutes, this adds up to 5hops*1/2*10min= 25minutes for 5 hops.\r\n\r\n# Path Exploration or Beaconing {#beaconing}\r\n## Introduction and Overview\r\n\r\n- `Intra-ISD beaconing`: Isn't this incomplete? How are DOWN segments created? I think leaf ASes need to propagate paths back to the COREs? -> Link to #intra-reg ?\r\n- `Inter-ISD beaconing`: Similarily, I think there is a step where CORE beacons share their path DB with other CORE ASes in the same ISD?\r\n\r\n### Extending a PCB\r\n- `selects the best combinations`: Maybe link to a section that explains how this works? And what \"best\" means?\r\n\r\n## Path-Segment Construction Beacons\r\n### PCB Validity\r\n- `For the purpose of validation, a timestamp is considered \"future\" if it is later than the current time at the point of validation plus the minimum expiration time of a hop field (337.5 seconds, see ).`\r\nMaybe add an explanation why we add the minimum expiration time here?\r\nShouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n\r\n\r\n\r\n\r\n## Propagation of PCBs {#path-prop}\r\n### Selection of PCBs to Propagate {#selection}\r\n#### Storing and Selecting Candidate PCBs\r\n\r\n- `temporary storage`: Maybe clarify what \"temporary\" means. \r\n  - How long are PCBs stored? \r\n  - Under what circumstances are they removed, e.g. when they expire? \r\n  - Or possibly replaced with a new version? What if the new version has an earlier expiration date?\r\n\r\n\r\n- `At each propagation event, each AS selects a set of the best PCBs from the candidates in the beacon store`\r\n\r\n\r\n- `The best PCBs set size SHOULD be at most \"50\" (PCBs) for intra-ISD beaconing and at most \"5\" (PCBs) for core beaconing.`\r\n  - I found this a bit confusing: the \"50\" appears to be the total number of beacons forwarded for non-core ASes, whereas the \"5\" refers to the number of \r\n    PCBs _per_ remote CORE AS. Maybe clarify this?\r\n\r\n- `Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].`\r\n  - Is this true? It appears to conflict with many other parts of the document that talk about propagation intervals in the contect of cold-start.\r\n  - Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n  - Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively\r\n    forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths? \r\n  - What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths\r\n    coming in all the time that need to be forwarded immediately, or not?\r\n    \r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2024-07-07T21:02:16Z",
      "updatedAt": "2025-07-24T08:06:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">  Shouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n\r\nThat's exactly what it is, we just picked a generous value for the allowed inaccuracies. Picking a value that already had a meaning in SCION seemed _less_ arbitrary than making up another arbitrary value. There doesn't seem to be a non-arbitrary choice.",
          "createdAt": "2024-07-08T15:08:19Z",
          "updatedAt": "2024-07-08T15:08:19Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "In the early skeleton of the deployment draft, we also got this content by @juagargi : \r\n\r\n> ## Beaconing Scalability\r\n> \r\n> The current beaconing system creates a large amount of beaconing traffic because every node multiplies the beacons by forwarding them to multiple other ASs. This is currently handled by rate-limiting identical beacons (with identical paths) to only be forwarded every some fixed propagation interval.  With larger networks, the beaconing traffic is expected to grow \u201csubstantially\u201d.\r\n> \r\n> * Risk: beaconing traffic grows with network size, especially with multiple links between pairs of ASes.\r\n>   * Large amount of beacon traffic.\r\n>   * Large amount of state on beacon servers.\r\n>   * Considerable amount of state on control services to store segments, and considerable data traffic for serving segments.\r\n> * The beacon interval in the SSFN has been considerably reduced to deal with beacon traffic. (?)\r\n>   * This affects the propagation time of newly available routes. [To be verified]\r\n>   * This can affect convergence time.\r\n\r\n@juagargi I have some concerns regarding this text: \r\n> >  The beacon interval in the SSFN has been considerably reduced to deal with beacon traffic. (?)\r\n\r\nBeacon traffic increases if the interval is reduced. Also, Dominik today mentioned they use 30s in general. We can perhaps clarify this and integrate this in the next release of the CP draft. If there are more researchy parts to this, we can add it to the research questions draft. \r\n\r\n\r\nI am moving this to here, as with #42 we added a section about beaconing scalability, and I feel this would belong there more than to the open research questions. \r\n",
          "createdAt": "2024-07-08T20:14:54Z",
          "updatedAt": "2024-07-08T20:14:54Z"
        },
        {
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "body": "> > Shouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n> \r\n> That's exactly what it is, we just picked a generous value for the allowed inaccuracies. Picking a value that already had a meaning in SCION seemed _less_ arbitrary than making up another arbitrary value. There doesn't seem to be a non-arbitrary choice.\r\n\r\nI'm not sure I can follow this argument. If we want an \"arbitrary\" value, we could just say so. Picking the minimum hopfield expiration time requires not only more text + a (pointless) reference, I also found it really confusing, thinking I was lacking some obvious understanding why the minimum hopfield expiration is relevant here. Also, the value is not really arbitrary, it depends on what the acceptable/expected clock deviation is. Maybe we can just write that?\r\nI don't really see the benefit of picking a time interval that is defined somewhere else in the document in an unrelated context.",
          "createdAt": "2024-07-09T14:41:36Z",
          "updatedAt": "2024-07-09T14:41:36Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I read through the draft, I also agree that Avoiding Circular Dependencies and Partitioning needs some review, this section is more some design considerations..",
          "createdAt": "2024-10-17T19:09:23Z",
          "updatedAt": "2024-10-17T19:09:23Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "To be addressed from David Galan's review: \n\n> - In our formal model, we assume that the network of physical links is such that no ISD is internally partitioned (i.e., each AS in an ISD can reach every other AS in the same ISD), ",
          "createdAt": "2025-02-04T15:48:05Z",
          "updatedAt": "2025-02-04T15:48:05Z"
        },
        {
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "body": "@nicorusti Can you clarify this statement?\nWhat does he mean by partition/reach? \n- Indirect reachability (leaving AS allowed): Generally, every AS in the world can \"reach\" any other AS in the world (assuming that no policies prevent it and it is physically connected; of course an AS can decide not to be reachable by anyone, via physical disconnect or via policies, but that is trivial...?).\n- Indirect reachability (leaving AS not allowed): Sometimes, to reach another AS in the same ISD, we may have to go outside the ISD (the ISD is partitioned...?), see for example SCIERA. But that is not a problem... (or at least it is not a problem once we have interface groups).\n- Direct reachability: Does he mean every AS is directly connected to every other AS? This is not a requirement that we have.\n\nI am probably missing something....?",
          "createdAt": "2025-02-04T16:03:12Z",
          "updatedAt": "2025-02-04T16:03:12Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@tzaeschke we received feedback from the formal methods group, this relates to #88, #89, I'm currently opening a few issues to address feedback received ",
          "createdAt": "2025-02-04T17:00:15Z",
          "updatedAt": "2025-02-04T17:00:27Z"
        },
        {
          "author": "dgalan7",
          "authorAssociation": "NONE",
          "body": "> To be addressed from David Galan's review:\n> \n> > In our formal model, we assume that the network of physical links is such that no ISD is internally partitioned (i.e., each AS in an ISD can reach every other AS in the same ISD),\n> \n\n\nCopied from our email for your convenience:\n\nWhen we stated that ISDs are not internally partitioned, we intended to convey what @tzaeschke refers to as \"indirect reachability (leaving AS allowed).\" This means that any two ASes within the same ISD can be connected through a sequence of one or more physical links (not beacons or segments). Currently, our model can handle paths that leave and re-enter the ISD. However, we are concerned that this topology might compromise certain strong notions of ISD isolation, potentially allowing external agents to influence the internal connectivity of an ISD. This is an area we plan to explore further in future work.",
          "createdAt": "2025-02-21T15:22:35Z",
          "updatedAt": "2025-02-21T15:22:35Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Reopening to address further Feedback received from  Alvaro. TODO: \n\n- [ ] Clarify How were these numbers selected\n- [ ] Eventually remove normative language\n- [ ] Include a pointer to \u00a73.3.1.\n- [ ] [] \"SHOULD have a suitable pre-selection of candidate PCBs\" --> should\n\n\nThis was discussed in a PR [here](https://github.com/scionassociation/scion-cp_I-D/pull/42#discussion_r1650834549) \n\n### Feedback Alvaro \n```...\n1778\t2.3.4.  Propagation Interval and Best PCBs Set Size\n...\n1787\t   The _best PCBs set size_ SHOULD be:\n\n1789\t   *  For intra-AS beaconing (i.e. propagating to children ASes): at\n1790\t      most 50.\n\n1792\t   *  For core beaconing (i.e. propagation between core ASes): at most 5\n1793\t      per immediate neighbor core AS.  Current practice is that each set\n1794\t      of 5 is chosen among the PCBs received from each neighbor.\n\n1796\t   Note that the PCBs set size should not be too low, in order to make\n1797\t   sure that beaconing can discover a wide amount of paths.  Values\n1798\t   above are RECOMMENDED maxima which represent a tradeoff between\n1799\t   scalability and amount of paths discovered.  In current practice the\n1800\t   intra-ISD set size is typically 20.\n```\n\n How were these numbers selected?  Are they a function of the memory, the current size of the deployments, etc.?\n\nThe only reason I'm asking is because of the use of Normative language to describe them.  Please describe the expectations/current practice without using Normative language.\n\nInclude a pointer to \u00a73.3.1.\n\n\n\n```\n1802\t   Depending on the selection criteria, it may be necessary to keep more\n1803\t   candidate PCBs than the _best PCBs set size_ in the Beacon Store in\n1804\t   order to determine the best set of PCBs.  If this is the case, an AS\n1805\t   SHOULD have a suitable pre-selection of candidate PCBs in place in\n1806\t   order to keep the Beacon Store capacity limited.\n```\n[] \"SHOULD have a suitable pre-selection of candidate PCBs\"\n\nWhen is it ok to not have a suitable pre-selection...?  s/SHOULD/should\n\n",
          "createdAt": "2025-06-25T14:11:19Z",
          "updatedAt": "2025-06-25T14:24:48Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@jiceatscion could you check how expensive it is to compute a PCB? Is it feasible to have `150 thousand signature validations per second` as we mention in the draft?",
          "createdAt": "2025-06-27T09:38:15Z",
          "updatedAt": "2025-06-27T09:38:15Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> could you check how expensive it is to compute a PCB? Is it feasible to have 150 thousand signature validations per second as we mention in the draft?\n\nOr @katyatitkova could you try to figure it out?",
          "createdAt": "2025-07-16T09:25:09Z",
          "updatedAt": "2025-07-16T09:25:09Z"
        },
        {
          "author": "jeltevanbommel",
          "authorAssociation": "NONE",
          "body": "> Is it feasible to have 150 thousand signature validations per second as we mention in the draft?\n\nI did some experiments on this a while ago, as during one of our projects the signature verifications were found to be a bottleneck on the hardware we used, and therefore had to be disabled. I still have some microbenchmarks from the signature verification in scionproto,  that might help inform the draft: \nVerifying a single AS entry (on Intel(R) Core(TM) Ultra 7 155H) takes about 65 microseconds. Considering an average PCB length of 6, that would mean verifying a PCB takes 390 microseconds, which is roughly 2564 PCB verifications per second per core. \n\nTo continue with the example in the draft, an AS receiving 1.5 million PCBs per 60s propagation interval, would thus need at least 10 dedicated cores for the signature verifications.  \n\nNote that this is assuming all AS certs are already at the local AS, if these need to be fetched first, the throughput would obviously be lower.  It should be taken into account that a control service will have other tasks, and will have to create the signatures too, requiring more compute than the 10 cores.\n\nI do believe there is still some gain in optimizing the current implementation in scionproto, so these numbers could certainly improve. More lightweight cryptographic schemes could help too, there are some recent advancements with efficient and lightweight post-quantum (or IoT) signatures. Distributing it over multiple control services, as proposed in the draft, seems to be the easiest solution.\n\nSmall sidenote, the draft assumes 5 path segments to every destination AS are discovered, in the current scionproto the default limit is set to 20 PCBs for each destination that are selected for propagation: https://github.com/scionproto/scion/blob/1615ae80e004f1753028a9990abd9928c8aa332d/control/beacon/policy.go#L104",
          "createdAt": "2025-07-24T08:06:37Z",
          "updatedAt": "2025-07-24T08:06:37Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "I_kwDOJx2-rs6O0I68",
      "title": "Clarify beaconing fast retry at bootstrapping",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/48",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf",
        "jiceatscion"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "In #42 we discussed about  propagation interval in case of \"bootstrapping\"/\"cold-start\". Following clarifications in this [slack discussion](https://scionproto.slack.com/archives/C8ADA9CEP/p1720431398661119), it turns out that: \r\n> There is a fast recovery where we attempt to beacon a lot more frequently until we have beaconed successfully over the given interface\r\n\r\nThis is implemented in [here](https://github.com/scionproto/scion/blob/a1ed6246ecd6beae9c82544032de4f9fecab1058/control/beaconing/propagator.go#L324) in scionproto. There was just one note in the draft that got removed in #42. We should re-add this, together with some clarifications, especially in the _Effects of Clock Inaccuracy_ and _Path Discovery Time and Scalability_ sections.\r\n\r\nSome points to be addressed were reported by @tzaeschke [here](https://github.com/scionassociation/scion-cp_I-D/pull/42#issuecomment-2211084556): \r\n\r\n> ### Storing and Selecting Candidate PCBs\r\n>- `Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].`\r\n>   - Is this true? It appears to conflict with many other parts of the document that talk about propagation intervals in the contect of cold-start.\r\n>   - Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n>   - Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively\r\n>     forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths? \r\n>   - What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths\r\n    coming in all the time that need to be forwarded immediately, or not?\r\n    \r\n> ### Effects of Clock Inaccuracy\r\n> - `PCBs are propagated at a configurable interval (typically, one minute).`\r\n>   - Unless they are new, then the interval is ignored, see \"immediate cold-start PCB forwarding\".\r\n>   - Maybe rephrase: \"(typically, one minute)\" ---> \"immediately for new beacons, minimum 5secs for intra-ISD, minimum one minute for inter-ISD\"?\r\n\r\n> ### Path Discovery Time and Scalability {#scalability}\r\n> - `Generally, the time until a specific PCB is built depends on its length and the propagation interval.`? \r\n>   - I think in the context of \"cold boot\u00a8, the propagation delay is \"0\", see \"immediate cold-start PCB forwarding\".\r\n>- `PCB arrives at a random point in time during the interval and is buffered before potentially being propagated`\r\n>  - see \"immediate cold-start PCB forwarding\"\r\n>  - Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n\r\n>### Intra-ISD Beaconing\r\n\r\n>- `Otherwise, child ASes at distance D below the new link, learn of the new link after D further propagation steps`\r\n>   - New path: \"immediate cold-start PCB forwarding\"\r\n    \r\n\r\n>### Inter-ISD Beaconing\r\n\r\n>- `On a cold start of the network, [...]. With a 5 second propagation period [...]`\r\n>   - Above it says that bootstrapping results in immediatede forwarding, see \"immediate cold-start PCB forwarding\".\r\n\r\n>- `When a new link is added to the network, it will be available to connect two ASes at distances from the link D1 and D2 from the link, respectively, after a mean time (D1+D2)*T/2.`\r\n>  - Also: see previous point about \"immediate cold-start PCB forwarding\"",
      "createdAt": "2024-07-08T16:09:42Z",
      "updatedAt": "2024-07-18T21:23:26Z",
      "closedAt": "2024-07-18T21:23:26Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Handled in #49 ",
          "createdAt": "2024-07-18T21:23:26Z",
          "updatedAt": "2024-07-18T21:23:26Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "I_kwDOJx2-rs6O67LK",
      "title": "Anapaya review",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/50",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "shitz"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "Following the first wave of ISE feedback, we did quite some work, especially on the control plane draft:\r\n\r\nPlease review (sorted by urgency): \r\n- #63 \r\n- 2.3.3.  Effects of Clock Inaccuracy\r\n-  2.4.  Path Discovery Time and Scalability\r\n-  5.  Security Considerations\r\n- Control Service gRPC API (appendix)\r\n\r\n\r\nOther pointers:\r\n- [Changelog](https://github.com/scionassociation/scion-cp_I-D/releases/tag/draft-dekater-scion-controlplane-04)\r\n- [Datatracker diff v-03 to main](https://author-tools.ietf.org/api/iddiff?doc_1=draft-dekater-scion-controlplane-03&url_2=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt) \r\n\r\n@shitz @oncilla @sgmonroy could one of you have a look at the overall changes and provide some feedback? If you feel, you can  directly open a PR.  We are planning to have a new submission when datatracker reopens\u00a0on 21.07, before our panrg session to address #48 , and it would be great if we could also incorporate some of your feedback.\r\n\r\n  \r\n\r\n",
      "createdAt": "2024-07-09T10:31:37Z",
      "updatedAt": "2024-10-18T11:27:15Z",
      "closedAt": "2024-10-18T11:27:15Z",
      "comments": [
        {
          "author": "oncilla",
          "authorAssociation": "NONE",
          "body": "> The expiration of a SCION AS certificate typically ranges from\t\r\n \t   3h to 5 years.\r\n \t   \r\n \r\nWhere does this number come from. Most typically it is 3days, and in some very special cases we have 5 days.\r\nI have never seen 5 years outside of some private ISDs\r\n\r\n\r\n",
          "createdAt": "2024-10-07T16:28:19Z",
          "updatedAt": "2024-10-07T16:28:19Z"
        },
        {
          "author": "oncilla",
          "authorAssociation": "NONE",
          "body": ">  Once\t\r\n \t   this number grows above the maximum recommended best PCBs set size of\t\r\n \t   50, \r\n \t   \r\nWhere does this number come from? \r\nDefault is 20. AFAIK:\r\nhttps://github.com/scionproto/scion/blob/aa917bb458d6675efc55b4a23fda2c694094553e/control/beacon/policy.go#L43\r\n\r\n\r\n",
          "createdAt": "2024-10-07T16:38:19Z",
          "updatedAt": "2024-10-07T16:38:19Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> > The expiration of a SCION AS certificate typically ranges from\r\n> > 3h to 5 years.\r\n> \r\n> Where does this number come from. Most typically it is 3days, and in some very special cases we have 5 days. I have never seen 5 years outside of some private ISDs\r\n\r\nThis comes from https://github.com/scionassociation/scion-cp_I-D/commit/297e8d2c828228e22542cd27c6b708f29586a440  @jiceatscion do you have more background?\r\n\r\n@oncilla you're right, in the PKI draft we write `The RECOMMENDED maximum validity period of a CP AS certificate is: 3 days.` I don't think, however, we set an upper bound to the validity. \r\n\r\nI see two action items: \r\n\r\n- [ ] Correct CP draft to say \"3h to 5 _days_\".\r\n- [ ] Shall we set an upper bound for validity in the PKI draft? Or alternatively say that validity may be up to 5 days instead of 3? ",
          "createdAt": "2024-10-08T07:51:36Z",
          "updatedAt": "2024-10-08T07:51:36Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "The comes from the first version of the draft: https://github.com/scionassociation/scion-cp_I-D/commit/b652927759ca8f6c8767cc9e3ef44a71b0702f23\r\n\r\n> > Once\r\n> > this number grows above the maximum recommended best PCBs set size of\r\n> > 50,\r\n> \r\n> Where does this number come from? Default is 20. AFAIK: https://github.com/scionproto/scion/blob/aa917bb458d6675efc55b4a23fda2c694094553e/control/beacon/policy.go#L43\r\n\r\nIt comes from the initial version of the draft: \r\nhttps://github.com/scionassociation/scion-cp_I-D/commit/b652927759ca8f6c8767cc9e3ef44a71b0702f23\r\nI could not find where this comes from \r\n\r\n@jiceatscion I'd skim through #46 that has some considerations from ETH on beaconing ",
          "createdAt": "2024-10-08T08:12:11Z",
          "updatedAt": "2024-10-08T09:04:44Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > Once\r\n> > this number grows above the maximum recommended best PCBs set size of\r\n> > 50,\r\n> \r\n> Where does this number come from? Default is 20. AFAIK: https://github.com/scionproto/scion/blob/aa917bb458d6675efc55b4a23fda2c694094553e/control/beacon/policy.go#L43\r\n\r\nThese numbers aren't described as recommended values, but as recommended maxima. It came from some back-of-the-envelope calculations made by Matthias and used as worst-case examples in the scalability/Intra-ISD Beaconing section.\r\n\r\nThe code says the default is 20, but then, that isn't a recommended value, just a mechanical place holder: it is 20 even for a core AS (if I managed to follow the code), which, wouldn't be such a good idea, would it?\r\n\r\nI'll try and clarify that notion in the text.\r\n",
          "createdAt": "2024-10-08T11:41:53Z",
          "updatedAt": "2024-10-08T12:28:56Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > The expiration of a SCION AS certificate typically ranges from\r\n> > 3h to 5 years.\r\n> \r\n> Where does this number come from. Most typically it is 3days, and in some very special cases we have 5 days. I have never seen 5 years outside of some private ISDs\r\n\r\nI have no recollection. In all likeliness I was looking for the maximum range ever used and someone must have mentioned the existence the 5y case. If that is such an outlier, I can change the text to emphasize what the reasonable range is.",
          "createdAt": "2024-10-08T12:39:16Z",
          "updatedAt": "2024-10-08T12:39:16Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > > The expiration of a SCION AS certificate typically ranges from\r\n> > > 3h to 5 years.\r\n> > \r\n> > \r\n> > Where does this number come from. Most typically it is 3days, and in some very special cases we have 5 days. I have never seen 5 years outside of some private ISDs\r\n> \r\n> This comes from [297e8d2](https://github.com/scionassociation/scion-cp_I-D/commit/297e8d2c828228e22542cd27c6b708f29586a440) @jiceatscion do you have more background?\r\n> \r\n> @oncilla you're right, in the PKI draft we write `The RECOMMENDED maximum validity period of a CP AS certificate is: 3 days.` I don't think, however, we set an upper bound to the validity.\r\n> \r\n> I see two action items:\r\n> \r\n>     * [ ]  Correct CP draft to say \"3h to 5 _days_\".\r\n> \r\n>     * [ ]  Shall we set an upper bound for validity in the PKI draft? Or alternatively say that validity may be up to 5 days instead of 3?\r\n\r\nAs usual, I can take a Jesuitic approach and make a distinction between common and recommended. That way we leave the pki draft and its recommendation of 3 days alone. In the cp draft I will made the same recommendation and mention 5 days as an outlier. Let's forget the 5y.\r\n",
          "createdAt": "2024-10-08T12:44:35Z",
          "updatedAt": "2024-10-08T12:44:35Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOJx2-rs6QF1Ae",
      "title": "Wormhole attack: mention proof of transit as a defense",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/52",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-18T21:24:58Z",
      "updatedAt": "2024-07-21T00:59:45Z",
      "closedAt": "2024-07-21T00:59:44Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "False alarm, we already discuss this in the data plane section `5.2.1.  Modification of the Path Header`",
          "createdAt": "2024-07-21T00:59:44Z",
          "updatedAt": "2024-07-21T00:59:44Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOJx2-rs6Qjl2o",
      "title": "MTU - clarifications",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/57",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "romshark",
        "nicorusti"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "> Feedback Harald Alvestrand\r\n> The description of SCION refers to using UDP/IP as the internal substrate inside an AS, and as a framing protocol on inter-AS links. This means that the Internet MTU of 1500 bytes (1200 for IPv6) will be in effect.\r\nPath hops take 12 bytes + a couple of \u201csegment headers\u201d of 16 bytes - which means that a 10-hop, 3-segment path will take 168 bytes for the routing information. This is enough to reduce the MTU significantly, and the MTU will be unpredictable and maybe variable, since the path for a given packet may change dynamically.\r\n(The packet format, like UDP\u2019s, permits 68K-byte packets. However, fragmentation is A Thing.)\r\n\r\nAlso, I find this text is not clear: \r\n```\r\n mtu: The size of the maximum transmission unit (MTU) within the\r\n      current AS's network.\r\n```\r\nShoudln't this be the minimum MTU among alll intra-domain links in the AS (so the maximum supported MTU for intra-domain forwarding)? Maybe we can find a better wording\r\n\r\nRelated issues: \r\n* DP draft: https://github.com/scionassociation/scion-dp_I-D/issues/39\r\n* Implementations: https://github.com/scionproto/scion/issues/2608 ",
      "createdAt": "2024-07-23T13:38:45Z",
      "updatedAt": "2025-07-16T09:22:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Regarding MTUs in the control plane, I would suggest the following:\r\n\r\nI would add a section 3.4.  Paths MTU, saying something like this. Here, I am creating new material. My only reference is the scion daemon which makes exactly these assumptions:\r\n\r\n> Paths represent a sequence of ASes and inter-AS links; each with possibly different MTUs. As a result, a path has an effective MTU which is the least of the MTUs of each link and ASes it traverses. The relevant MTUs for calculating a path's effective MTU are available from the segments used in its construction:\r\n> \r\n> - The MTU of the first and last ASes (represented by the mtu field of the corresponding AS Entries)\r\n> - The MTU of each inter-AS link or peering link (indicated by the ingress_mtu field of each hop or the peer_mtu field of each Peer Entry used)\r\n> - The MTU of any intra-AS network traversed if the ingress and egress interfaces of a hop exist on two different border routers\r\n> \r\n> Regarding the later point: A scion host using a path segment has no means of knowing whether a given hop implies traversing the corresponding AS' internal network or not, and the control service does not reduce the hop's MTU when that is the case. As a result, a scion host building a path must assume that all hops are constrained by the AS's internal network MTU.\r\n>\r\n> This could be optimized if the control service was required to make the hop's ingress_mtu field no greater than the MTU of the AS in case of a hop crossing the internal network. However existing implementations have not historically done this.\r\n\r\nIn section 2.2.1.4.2 AS Entry Signed Body, describe the mtu field as follows:\r\n\r\n> The maximum transmission unit (MTU) that is supported by all hosts within the AS being described. This is set by the control service adding the entry to the beacon. How the control service obtains this information is implementation dependent. Current practice is do make it a configuration item.\r\n\r\nIn section 2.2.1.5 Hop Entry, describe the ingress_mtu field as follows:\r\n\r\n> Specifies the maximum transmission unit (MTU) of the ingress interface (in beaconing direction) of the hop being described. Packets traveling through the associated inter-AS link in either direction cannot exceed this size (not including the L2 header). As a result, no path segment constructed from the containing beacon can have an MTU greater than this. How the control service obtains the MTU of an inter-AS link is implementation depend. It may be discovered or configured. Current practice to make it a configuration item.\r\n\r\n\r\nIn section 2.2.1.7 Peer Entry, describe the peer_mtu field as follows:\r\n> Specifies the maximum transmission unit (MTU) of the peering link being described. Packets traveling through this link in either direction cannot exceed this size (not including the L2 header). As a result, no path segment constructed from the containing beacon can have an MTU greater than this. How the control service obtains the MTU of an inter-AS link is implementation depend. It may be discovered or configured. Current practice to make it a configuration item.\r\n",
          "createdAt": "2024-09-18T10:06:58Z",
          "updatedAt": "2024-09-18T14:35:50Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Great description, feel free to open a PR, and then I'd just do a bit of a wording pass. \r\n\r\nIN section  3.4. Paths MTU maybe you could add references to the various MTU fields (in  2.2.1.4.2 AS Entry Signed Body,  2.2.1.5 Hop Entry,  2.2.1.7 Peer Entry)\r\n\r\n> the control service does not reduce the hop's MTU when that is the case. As a result, a scion host building a path must assume that all hops are constrained by the AS's internal network MTU. \r\n\r\nIn this section, I'd refer to to current implementations rather than control service.\r\n\r\n> not including the L2 header \r\n\r\nL2 --> Underlay/lower layer protocol\r\n\r\n",
          "createdAt": "2024-09-19T15:57:21Z",
          "updatedAt": "2024-09-19T15:57:31Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> L2 --> Underlay/lower layer protocol\r\n\r\nHmm, yes. We need to be clearer with this. The SCION network layer cannot know if any link on the path has a UDP/IP encapsulation, so the MTU described in segments should measure the payload of the encapsulated packet if encapsulated. => for raw L2: real L2 MTU; for V4 underlay: real L2 MTU - 28; for v6 underlay: real  L2 MTU - 48\r\n\r\nI'll try and clarify this concisely. Making a PR now.\r\n",
          "createdAt": "2024-09-20T09:00:58Z",
          "updatedAt": "2024-09-20T09:01:09Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "is the MTU directional? Does it affect path reversal (in terms of how endpoints calculate it)?\n[Slack discussion](https://scionproto.slack.com/archives/C8ADA9CEP/p1750842088078769).\n\n- [ ] Clarify this point in 4.4.  Path MTU\n- [ ] Add a cross reference in 2.2.1.5.  Hop Entry pointing to 4.4.  Path MTU\n- [ ] Check if we need to update anything in the DP draft in 5.1.  MTU \n- [ ] Do we need to say something about MTU in 5.  Path Lookup? \n\n### Feedback Alvaro: \n\n```\n...\n1409\t2.2.1.5.  Hop Entry\n...\n1439\t   *  ingress_mtu: Specifies the maximum transmission unit (MTU) of the\n1440\t      ingress interface (in beaconing direction) of the hop being\n1441\t      described.  The MTU of paths constructed from the containing\n1442\t      beacon is necessarily less than or equal to this value.  How the\n1443\t      control service obtains the MTU of an inter-AS link is\n1444\t      implementation dependent.  It may be discovered or configured.\n1445\t      Current practice to make it a configuration item.\n\n[] \"in beaconing direction\"\n```\n\n> Does this imply that the MTU in the opposite direction can be different?  If so, how is the reversible nature of the paths maintained?  Or is the reversible property only applicable to the fact that a path exists, and not that the characteristics are the same?\n",
          "createdAt": "2025-06-25T08:52:31Z",
          "updatedAt": "2025-06-25T10:17:38Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yeah, good point. I propose to clarify it along the following lines:\n\n \"ingress interface MTU\" means the MTU of that interface in both directions (which should be defined as the least of the MTU in either directions). It is the interface that is \"ingress\" not the MTU. The term \"ingress interface in construction direction\" is just a way to designate the interface relative to the path. Not the direction of traffic.",
          "createdAt": "2025-06-27T08:06:13Z",
          "updatedAt": "2025-06-27T08:06:13Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Other feedback from Alvaro: \n\n\n...\n> > 1659 In addition, the maximum MTU supported by all intra-AS links MAY be\n> > 1660 configured. Last, the AS SHOULD adopt a PCB selection policy that it\n> > 1661 does not accidentally isolate the AS from the network, i.e., such\n> > 1662 that it does not block connectivity to parent providers and that\n> > 1663 ensures downstream connectivity for children. For more details, see\n> > 1664 Section 2.3.3.\n> >\n> > [] \"MTU...MAY be configured\"\n> >\n> > This Normative statement contradicts the specifications in \u00a72.2.* where it \n> > says that it is \"implementation dependent\u201d.\n> \n> In 2.2 we say: \"How the control service obtains the MTU of an inter-AS link \n> is implementation dependent. It may be discovered or configured. Current\n> practice to make it a configuration item.\u201d. I think this is not contradicting\n> with \"MTU...MAY be configured\u201d. What we wanted to convey there is that\n> configuring the MTU is optional, as an operator could leverage some form of\n> discovery, or pre configure it.\n\nRight.  My point is that rfc2119 talks about using Normative language when the action is important for interoperability.  In this case, because the nodes can do anything (\"implementation dependent\"), there's not really an option.  If there was an option, it would be between configuring and what?  Even if \u00a72.2 mentions \"discovered or configured\", it is not enforcing/requiring one or the other.\n\n[Sorry, just being extra picky on Normative language stuck with me from my AD days...]\n",
          "createdAt": "2025-07-02T16:17:16Z",
          "updatedAt": "2025-07-02T16:17:16Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I discussed this with @jiceatscion today, we should write that when using path reversibility, the endpoint using it has to estimate MTU for the reverse path. Options include either use some form of MTU discovery, estimate MTU from the largest packet received, do a reverse path lookup. ",
          "createdAt": "2025-07-16T09:19:26Z",
          "updatedAt": "2025-07-16T09:19:26Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOJx2-rs6RBb0Z",
      "title": "General review - remove forward references",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/58",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": "Twin issues: \r\n- https://github.com/scionassociation/scion-dp_I-D/issues/45\r\n- https://github.com/scionassociation/scion-cppki_I-D/issues/36\r\n\r\n\r\n- [x] @knmeynell update terminology and de-hyphenate as in https://github.com/scionassociation/scion-dp_I-D/pull/51\r\n- [x] @nicorusti general re-read through the draft",
      "createdAt": "2024-07-26T22:50:16Z",
      "updatedAt": "2024-10-17T17:32:37Z",
      "closedAt": "2024-10-17T17:32:37Z",
      "comments": []
    },
    {
      "number": 61,
      "id": "I_kwDOJx2-rs6V3vv2",
      "title": "beaconing: the grpc protobufs are described, but not the errors",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/61",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [],
      "body": "Eventhough the Beacon() call does not admit any response, it can still return errors.\r\nA grpc call signatue is (in Go syntax) \"func Call(request) Response, error\". So we need to describe error.\r\nWe should probably check other APIs for the same oversight.\r\n",
      "createdAt": "2024-09-09T16:38:09Z",
      "updatedAt": "2024-09-19T17:33:24Z",
      "closedAt": "2024-09-19T17:33:24Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Current text: \r\n```\r\n2.3.2.4.  Propagation of PCBs in Protobuf Message Format\r\n\r\n   The last step of the above described core and intra-ISD propagation\r\n   procedures is implemented as follows in Protobuf message format:\r\n\r\n      service SegmentCreationService {\r\n          rpc Beacon(BeaconRequest) returns (BeaconResponse) {}\r\n      }\r\n\r\n      message BeaconRequest {\r\n          PathSegment segment = 1;\r\n      }\r\n\r\n      message BeaconResponse {}\r\n\r\n   The propagation procedure includes the following elements:\r\n\r\n   *  SegmentCreationService: Specifies the service via which the\r\n      extended PCB is propagated to the control service of the\r\n      neighboring AS.\r\n\r\n      -  Beacon: Specifies the method that calls the control service at\r\n         the neighboring AS in order to propagate the extended PCB.\r\n\r\n   *  BeaconRequest: Specifies the request message sent by the Beacon\r\n      method to the control service of the neighboring AS.  It contains\r\n      the following element:\r\n\r\n      -  PathSegment: Specifies the path segment to propagate to the\r\n         neighboring AS.  For more information on the Protobuf message\r\n         type PathSegment, see Section 2.2.1.1.\r\n\r\n   *  BeaconResponse: Specifies the response message from the\r\n      neighboring AS.\r\n```\r\n\r\n\r\n\r\n>   BeaconResponse: Specifies the response message from the\r\n      neighboring AS. \r\n\r\nWe could say a bit more than this",
          "createdAt": "2024-09-10T09:43:59Z",
          "updatedAt": "2024-09-10T09:44:38Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOJx2-rs6Y19go",
      "title": "Add changelog in appendix",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/64",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "",
      "createdAt": "2024-10-03T14:56:20Z",
      "updatedAt": "2024-10-11T14:43:40Z",
      "closedAt": "2024-10-11T14:43:40Z",
      "comments": []
    },
    {
      "number": 67,
      "id": "I_kwDOJx2-rs6Y82gT",
      "title": "gRPC API - remove duplicated definitions in appendix",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/67",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "Prio 2"
      ],
      "body": "With #24 we introduced a description of the gRPC CP API in the appendix.  However, with this, some definitions are duplicated. For example, `ASEntrySignedBody` is defined in both `2.2.1.4.2.  AS Entry Signed Body` and in the appendix. \r\n \r\nTODO: \r\n- [x] evaluate wether we leave the gRPC API descriptions all in the appendix or in various paragraphs --> we leave them in both places\r\n- [ ] ~some gRPC definitions are duplicated, duplicates should be removed (preferably, leave them in the respective chapters rather than in appendix). A non-exhaustive list:~\r\n  - `SegmentType`\r\n  - `SegmentsRegistrationRequest`\r\n  - `SegmentCreationService`\r\n  - `BeaconRequest`\r\n  - `BeaconResponse`\r\n  - `PathSegment`\r\n  - `SegmentInformation`\r\n  - `ASEntry`\r\n  - `ASEntrySignedBody`\r\n  - `HopEntry`\r\n  - `PeerEntry`\r\n  - `HopField`\r\n  - `SignedMessage`\r\n  - `Header`\r\n  - `HeaderAndBodyInternal`\r\n  - `VerificationKeyID`\r\n- [x] make sure there are proper cross-references to the respective gRPC requests For example: \r\n  - `SegmentsRequest` right now it is not clear which requests are used for path lookups by endpoints, e.g. we should mention that an endpoint sends a `SegmentsRequest` to its path server.\r\n  - `SegmentsResponse`\r\n  - `SignatureAlgorithm`\r\n- [x] We sometimes call the API descritpions in the text \"on Code-Level\", we should use a better wording (e.g. gRPC API)\r\n- [x] check descriptions and typos  (e.g. `// This API is exposed by the control services of core ASes expose this on the SCION dataplane and also by all`",
      "createdAt": "2024-10-04T10:58:56Z",
      "updatedAt": "2025-07-16T09:23:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am not sure we should de-duplicated the APIs between text and index. The APIs in the text are for explanation purposes while the appendix is for reference. The appendix is there to make sure that we document the whole API. If we de-duplicate, then what do we name the appendix: \"Those bits and pieces that we haven't mentioned somewhere in the document already\"? That's not nice to future users of the spec.",
          "createdAt": "2024-10-04T11:38:47Z",
          "updatedAt": "2024-10-04T11:38:47Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I tried my best. Probably missed a spot or two.\r\nThere weren't many opportunities to reference the appendix. Most places had enough documentation in-line.\r\nI couldn't remember if there was anything missing from the appendix. Was there?",
          "createdAt": "2024-10-04T16:59:58Z",
          "updatedAt": "2024-10-04T16:59:58Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Reopening this because in #125 I bumped into some oddities that are partially due to duplicated definitions. Before remembering of this issue, I even re-analyzed the draft for duplicates, highlighted: [SCION Control Plane-08-grpc.pdf](https://github.com/user-attachments/files/21021922/SCION.Control.Plane-08-grpc.pdf)\n\nI will also ask Alvaro what he thinks about removing duplicates..",
          "createdAt": "2025-07-02T16:20:40Z",
          "updatedAt": "2025-07-02T16:20:40Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "I_kwDOJx2-rs6atI-r",
      "title": "2.3.1.2.  Selection Policy Example needs review",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/72",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell",
        "jiceatscion"
      ],
      "labels": [
        "enhancement",
        "Prio 1",
        "needs-discussion",
        "design"
      ],
      "body": "This section IMHO does not clarify how an AS makes a choice, and why it does not pick A-D-F-H-J or C-E-G-I-J in the example. \r\nSee [comments nico (PDF)](https://github.com/user-attachments/files/17421282/scan-2.pdf)\r\n",
      "createdAt": "2024-10-17T19:07:44Z",
      "updatedAt": "2025-02-28T10:25:02Z",
      "closedAt": "2025-02-28T10:25:01Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've added the following to \"Selection Policy Example\":\n\nSome examples of path selection policies include:\n\n- BestSetSize - the recommended number of segments to propagate or register.\n- CandidateSetSize - the maximum number of segments to consider for selection.\n- MaxExpTime - the maximum value for the expiration time when extending the segment.\n- MaxHopsLength - the maximum number of hops a segment can have.\n- ASBlackList - the ASes that may not appear in a segment.\n- IsdBlackList - the ISDs that may not appear in segment.\n- AllowIsdLoop - indicates whether ISD loops should not be filtered.\n\nDiscuss...",
          "createdAt": "2025-02-06T10:09:06Z",
          "updatedAt": "2025-02-06T10:09:06Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@jiceatscion can you check how the OS handles disjointness?",
          "createdAt": "2025-02-18T10:21:21Z",
          "updatedAt": "2025-02-18T10:21:21Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The propagator choses what N beacons to propagate out of those in store. The criteria are:\n\n* Certificates available to verify\n* Length\n* Diversity\n\nIn that order.\n\nOnce we have only verifiable beacons, we single out the N shortest and then replace the last one with a diversity choice. Diversity is a comparative metric: beacon A has a diversity score over beacon B (and that's not commutative). The score is the number of links in A that don't appear in B. Our diversity choice is the beacon not among the shortest that is the most diverse (so, basically most different) from the very shortest one. If there is no better than what is already in the set, then the shortest of the not yet selected ones is chosen instead (so, the last one from the original best stays in the set after all). Btw, the implementation of the diversity computation is plainly quadratic.\n\nSource: https://github.com/scionproto/scion/blob/17a6ae17acea14f7fb9c546ce5e4da1187908bb6/control/beacon/selection_algo.go#L41\n",
          "createdAt": "2025-02-21T11:54:25Z",
          "updatedAt": "2025-02-21T11:58:32Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Resolved in #94 ",
          "createdAt": "2025-02-28T10:25:01Z",
          "updatedAt": "2025-02-28T10:25:01Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "I_kwDOJx2-rs6azdki",
      "title": "Make text representation of AS numbers more precise",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/73",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": "We now have: \r\n```\r\nThe ISD-AS number is a SCION-specific number consisting of 64 bits: the top 16 bits indicating the ISD, and the bottom 48 bits indicating the AS. The text representation uses a dash separator between the ISD and AS numbers, e.g. `4-ff00:1:f`.\r\n```\r\n\r\nThis should be integrated with details from  https://github.com/scionproto/scion/wiki/ISD-and-AS-numbering . We need this to be precise as this is referenced by the PKI draft in section \"`ISD-AS number` Attribute\", and it must coincide with the way the field is \"printed\" in the cert. \r\n\r\n\r\n\r\n",
      "createdAt": "2024-10-18T10:46:26Z",
      "updatedAt": "2024-10-18T12:13:47Z",
      "closedAt": "2024-10-18T12:13:47Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What do you mean by \"should be integrated\"? Isn't the draft supposed to be authoritative? Both docs say the same thing, with the exception of how the decimal representation is supported: the draft says that the decimal representation is allowed for human consumption. The wiki says that programs always use it when talking to humans. Is that what the problem could be for PKI?\r\n ",
          "createdAt": "2024-10-18T11:04:20Z",
          "updatedAt": "2024-10-18T11:04:20Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "FOr the records, this is the text that I removed from the PKI draft ([PR](https://github.com/scionassociation/scion-cppki_I-D/pull/47)) to be replaced with a reference to the CP draft: \r\n```\r\n- The canonical string representation uses a dash separator between the ISD and AS numbers.\r\n- The ISD numbers are formatted as decimal.\r\n- The canonical string formatting of AS numbers in the BGP AS range (0, 2<sup>32-1</sup>) is the decimal form. Larger AS numbers, i.e., from 2<sup>32</sup> to 2<sup>48-1</sup>, use a 16-bit, colon-separated, lower-case, hex encoding with leading zeros omitted: `1:0:0` to `ffff:ffff:ffff`.\r\n\r\n**Example:** AS `ff00:0:110` in ISD `1` is formatted as `1-ff00:0:110`.\r\n```\r\n",
          "createdAt": "2024-10-18T11:21:40Z",
          "updatedAt": "2024-10-18T11:22:00Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "I_kwDOJx2-rs6lgWSF",
      "title": "Abstract - rework ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/83",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [],
      "body": "Include: \r\n> This document contains new approaches to secure path aware networking.  However, it is not an Internet Standard, nor has it received any formal review of the IETF, nor was the work developed through the rough  consensus process.  The approaches offered in this work are offered to the community for its consideration in further evolution of the Internet.\r\n",
      "createdAt": "2025-01-09T02:51:00Z",
      "updatedAt": "2025-02-04T12:28:23Z",
      "closedAt": "2025-02-04T12:28:08Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Have revised the abstract.",
          "createdAt": "2025-01-26T11:20:48Z",
          "updatedAt": "2025-01-26T11:20:48Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Added in #85 ",
          "createdAt": "2025-02-04T12:28:22Z",
          "updatedAt": "2025-02-04T12:28:22Z"
        }
      ]
    },
    {
      "number": 88,
      "id": "I_kwDOJx2-rs6otxL3",
      "title": "Introduction: clarify wording and mention security properties",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/88",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Base on feedback received from David Galan:\n\nIn the introduction, However, the intended security properties could be made clearer. We propose some minor changes to the introduction:\n## Language and Terminology:\n- [x] Change \"higher levels of trust\" ([in \"Security\" paragraph](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1-4)) to \"higher levels of trustworthiness\".\n\n## Structural Issues:\n- [x] Remove duplicate paragraphs ([paragraph 11](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1-11)) about SCION architecture's initial development.\n- [x] In \"This document provides an extensive [\u2026]\" ([para. 13](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1-13)), replace \"This document\" with \"That document\" to distinguish references to the Data Plane and the Control Plane I-Ds.\nTechnical Precision:\nReplace \"accumulates path segments\" ([\u00a71.1 para. 14](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.1-14)) to \"accumulates a path segment\".\n- [x] In the \"valley free paths\" description ([\u00a71.3 para. 5](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.3-5)), clarify that a valley free path is one that does not carry transit traffic from a parent AS to another parent AS. The current phrasing may be incorrectly interpreted to mean that traffic flowing normally from parents to children also forms a valley.\n- [x] From \"All path segments may be inverted\" ([\u00a71.4.1 para. 4](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.4.1-4)) onwards, replace occurrences of \"inverted\" with \"reversed\" consistently.\n\n## Organizational Suggestion:\n- [x] Move the explanation \u201cA range of AS numbers can be shortened with a notation similar to the one used for CIDR IP ranges ([RFC4632])\" ([\u00a71.5.4.2 para. 4](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.5.4.2-2.3.1)) so that it appears before [Table 2](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#table-2), where this notation is used.\n\n- [x] Furthermore, as detailed in question B, we identify a need for more comprehensive discussion security and correctness properties of the Control Plane. While the current introduction briefly mentions security aspects and mentions valley freedom, we suggest that it also mentions the properties proposed in this review. --> Add a reference to a new security properties section after #89  is solved",
      "createdAt": "2025-02-04T15:18:10Z",
      "updatedAt": "2025-02-21T17:07:44Z",
      "closedAt": "2025-02-21T17:07:44Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "_In \"This document provides an extensive [\u2026]\" ([para. 13](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1-13)), replace \"This document\" with \"That document\" to distinguish references to the Data Plane and the Control Plane I-Ds._\n\nNot sure that I understand this. The usage of 'this document' seems correct throughout. ",
          "createdAt": "2025-02-18T10:33:35Z",
          "updatedAt": "2025-02-18T10:33:35Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "_Replace \"accumulates path segments\" ([\u00a71.1 para. 14](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.1-14)) to \"accumulates a path segment\"._\n\nDoes a PCB add path segments as it traverses a network, or just adds one path segment each time? If the former, then the current wording would seem correct.",
          "createdAt": "2025-02-18T10:35:49Z",
          "updatedAt": "2025-02-18T10:35:49Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "_Move the explanation \u201cA range of AS numbers can be shortened with a notation similar to the one used for CIDR IP ranges ([RFC4632])\" ([\u00a71.5.4.2 para. 4](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.5.4.2-2.3.1)) so that it appears before [Table 2](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#table-2), where this notation is used._\n\nShould the whole 'Text Representation' section be moved to after the SCION AS number introduction, and before 'Special Purpose AS numbers'?",
          "createdAt": "2025-02-18T10:46:48Z",
          "updatedAt": "2025-02-18T10:46:48Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> _Replace \"accumulates path segments\" ([\u00a71.1 para. 14](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-06.html#section-1.1-14)) to \"accumulates a path segment\"._\n> \n> Does a PCB add path segments as it traverses a network, or just adds one path segment each time? If the former, then the current wording would seem correct.\n\nRight, a PCB actually accumulates Hop Fields, not segments. I reworded into: \n\"These PCBs traverse each AS accumulating information, including Hop Fields (HFs) which can subsequently be used for traffic forwarding.\"",
          "createdAt": "2025-02-21T15:56:05Z",
          "updatedAt": "2025-02-21T15:57:01Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDOJx2-rs6ourYs",
      "title": "Security considerations: add assumptions and security properties",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/89",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "- [x] Subsection 2.2.4. \"Configuration\u201d should also mention that interface identifiers must be unique within an AS\n- [x] Clarify that an ISD MUST have at least one Core AS (e.g. in 2.1.  Introduction and Overview )\n- [x] Clarify if loop avoidance needs some editing (what David calls \"cyclic relationships\")\n\nAdd a new subsection (6.1) in security considerations: \n- [x] Assumptions (briefly summarize points in 1 below)\n- [x] \"Intended Security properties\" (based on points in 2 below, then add a reference in the intro)\n\n--- \nBase on feedback received from David Galan:\n\n1. We propose that assumptions about the network and the behaviour of honest ASes are made more explicit. We would be happy to help with a specific list of assumptions:\n\n- In our formal model, we assume that the network of physical links is such that no ISD is internally partitioned (i.e., each AS in an ISD can reach every other AS in the same ISD), --> See #46 \n- every ISD has at least one core AS, and\n- customer-provider relationships (and related links) form a unidirectional hierarchical topology without cyclic relationships (i.e., they form a directed acyclic graph).\n\nAn AS is called honest if its long-term keys are unknown to the attacker and it uses a unique interface identifier for each link. Let an honest path (resp., segment) be a path (resp., segment) which only traverses honest ASes.\n\nEven though this is explicitly stated elsewhere in the draft, perhaps Subsection 2.2.4. \"Configuration\u201d should also mention that interface identifiers must be unique within an AS.\n\n\n2.   Regarding correctness and security properties, we suggest inserting a new Subsection 6.1 \"Correctness and Security Properties\" in Section 6 \"Security Considerations\" containing precise descriptions in English prose that faithfully capture all the required details and avoid ambiguities.\n\nWe would be happy to contribute a list of candidate properties and their descriptions. These properties should be understood as carefully considered design goals.  Within our formal model, the properties considered so far are:\n- (Connectivity) For every pair of distinct honest ASes X and Y, such that there is at least one honest path in the network of physical links from X to Y, X will eventually register enough segments to build at least one path (of any length) leading to Y.\n- (Path Consistency) For every honest segment registered in any AS, its sequence of AS entries corresponds to a continuous path in the network of physical links. This property holds only if the network topology remains unchanged since the segment was first generated.\n- (Loop Freedom) For every honest segment registered in any AS, its sequence of AS entries (including current and next ISD-AS, as well as interfaces) contains no duplicates.\n- (Beacon Authorization) For every honest segment registered in any AS and any AS X appearing on that segment - - (except for the last one), AS X propagated a PCB corresponding to the segment prefix ending in its own entry to its successor AS on the segment.\n- (Path Discoverability) For every directed honest path in the network of physical links, where all traversed ASes permit forwarding, there exists at least one protocol execution that registers a segment containing or exactly matching this path. This property holds only when the involved physical links remain stable throughout the protocol execution.\n\nWe can offer formal expressions of the properties in Linear Temporal Logic (LTL), which is part of the IEEE 1850 Standard for Property Specification Language (PSL), as well as other formal artifacts such as a labeled transition system that describes the protocol behaviors. This may be a good fit for future work (e.g. in UFMRG).",
      "createdAt": "2025-02-04T16:56:24Z",
      "updatedAt": "2025-03-01T12:19:03Z",
      "closedAt": "2025-03-01T12:10:39Z",
      "comments": []
    },
    {
      "number": 90,
      "id": "I_kwDOJx2-rs6ou9Jm",
      "title": "Beaconing: clarify checks",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/90",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "jiceatscion"
      ],
      "labels": [
        "enhancement",
        "needs-discussion"
      ],
      "body": "- [x] Check if these checks are implemented @jiceatscion \n- [x] Do changes proposed in draft\n- [x] Clarify if last check (remote registration) is actually needed\n\nWork on checks at beaconing was previously done in #18 \n\n___ \nFeedback David Galan: \n3.  We propose that the local checks performed by each AS, necessary to ensure protocol correctness, are clarified. Currently, the draft requires that honest ASes validate the signatures in PCBs. However, honest ASes may accept malformed PCBs, even after a successful signature validation, unless they also perform some additional local checks. These local checks occur mainly in two key moments of the protocol:\n\n- (Reception) Subsection 2.3.2.1 \"Reception of PCBs\" details the local checks performed when an AS received a beacon propagated by another AS. We have synthesized a minimal set of additional checks that are required for protocol correctness, and we propose their inclusion in the I-D:\n\n    - (Cores) During core beaconing, the receiver Control Service must check every AS entry and discard PCBs that were propagated at any point (according to the `signed.header_and_body.body.isd_as' field) by a non-core AS.\n    - (Interfaces) If the received PCB was (a) last propagated by AS X (according to the `signed.header_and_body.body.isd_as' field of the last AS entry), and (b) was received through the local AS interface i (according to local knowledge of the Control Service), then the local knowledge of the receiver Control Service MUST agree that the link behind interface i indeed leads to AS X.\n    - (Continuity) When a PCB contains two or more AS entries, the receiver Control Service must check every AS entry except the last and discard beacons where the field `signed.header_and_body.body.next_isd_as' of an entry does not equal the field `signed.header_and_body.body.isd_as' of the next entry\n\n- (Remote registration) In subsection 4.1 \"Intra-ISD Path Segment Registration\" consider mentioning that, during remote registration (a phase of intra-ISD beaconing) of a PCB from an AS X into the database of an AS Y, AS Y must not accept the PCB if an AS other than Y generated it (field `signed.header_and_body.body.isd_as' of the first AS entry).",
      "createdAt": "2025-02-04T17:32:39Z",
      "updatedAt": "2025-07-09T10:24:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\n>     * (Reception) Subsection 2.3.2.1 \"Reception of PCBs\" details the local checks performed when an AS received a beacon propagated by another AS. We have synthesized a minimal set of additional checks that are required for protocol correctness, and we propose their inclusion in the I-D:\n>       \n>       * (Cores) During core beaconing, the receiver Control Service must check every AS entry and discard PCBs that were propagated at any point (according to the `signed.header_and_body.body.isd_as' field) by a non-core AS.\n\nNo. I do not think we check that anywhere. I am not even sure how can tell that a distant AS is or is not a core AS. In fact, is this not a locally chosen role?\n\n>       * (Interfaces) If the received PCB was (a) last propagated by AS X (according to the `signed.header_and_body.body.isd_as' field of the last AS entry), and (b) was received through the local AS interface i (according to local knowledge of the Control Service), then the local knowledge of the receiver Control Service MUST agree that the link behind interface i indeed leads to AS X.\n\nYes. This is implemented. (https://github.com/scionproto/scion/blob/17a6ae17acea14f7fb9c546ce5e4da1187908bb6/control/beaconing/handler.go#L55, https://github.com/scionproto/scion/blob/17a6ae17acea14f7fb9c546ce5e4da1187908bb6/control/beaconing/handler.go#L105)\n\n>       * (Continuity) When a PCB contains two or more AS entries, the receiver Control Service must check every AS entry except the last and discard beacons where the field `signed.header_and_body.body.next_isd_as' of an entry does not equal the field `signed.header_and_body.body.isd_as' of the next entry\n\nYes. This is implemented at pretty low level. (https://github.com/scionproto/scion/blob/17a6ae17acea14f7fb9c546ce5e4da1187908bb6/pkg/segment/seg.go#L100 -> https://github.com/scionproto/scion/blob/17a6ae17acea14f7fb9c546ce5e4da1187908bb6/pkg/segment/seg.go#173)\n\n>     * (Remote registration) In subsection 4.1 \"Intra-ISD Path Segment Registration\" consider mentioning that, during remote registration (a phase of intra-ISD beaconing) of a PCB from an AS X into the database of an AS Y, AS Y must not accept the PCB if an AS other than Y generated it (field `signed.header_and_body.body.isd_as' of the first AS entry).\n\nNo. I do not think we do that. I have found the verifications of the sender's signature, but not that down segments have been initiated locally. That would have been on the same code path. I looked hard but I might still have missed it. Not sure we actually consider this necessary.\n\n\n",
          "createdAt": "2025-02-21T15:03:30Z",
          "updatedAt": "2025-02-21T15:03:30Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> No. I do not think we check that anywhere. I am not even sure how can tell that a distant AS is or is not a core AS. In fact, is this not a locally chosen role?\n\nI think it makes sense that a core AS should never receive a beacon  from a non-core AS on a core link. It could check this, as core ASes are in the TRC. I think we could add this as a SHOULD, what do you think?\n\n\n> No. I do not think we do that. I have found the verifications of the sender's signature, but not that down segments have been initiated locally. That would have been on the same code path. I looked hard but I might still have missed it. Not sure we actually consider this necessary.\n\nI think this is necessary to guarantee what we call path authorization. So I think this should be checked somewhere.",
          "createdAt": "2025-02-25T16:51:40Z",
          "updatedAt": "2025-02-25T16:51:40Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > No. I do not think we check that anywhere. I am not even sure how can tell that a distant AS is or is not a core AS. In fact, is this not a locally chosen role?\n> \n> I think it makes sense that a core AS should never receive a beacon from a non-core AS on a core link. It could check this, as core ASes are in the TRC. I think we could add this as a SHOULD, what do you think?\n\nSHOULD is good. It might not be so easy: yes, a collection of accurately implemented and honest ASes will automatically prevent a non-core AS from beaconing a core segment. However when receiving a beacon from a properly core AS neighbor, it is not obvious that all ASes earlier in the beacon are all properly core ASes.\n\n> > No. I do not think we do that. I have found the verifications of the sender's signature, but not that down segments have been initiated locally. That would have been on the same code path. I looked hard but I might still have missed it. Not sure we actually consider this necessary.\n> \n> I think this is necessary to guarantee what we call path authorization. So I think this should be checked somewhere.\n\nAh, ok. I didn't realize that it added security. After all the whole segment's validity can be verified independently from how it was obtained, is it not? How does the fact that a segment is only served by its legitimate originator add any guarantee?\nI can imagine a CS not wanting to devote resources to storing segments that it has no business serving, but can't it?\n\nThat said, I take your word for it. Under that assumption, your writing is fine and I have approved the PR. I am only curious.\n",
          "createdAt": "2025-02-26T16:41:21Z",
          "updatedAt": "2025-02-26T16:43:58Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "\n> However when receiving a beacon from a properly core AS neighbor, it is not obvious that all ASes earlier in the beacon are all properly core ASes.\n\nWhy is it not obvious? The receiving CS could simply look at the ISD-AS entries in the AS entries of the PCB. Then it could compare them with a list of core ASes that it can easily get out of the TRCs. If it didn't have the TRC,  it would anyways not be able to verify the beacons. \nIn any case, I worded it `Additionally, core ASes SHOULD discard PCBs that were propagated at any point by a non-core AS.` and I see you approved the PR already :) \n\n\n \n> Ah, ok. I didn't realize that it added security. After all the whole segment's validity can be verified independently from how it was obtained, is it not? How does the fact that a segment is only served by its legitimate originator add any guarantee? I can imagine a CS not wanting to devote resources to storing segments that it has no business serving, but can't it?\n> \n> That said, I take your word for it. Under that assumption, your writing is fine and I have approved the PR. I am only curious.\n\nYou are right, this does not add much as the segments would anyways not work in the data plane (which is what we discuss as path authorization in the DP draft). Maybe we could change the line to SHOULD.\n\n\n",
          "createdAt": "2025-02-26T17:28:35Z",
          "updatedAt": "2025-02-26T17:28:35Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> Clarify if last check (remote registration) is actually needed\n\nLeaving open to check if someone responds to my slack [thread](https://scionproto.slack.com/archives/C8ADA9CEP/p1740679917948679) ",
          "createdAt": "2025-03-01T12:18:56Z",
          "updatedAt": "2025-03-01T12:18:56Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "On the last check, leaving a SHOULD and resolving.\n\nFrom Dominik:\n\n>  I think a SHOULD is fine here. But just that we are clear. The segments will be useless, because no-one is going to ask for them  with the current lookup strategy\nFun fact: Originally, the ASes registered their down segments with all core ASes (or the cores synced amongst them :thinking_face:). But we later changed the lookup strategy to be easier to reason about.",
          "createdAt": "2025-03-19T11:00:59Z",
          "updatedAt": "2025-03-19T11:00:59Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Reopening following new feedback received from Alvaro on exactly this wording:\n\n- [ ] Decide if to change this into a MUST: `\"SHOULD discard PCBs that were propagated at any point by a non-core AS\"` or else lowercase it ([Slack thread](https://scionproto.slack.com/archives/C8ADA9CEP/p1752056667859509))\n- [ ] @nicorusti Respond to Alvaro\n- [ ] Clarify text ` MAY make a policy decision not to propagate beacons containing path segments that traverse the same ISD more..` by specifying that it refers to the same ISD bud different ASes\n- [ ] MAY make a policy decision ~not~ to propagate \n\n\n### Feedback Alvaro\n\n```\n1684\t   2.  Loop avoidance: If it is a core AS, the Control Service MUST\n1685\t       check whether the PCB includes duplicate hop entries created by\n1686\t       the core AS itself or by other ASes.  If so, the PCB MUST be\n1687\t       discarded in order to avoid loops.  This step is necessary\n1688\t       because core beaconing is based on propagating PCBs to all AS\n1689\t       neighbors.  Additionally, core ASes SHOULD discard PCBs that were\n1690\t       propagated at any point by a non-core AS.  Ultimately, core ASes\n1691\t       MAY make a policy decision not to propagate beacons containing\n1692\t       path segments that traverse the same ISD more than once as this\n1693\t       can be legitimate, e.g. if the ISD spans a large geographical\n1694\t       area, a path transiting another ISD may constitute a shortcut.\n```\n[] \"SHOULD discard PCBs that were propagated at any point by a non-core AS\"\n\nWhen is it ok not to discard these PCBs?  IOW, why is it not a requirement?\n> @nicorusti: The reason for a SHOULD here is implementation complexity. To complete this check, a core AS would need to look at the TRC of the corresponding iSD to get a list of all core ASes, then use it to verify that all ASes on the PCB are actually core. AFAIK we don\u2019t have such check in the current implementation. But let me double check this, and think a bit more on the relevance of this check. \n\n[] \"If...the PCB includes duplicate hop entries...MUST be discarded...[but]...MAY make a policy decision not to propagate beacons containing path segments that traverse the same ISD more than once\"\n\nI assume you meant \"decision to propagate\". ??\n\nThe MAY and MUST are in Normative contradiction.  Use SHOULD (instead of MUST).\n\n> \n> I don\u2019t think this is a contradiction, because the MUST refers to a path\n> traversing the same AS twice, while the MAY refers to a path traversing the\n> same ISD twice (but a different AS). We can clarify it in the text that the\n> MAY refers to the same ISD but a different AS.\n> \n> https://github.com/scionassociation/scion-cp_I-D/issues/90\n\nYup, you're right.",
          "createdAt": "2025-06-25T13:42:12Z",
          "updatedAt": "2025-07-09T10:24:45Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Discussed with @jiceatscion this wording: \n> The first ISD-AS entry of the path segment SHOULD be equal to the core ISD-AS where the segment is being registered. \n\nHe feels there is no harm if a segment is register, sh he feels MUST is not needed. TODO: think whether we need normative language.",
          "createdAt": "2025-06-27T09:11:10Z",
          "updatedAt": "2025-06-27T09:12:43Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOJx2-rs6rl7tK",
      "title": "The PKI gRPC API should be specified",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/96",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "design"
      ],
      "body": "We do not specify how certificates are requested between ASes. Right now we reference the PKI draft, but also there we don't say anything. We should add this somehwere (e.g. together with the gRPC API)\n\n\nPointers:\n- Documentation https://docs.scion.org/en/latest/cryptography/interactions.html#messages \n- Implementation: https://github.com/scionproto/scion/blob/abd39afe0a83199aca5ad59d6cc4cc383c89d4cf/proto/control_plane/v1/cppki.proto#L55 \n",
      "createdAt": "2025-02-25T15:53:49Z",
      "updatedAt": "2025-09-03T12:49:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Keeping it open to further discuss wether this better fits the PKI draft",
          "createdAt": "2025-02-28T09:11:45Z",
          "updatedAt": "2025-02-28T09:11:45Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Does this depend on the outcome of discussions on #105 ?",
          "createdAt": "2025-09-03T12:49:36Z",
          "updatedAt": "2025-09-03T12:49:36Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "I_kwDOJx2-rs6sDHke",
      "title": "Beaconing: reorder paragraphs and condense text",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/100",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "editorial"
      ],
      "body": "As discussed in #94:  the sections organization is a bit weird, right now we have: \n```\n 2.3.  Propagation of PCBs\n       2.3.1.  Selection of PCBs to Propagate\n           2.3.1.1.  Storing and Selecting Candidate PCBs\n           2.3.1.2.  Selection Policy Example\n       2.3.2.  Propagation of Selected PCBs\n           2.3.2.1.  Reception of PCBs\n           2.3.2.2.  Propagation of PCBs in Intra-ISD Beaconing\n           2.3.2.3.  Propagation of PCBs in Core Beaconing\n```\n\nI think: \n\n-  2.3.1.1.  Storing and Selecting Candidate PCBs and   2.3.1.2.  Selection Policy Example should be close\n- We could create a \"propagation interval and number of propagated beacons section\"\n- etc... \n",
      "createdAt": "2025-02-28T08:13:05Z",
      "updatedAt": "2025-03-03T15:52:48Z",
      "closedAt": "2025-03-03T15:52:48Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've completely re-organised Section 2.3 into what I feel is a more logical order, but also combined and rationalised some text. I think there were also some inconsistencies in terminology for the same thing (e.g. _propagation interval_ and _propagation period_)\n\nIt's possible that I've misunderstood something, muddled terminology, and/or over-rationalised text, so feel free to reject the commit if this doesn't make sense.",
          "createdAt": "2025-03-01T07:01:59Z",
          "updatedAt": "2025-03-01T07:01:59Z"
        }
      ]
    },
    {
      "number": 103,
      "id": "I_kwDOJx2-rs6uqj7d",
      "title": "Can we learn something from SRv6 security considerations?",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/103",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "needs-discussion"
      ],
      "body": "The SPRING WG is working on [SRv6 security considerations](https://datatracker.ietf.org/doc/draft-ietf-spring-srv6-security/). Can we learn something from this document? Or the other way around?",
      "createdAt": "2025-03-19T04:09:41Z",
      "updatedAt": "2025-03-19T05:19:02Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 104,
      "id": "I_kwDOJx2-rs6w7tdb",
      "title": "Add SVG figures and small corrections",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/104",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": "- [x] Improve ASCII art\n- [x] Add SVG to each figure (or enable aasvg)\n- [x] [nit] Number *all* the figures. `PCB Top-Level Message Format` is not numbered now\n- [x] Protobuf: follow same order as in figures if it does not matter\n- [x]  AS Entry Signed Component - check order\n- [x] 2.2.1.4.1. AS Entry Signed Header - add optional fields in the figure\n\n\n\n> One immediate piece of feedback \u2014 it sure would be nice if the figures were rendered more nicely, if it doesn\u2019t represent too much work for the authors.[*] It\u2019s amazing how much the modest effort returns in terms of document readability. I have the zeal of a convert, having adopted aasvg for the most recent iteration of [https://datatracker.ietf.org/doc/draft-ietf-idr-entropy-label/](https://urldefense.com/v3/__https://datatracker.ietf.org/doc/draft-ietf-idr-entropy-label/__;!!NEt6yMaO-gk!G9jt_GrlROPQcce-a5BfIgC_anQAMdJx3JN2ZsDAx4hOBvKhPemxMCY9phG6sqjMkzktzQTzYHMlVrjUGw$). I\u2019d say the conversion took less than an afternoon\u2019s work. I fed a couple of the figures from the SCION doc into aasvg and while they don\u2019t compile out of the box, it\u2019s evident it wouldn\u2019t be that hard to make the necessary changes. This isn\u2019t a demand, just a suggestion.",
      "createdAt": "2025-04-03T06:09:32Z",
      "updatedAt": "2025-07-15T02:12:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Small issues reported by Alvaro: \n### Number figures \n```\n800 2.1.3.  PCB Propagation - Illustrated Examples\n...\n807   In Figure 2 below, core AS X sends the two different PCBs \"a\" and \"b\"\n808   via two different links to child AS Y: PCB \"a\" leaves core AS X via\n809   egress interface \"2\", whereas PCB \"b\" is sent over egress interface\n810   \"1\".  Core AS X adds the respective egress information to the PCBs\n811   when sending them off, as can be seen in the figure (the entries\n812   \"_Core - Out:2_\" and \"_Core - Out:1_\", respectively).\n```\n>  As shown later in Figure 3, it should be \"Core X - Out:2\" and \"Core X -\nOut:1\".\n\n### Protobuf & figures - order\n>  I'm not sure if the order of the elements in Protobuf matters...but the\ndescription doesn't follow the same order as the figure.  For the reader,\nit would be better if the order were the same.  This is especially\nimportant given the field names in the figures and the names of the\ninformation in Protobuf are not the same (for example, \"Unsigned Ext.\" vs\n\"PathSegmentUnsignedExtensions\").\n\n\n###   AS Entry Signed Component\n```\n1170         +------------------------------------------------------+\n1171         |                   Signed AS Entry                    |\n1172         +------------------------------------------------------+\n1173         *- - - - - - - - - - - - -#- - - - - - - - - - - - - - *\n1174                                   |\n1175                                   |\n1176 *- - - - - - - - - - - - - - - - -v- - - - - - - - - - - - - - - - - -*\n1177 +--------------------+-----------------+------------------------------+\n1178 |      Header        |     Body        |            Signature         |\n1179 +--------------------+-----------------+------------------------------+\n```\n> The order shown here is different than what is shown in Figure 6.\n\n\n###  2.2.1.4.1.  AS Entry Signed Header\n```\n1225              +-----------------+\n1226              |     Header      |\n1227              +-----------------+\n1228              *- - - - # - - - -*\n1229                       |\n1230    - - - - - - - - - -v- - - - - - - - - *\n1231   +----------------+---------------------+\n1232   | Signature Alg. | Verification Key ID |\n1233   +----------------+---------------------+\n1234                    *- - - - - # - - - - -*\n1235                               |\n1236    - - - - - - - - - - - - - -v- - - - - - - - - -\n1237   +---------+---------+------------+--------------+\n1238   | ISD-AS  |TRC Base | TRC Serial |Subject Key ID|\n1239   +---------+---------+------------+--------------+\n```\n```\n1255      message Header {\n1256          SignatureAlgorithm signature_algorithm = 1;\n1257          bytes verification_key_id = 2;\n1258          // Optional\n1259          google.protobuf.Timestamp timestamp = 3;\n1260          // Optional\n1261          bytes metadata = 4;\n1262          int32 associated_data_length = 5;\n1263      }\n```\n> If I'm reading this correctly...the optional fields are not represented\nin the figures.\n\n- [ ] ~Also introduce a notion of associated_data (now the value is there in protobuf, bot not introduced)~\n   https://github.com/scionassociation/scion-cp_I-D/issues/125 \n   ```1304   *  associated_data_length: Specifies the length of associated data\n   1305      that is covered by the signature, but is not included in the\n   1306      header and body.  The value of this field is zero, if no\n   1307      associated data is covered by the signature.\n   ```\n   > Where is that associated data carried?  The descriptions don't seem to\ninclude anything (beyond the PathSegmentUnsignedExtensions) that could also\nbe signed.\n- [x] Also fix the header in figure 6 (fields are missing there too)\n```\n                                                 |\n*- - - - - - - - - - - - - - - - - - - - - - - - v - - - - - - - - - - *\n+--------------------+-----------------++------------------------------+\n|     Signature      |    Header       ||                    Body      |\n+--------------------+-----------------++------------------------------+\n                     *- - - - # - - - -**- - - - - - - - # - - - - - - *\n                              |                          |\n*- - - - - - - - - - - - - - -v- - - - *                 |\n+----------------+---------------------+                 |\n| Signature Alg. | Verification Key ID |                 |\n+----------------+---------------------+                 |\n```\n\n\n",
          "createdAt": "2025-06-12T09:10:35Z",
          "updatedAt": "2025-07-02T15:23:46Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Other pending point that I forgot to include:\n```\n1301   *  metadata: Can be used to include arbitrary per-protocol metadata.\n1302      This field is OPTIONAL.\n```\n\n> What is the format?  What does \"per-protocol\" mean?\n\nI'd also leave the issue open until merged.\n\nUpdate: this is also its own issue: \nhttps://github.com/scionassociation/scion-cp_I-D/issues/107",
          "createdAt": "2025-06-24T19:23:39Z",
          "updatedAt": "2025-07-02T15:25:00Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Cannot submit. Datatracker says:\n\n```\nSubmission rejected: Error during xml2rfc prep: ['**/draft-dekater-scion-controlplane-09.xml(120): Error: Can not access local file: images/scion-links.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(419): Error: Can not access local file: images/intra-isd-pcb-propagation-part1.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(444): Error: Can not access local file: images/intra-isd-pcb-propagation-part2.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(488): Error: Can not access local file: images/intra-isd-pcb-propagation-part3.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(534): Error: Can not access local file: images/possible-up-down-segments.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(593): Error: Can not access local file: images/pcb-composition.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(665): Error: Can not access local file: images/pcb-top-level-message-format.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(711): Error: Can not access local file: images/segment-information.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(751): Error: Can not access local file: images/as-entry.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(792): Error: Can not access local file: images/as-entry-signed-component.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(854): Error: Can not access local file: images/as-entry-signed-header.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(950): Error: Can not access local file: images/as-entry-signed-body.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(1037): Error: Can not access local file: images/hop-entry.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(1077): Error: Can not access local file: images/hop-field.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(1128): Error: Can not access local file: images/peer-entry.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(1173): Error: Can not access local file: images/peer-entry-information.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(1976): Error: Can not access local file: images/scmp-message-format.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2164): Error: Can not access local file: images/packet-too-big.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2216): Error: Can not access local file: images/external-interface-down.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2282): Error: Can not access local file: images/internal-connectivity-down.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2363): Error: Can not access local file: images/echo-request.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2417): Error: Can not access local file: images/echo-request.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2472): Error: Can not access local file: images/traceroute-request.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(2541): Error: Can not access local file: images/traceroute-reply.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(3586): Error: Can not access local file: images/example-topology.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(3620): Error: Can not access local file: images/path-lookup-for-destination-in-source-isd.svg. Use --allow-local-file-access enable access.', '**/draft-dekater-scion-controlplane-09.xml(3682): Error: Can not access local file: images/path-lookup-for-destination-in-remote-isd.svg. Use --allow-local-file-access enable access.']\n```",
          "createdAt": "2025-07-07T16:15:33Z",
          "updatedAt": "2025-07-07T16:15:33Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "The [github action](https://github.com/scionassociation/scion-cp_I-D/actions/runs/16122030190/job/45489966730) is using flag ` --allow-local-file-access` locally: \n```\ncat versioned/draft-dekater-scion-controlplane-09.md  | kramdown-rfc --v3 | lib/trace.sh -v -q versioned/draft-dekater-scion-controlplane-09.xml -s venue python3 lib/add-note.py | lib/trace.sh -v -q versioned/draft-dekater-scion-controlplane-09.xml -s v2v3 xml2rfc -q --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --allow-local-file-access --cache=/github/workspace/.refcache --v2v3 /dev/stdin -o /dev/stdout >versioned/draft-dekater-scion-controlplane-09.xml\n```\n\nBut then the submission fails: https://datatracker.ietf.org/api/submission/153725/status \n",
          "createdAt": "2025-07-07T16:22:56Z",
          "updatedAt": "2025-07-07T16:22:56Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "It could be related to https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-432c-wxpg-m4q3 \nhttps://github.com/ietf-tools/xml2rfc/commit/ec98f9cb4b9a8658222117df037dda473ca3f4e4",
          "createdAt": "2025-07-07T16:25:56Z",
          "updatedAt": "2025-07-07T16:25:56Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I rolled abck SVGs in https://github.com/scionassociation/scion-cp_I-D/pull/130 ",
          "createdAt": "2025-07-07T18:11:29Z",
          "updatedAt": "2025-07-07T18:11:29Z"
        }
      ]
    },
    {
      "number": 105,
      "id": "I_kwDOJx2-rs6xZ8E_",
      "title": "Control plane: clarify relationship between gRPC/Connect RPC",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/105",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "katyatitkova",
        "knmeynell"
      ],
      "labels": [
        "question",
        "needs-discussion"
      ],
      "body": "Keep an eye on changes to the CP gRPC API discussed in\n-  https://github.com/scionproto/scion/issues/4552\n-  https://github.com/scionproto/scion/issues/4434 \n\n\n- [ ] Adapt text in the draft, e.g. `All communication between the Control Services in different ASes is expressed in terms of gRPC remote procedure calls` and \n\nThis is not deployed yet, but we should decide ASAP if changes need to be in the draft.\nCC: @oncilla\n",
      "createdAt": "2025-04-07T10:18:34Z",
      "updatedAt": "2025-09-03T14:11:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "JFYI in -08 we have this text\n```\n   All communication between the Control Services in different ASes is\n   expressed in terms of gRPC remote procedure calls (for details, see\n   [gRPC]).  Service interfaces and messages are defined in the Protocol\n   Buffer \"proto3\" interface definition language (for details, see\n   [proto3]).\n\n   The RPC messages are transported via the [Connect]'s rpc protocol; a\n   gRPC-like protocol that carries messages over HTTP/3 (see\n   [RFC9114])).  HTTP3 traffic uses QUIC/UDP ([RFC9000]) as a transport\n   layer.  In the case of SCION, UDP relies on the data plane.\n```",
          "createdAt": "2025-06-27T09:58:49Z",
          "updatedAt": "2025-06-27T09:58:49Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "TODO: we should not have gRPC and connect. Maybe we can make it more general: \n\n- [ ] change \"gRPC definition\" to something like \"protobuf something\"\n- [ ] mark`[gRPC]` as supported but deprecated. \n- [ ] replace mentions of gRPC with RPC",
          "createdAt": "2025-08-28T09:20:18Z",
          "updatedAt": "2025-08-28T09:20:18Z"
        }
      ]
    },
    {
      "number": 107,
      "id": "I_kwDOJx2-rs63XRtk",
      "title": "Add Path metadata extensions specification",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/107",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "romshark",
        "nicorusti"
      ],
      "labels": [
        "enhancement",
        "question",
        "needs-discussion"
      ],
      "body": "- [ ] Clarify \"arbitrary per-protocol metadata\" in the draft\n- [ ] Decide wether we want to include a description of some metadata with ETH & Anapaya\n- [ ] If not adding this, perhaps add a reference (e.g. scionproto doc page?)\n- [ ] 2.2.2  - explain what PCB extensions are\n\n\nOS implementation currently supports path metadata (e.g. BW), Anapaya's propagates it. Should this be included in the draft?\n- https://docs.scion.org/en/latest/beacon-metadata.html#metadata-types \n- https://github.com/scionproto/scion/pull/4761 \n\n@tzaeschke is also supervising a thesis using dynamic metadata to improve beaconing \n\nThis topic was also raised by Alvaro's review: \n```\n1301   *  metadata: Can be used to include arbitrary per-protocol metadata.\n1302      This field is OPTIONAL.\n```\n> \"arbitrary per-protocol\". What is the format?  What does \"per-protocol\" mean?\n\n\n```\n1358\t   *  extensions: List of (signed) extensions (optional).  PCB\n1359\t      extensions defined here are part of the signed AS entry.  This\n1360\t      field SHOULD therefore only contain extensions that include\n1361\t      important metadata for which cryptographic protection is required.\n1362\t      For more information on PCB extensions, see Section 2.2.2.\n```\n> [] \u00a72.2.2 doesn't explain what these extensions are.  Are they specified anywhere?\n\n```\n1594\t2.2.2.  PCB Extensions\n\n1596\t   In addition to basic routing information such a hop entries and peer\n1597\t   entries, PCBs can be used to communicate additional metadata in\n1598\t   extensions.  Extensions can be signed and unsigned: signed extensions\n1599\t   are protected by the AS signature, whereas unsigned extensions are\n1600\t   not.\n```\n> [] What type of additional metadata?  Is it specified anywhere, or are these provisions for future use?",
      "createdAt": "2025-05-20T09:26:18Z",
      "updatedAt": "2025-06-27T15:35:29Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Discussed this with Roman, from an interop point of view it would make a lot of sense",
          "createdAt": "2025-05-28T08:57:18Z",
          "updatedAt": "2025-05-28T08:57:18Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@jiceatscion shall we mention some form of governance around extensions?",
          "createdAt": "2025-06-02T16:18:09Z",
          "updatedAt": "2025-06-02T16:18:09Z"
        },
        {
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "body": "> @tzaeschke is also supervising a thesis using dynamic metadata to improve beaconing\n\nYes, the thesis delivers live metadata (bandwidth, latency, ...) frequently, probably every 5-30 second. However, the metadata is delivered separately from PCBs. Also, this thesis is more exploratory, it'll be a while before this is solid enough to be implemented fully or even to be standardized.",
          "createdAt": "2025-06-16T13:21:24Z",
          "updatedAt": "2025-06-16T13:21:24Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@tzaeschke thank you for your clarification. By the way, this draft is about the current spec, it is not a standard...",
          "createdAt": "2025-06-25T07:25:52Z",
          "updatedAt": "2025-06-25T07:25:52Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Opinion from Alvaro: \n> The spec feels incomplete because extensions are mentioned but nothing more is said about them: format, examples, etc.   I would say, yes, document the one that exists.\n\n@katyatitkova @romshark @jiceatscion @knmeynell let's discuss later today if and what should be added\n",
          "createdAt": "2025-06-27T07:38:37Z",
          "updatedAt": "2025-06-27T07:39:36Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Ok, we'll add it. @romshark can you check what the OS is doing: \n\n- Which extensions are handled by the open source?  Are they all documented in the [docs](https://docs.scion.org/en/latest/beacon-metadata.html#metadata-types)? \n- How is the data formatted?  (e.g. field size, unit of measurement)\n- Can you add pointers to the code?",
          "createdAt": "2025-06-27T09:53:26Z",
          "updatedAt": "2025-06-27T09:53:26Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@oncilla @shitz anything against adding metadata spec to the draft?",
          "createdAt": "2025-06-27T15:35:29Z",
          "updatedAt": "2025-06-27T15:35:29Z"
        }
      ]
    },
    {
      "number": 109,
      "id": "I_kwDOJx2-rs66om_L",
      "title": "Service addressing - rewrite and move to dedicated section",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/109",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell",
        "jiceatscion"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "Service discovery was introduced in the draft in #15 & #24, however its description is not complete  \n\nTODO: \n\n- [ ] Move section to a dedicated paragraph\n- [ ] Update text so that it clearly answers questions form Alvaro\n- [ ] Service discovery now runs on UDP port 30252, we discussed in #7 why we do not specify it (because it is in the AS-local config). However, we need to write a bit more text about how each AS is doing the mapping\n- [ ] We should use proper example IPs instead of these\n```    \n// Supported address format for QUIC:\n//  192.168.0.1:80\n//  [2001:db8::1]:80\n```\n- [ ] Add missing cross references from other sections (e.g. path lookup, registration, ?, etc...) \n- [ ] Clarify that service addresses  are used to discover the CP service, but be mindful of not confusing it with what was called service discovery.\n- [ ] Explicitly indicate how the information is used.\n- [ ] Should we also move `Figure 21: Control Service gRPC API - Trust Material representation` to a dedicated section?\n\nFeedback from  Alvaro Retana: \n\n>   How is the location of the Control Service discovered?  It is the main control plane component, but it is not clear to me how, for example, the non-core ASes know where to register, or who the PCBs should come from, etc.\n  The Appendix (SCION Data Plane use by the SCION Control Plane) contains  information about it.  Consider \"upgrading\" the appendix to a section in the main text.\n\n\n>> Yes, this is based ons service discovery that is currently described in the\n> appendix. There is some text thad describes how service addresses are used \n> for control service discovery. It uses a reserved destination host address\n> (0x0002), which gets then forwarded by the destination AS SCION border router\n> to the right endpoint running the control service.\n...\n\n> I'm assuming that once the Control Service in an AS is found, the communication with it is direct (and not using the border router as a relay), right?\nAlso, the information from the discovery is used to establish the QUIC/H3 connection and authenticate that the PCBs originate from the correct source, right?",
      "createdAt": "2025-06-09T19:13:09Z",
      "updatedAt": "2025-07-16T09:06:04Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> I'm assuming that once the Control Service in an AS is found, the communication with it is direct (and not using the border router as a relay), right? \n\nIn relation to this question, I see why he has this question, the current draft text is quite cryptic. Right now we write: \n```\n   *  The destination service responds to the client with a\n      ServiceResolutionResponse.  That response contain one or more\n      transport options.\n```\nThen we have the protobuf definitions of `ServiceResolutionResponse` and `Transport` which contain the endpoint address. The explanation should be more organic, then the definitions should be provided. I think the paragraph requires an overhaul",
          "createdAt": "2025-06-12T08:17:03Z",
          "updatedAt": "2025-06-12T08:17:03Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> I'm assuming that once the Control Service in an AS is found, the communication with it is direct (and not using the border router as a relay), right?\n@jiceatscion ",
          "createdAt": "2025-06-12T11:45:54Z",
          "updatedAt": "2025-06-12T11:45:54Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Q: I'm assuming that once the Control Service in an AS is found, the communication with it is direct (and not using the border router as a relay), right?\n\nA: this is a tough one. Yes, that is what happens, but at the protocol level, SCION doesn't care. So it is the choice of the control service implementation to do that. The problem is that, as implemented, the CS expects the client to do that. I don't think it is actually able to process anything but resolution messages when receiving a QUIC/SCION connection packet. So, we'd have to describe the entire CS rpc protocol in excruciating details in order to be complete.\n",
          "createdAt": "2025-06-27T09:02:01Z",
          "updatedAt": "2025-06-27T09:02:01Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I spoke to @jiceatscion : JC says that the current implementation makes it up to you how you use it.  In the end, the connection on top of service addresses is just a QUIC connection. Today this is using QUIC redirection, which makes the address a service address.\n[Here](https://github.com/scionproto/scion/blob/379c6c7db20695a53b758190cd6c4302d0c3ab20/private/app/appnet/addr.go#L39) in the open source implementation:",
          "createdAt": "2025-06-30T12:05:43Z",
          "updatedAt": "2025-06-30T12:05:43Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@knmeynell this issue has a bunch of editorial stuff, could you perhaps start with some of these? \n",
          "createdAt": "2025-07-16T09:06:04Z",
          "updatedAt": "2025-07-16T09:06:04Z"
        }
      ]
    },
    {
      "number": 110,
      "id": "I_kwDOJx2-rs66psQe",
      "title": "Security considerations: discuss Impact of gRPC/HTTP",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/110",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "katyatitkova",
        "nicorusti"
      ],
      "labels": [
        "question",
        "Prio 3"
      ],
      "body": "- [ ] Do we write in the drafts what certs are used for the HTTPS requests for the gRPC API? \n- [ ] Do we clarify the overall layers used? Is the text clear enough?\n- [ ] Think about it and eventually update security considerations\n\n> From Alvaro Retana:\n(1) gRPC/HTTP3/QUIC\n  I'm not deeply familiar with gRPC.  I wonder whether it can be exploited by an attacker -- are there any security considerations that are SCION-related from its use?  I know the messages are transported over QUIC/H3 -- same question.",
      "createdAt": "2025-06-09T21:05:55Z",
      "updatedAt": "2025-07-03T14:55:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@romshark to share some ideas in relation to QUIC\n",
          "createdAt": "2025-06-12T11:29:47Z",
          "updatedAt": "2025-06-12T11:29:47Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@katyatitkova following our discussion: \n- What keys/certs are used for the QUIC handshake?\n- Are there any DoS attack vectors?\n- What measures does the OS have or should have (e.g. only accept gRPCs from neighbor ASes and intra-AS endpoints)?",
          "createdAt": "2025-07-03T08:25:55Z",
          "updatedAt": "2025-07-03T08:25:55Z"
        },
        {
          "author": "katyatitkova",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> What keys/certs are used for the QUIC handshake?\n\nLooking into [this](https://github.com/scionproto/scion/blob/150ee877b96aafffcd9e0dfafef16a018bf68483/control/cmd/control/main.go#L229 ) and [this](https://github.com/scionproto/scion/blob/150ee877b96aafffcd9e0dfafef16a018bf68483/private/app/appnet/infraenv.go#L111), I'd say that when listening, control plane uses the keys and certs from `crypto/as` and `certs` directories (in the config directory), and, when dialing, certificates are not checked at all.\n\n@jiceatscion Could you verify my findings please? Something seems off here...",
          "createdAt": "2025-07-03T14:42:16Z",
          "updatedAt": "2025-07-03T14:42:16Z"
        },
        {
          "author": "katyatitkova",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Are there any DoS attack vectors?\nWhat measures does the OS have or should have (e.g. only accept gRPCs from neighbor ASes and intra-AS endpoints)?\n\nSo there's [QUIC flood](https://www.cloudflare.com/en-gb/learning/ddos/what-is-a-quic-flood/) kind of attack, when too many handshaking requests are being sent. The researchers [here](https://arxiv.org/html/2412.08936v1) say: \"existing mitigation techniques focus primarily on reactive measures, such as the monitoring and the filtering of malicious traffic. They do not fix the vulnerability from the root cause - high resource amplification factors during the attack. Instead, they may demand extra resource for the detection\". So the researches propose using cryptographic challenges instead. The preprint is rather new (December 2024), so I guess the only thing that could be implemented now is the filtering of the traffic.",
          "createdAt": "2025-07-03T14:55:32Z",
          "updatedAt": "2025-07-03T14:55:32Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "I_kwDOJx2-rs67HsWO",
      "title": "Remove double use of MUST in different drafts",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/111",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 1",
        "editorial"
      ],
      "body": "```\n417   Each link connecting SCION routers is bi-directional and is\n418   identified by its corresponding egress and ingress interface IDs.  An\n419   interface ID consists of a 16-bit identifier that MUST be unique\n420   within each AS, with the exception of value 0 (see\n421   [I-D.dekater-scion-dataplane]).  Therefore, they can be chosen and\n422   encoded by each AS independently without any need for coordination\n423   between ASes.\n```\n\nThe identifier is defined in I-D.dekater-scion-dataplane.  In general,\nyou should only normatively specify (using \"MUST\", for example) in one\nplace.\n\n- [x] s/MUST be unique/is required to be unique\n- [x] Check use of MUST in relation to definitions in other drafts",
      "createdAt": "2025-06-12T08:32:36Z",
      "updatedAt": "2025-06-24T16:16:48Z",
      "closedAt": "2025-06-24T16:16:48Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Removed double MUST with respect to the referenced example. \n\nAlso checked the other drafts for double MUST and cannot find other examples. ",
          "createdAt": "2025-06-24T16:16:36Z",
          "updatedAt": "2025-06-24T16:16:36Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "I_kwDOJx2-rs67HuO0",
      "title": "Numbers registry - update reference and clarifications",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/112",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "Prio 2"
      ],
      "body": "- [x] create placeholder link on scion.org about registry activity (for now redirecting to Anapaya AND linking the same table as the draft (which I think is now on scionproto github)\n- [x] Update reference to point to scion.org\n- [x] Check reference to RFC4893 in relation to AS number definition\n- [x] Do we need a reference to RFC5952 in relation to formatting? Maybe not as Alvaro suggests\n- [x] Check that ISD-AS in the drafts follow the text representation rule (e.g. `4-0000:1:f` does not)  \n- [x] Move table 2 to 1.5.2.\n- [x] https://github.com/scionassociation/scion-cppki_I-D/pull/68 from the PKI draft and replace it with cross  reference: `Table 1: ISD Number Allocations`\n- [x] Devs: confirm that the right notation for ISD 65551 is `0:1:f` (which is what we have in the draft)\n- [x] Update PKI draft https://github.com/scionassociation/scion-cppki_I-D/pull/73\n\n\n---- \n## Feedback from Alvaro:\n\n### 1.5.1.  ISD Numbers\n```\n542   An ISD number is the 16-bit global identifier for an ISD and MUST be\n543   globally unique.\n\n545   The following table gives an overview of the ISD number allocation:\n\n547     +==============+================================================+\n548     | ISD          | Description                                    |\n549     +==============+================================================+\n550     | 0            | The wildcard ISD.                              |\n551     +--------------+------------------------------------------------+\n552     | 1 - 15       | Reserved for documentation and sample code     |\n553     |              | (analogous to [RFC5398]).                      |\n554     +--------------+------------------------------------------------+\n555     | 16 - 63      | Private use (analogous to [RFC6996]).  Can be  |\n556     |              | used for testing and private deployments       |\n557     +--------------+------------------------------------------------+\n558     | 64 - 4094    | Public ISDs.  Should be allocated in ascending |\n559     |              | order, without gaps and \"vanity\" numbers.      |\n560     +--------------+------------------------------------------------+\n561     | 4095 - 65535 | Reserved for future use.                       |\n562     +--------------+------------------------------------------------+\n\n564                      Table 1: ISD number allocations\n\n566   Currently, ISD numbers are allocated by Anapaya, a provider of SCION-\n567   based networking software and solutions (see [ISD-AS-assignments]).\n```\n\n>  Suggestion: the Anapaya site doesn't have a summary similar to Table 1.\nIf anyone is looking there, they won't know which ISD can be used for\ntesting (for example).  You might want to include this information, similar\nto the IANA pages. ;-)\n\n\n### 1.5.2.  SCION AS Numbers\n```\n571   A SCION AS number is the 48-bit identifier for an AS.  Although they\n572   play a similar role, there is no relationship between SCION AS\n573   numbers and BGP ASNs as defined by [RFC4893].  For historical reasons\n574   some SCION Autonomous Systems use a SCION AS number where the first\n575   16 bits are 0 and the remaining 32 bits are identical to their BGP\n576   ASN, but there is no technical requirement for this.\n```\n> [] s/RFC4893/RFC4271 I know that there isn't a specific definition in rfc4271 of an ASN (there\nisn't one in rfc4893 either).\n\n###  1.5.3.2.  AS numbers\n```\n587   The text representation of SCION AS numbers is similar to IPv6 (see\n588   [RFC5952]) but not identical.  It MUST be as follows:\n\n590   *  It uses a 16-bit colon-separated lower-case hex encoding with\n591      leading 0s omitted: 0:0:0 to ffff:ffff:ffff.\n\n593   *  The :: zero-compression feature of IPv6 MUST NOT be used.  The\n594      feature has very limited use in a 48-bit address space and would\n595      only add more complexity.\n\n597   *  A range of AS numbers can be shortened with a notation similar to\n598      the one used for CIDR IP ranges ([RFC4632]).  For example, the\n599      range of the lowest 32-bit AS numbers (0-4294967295) can be\n600      represented as 0:0:0/16.\n\n602   *  For historical reasons, SCION AS numbers in the lower 32-bit range\n603      MAY also be represented as decimal for human readability.  For\n604      example, if a program receives the AS number 0:1:f, it MAY display\n605      the number as \"65551\".\n```\n> IMHO, the comparison to RFC5952 makes the explanation more complex as\nyou have to then explain the exceptions (::)...\n\n### Example\n```\n614   For example, the text representation of AS number 65551 (0x1000f) in\n615   ISD number 4 is 4-0000:1:f.\n```\n\n> 0000:1:f doesn't follow the rules in \u00a71.5.3.2: the leading 0s are\nincluded.  Shouldn't it be 1:f?\n\n### Table 2: AS number allocations\n\n> Maybe this table belongs in \u00a71.5.2.\n",
      "createdAt": "2025-06-12T08:35:26Z",
      "updatedAt": "2025-07-04T11:11:08Z",
      "closedAt": "2025-07-04T11:06:58Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "JFYI relevant section in CPPKI draft:\n```\n   The string representation of the ISD-AS number attribute MUST follow\n   the text representation defined in [I-D.dekater-scion-controlplane],\n   section \"Text Representation\".  The canonical string formatting of AS\n   numbers in the AS range (0, 2^(32-1)) MUST use the decimal form.\n   Larger AS numbers, i.e., from 2^32 to 2^(48-1), MUST use a 16-bit,\n   colon-separated, lower-case, hex encoding with leading zeros omitted:\n   1:0:0 to ffff:ffff:ffff.\n```\n\nQuestion for @katyatitkova :  is the right notation for 65551 `0000:1:f` or `0:1:f` or `1:f`? What is the implementation using?",
          "createdAt": "2025-06-12T12:27:43Z",
          "updatedAt": "2025-06-12T12:27:43Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "RFC 4271 is a (slightly) better reference than RFC4893.",
          "createdAt": "2025-06-13T04:39:12Z",
          "updatedAt": "2025-06-13T04:39:12Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> create placeholder link on scion.org about registry activity (for now redirecting to Anapaya AND linking the same table as the draft (which I think is now on scionproto github)\n \nThis is not done yet",
          "createdAt": "2025-06-27T13:56:58Z",
          "updatedAt": "2025-06-27T13:56:58Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> Check that ISD-AS in the drafts follow the text representation rule (e.g. 4-0000:1:f does not)\n\nI went through all other drafts and I did not see any other misuse",
          "createdAt": "2025-06-27T14:39:09Z",
          "updatedAt": "2025-06-27T14:39:09Z"
        },
        {
          "author": "katyatitkova",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Question for @katyatitkova : is the right notation for 65551 0000:1:f or 0:1:f or 1:f? What is the implementation using?\n\nThe implementation uses human-readable numbers for the lower 32-bit range: see [test](https://github.com/scionproto/scion/blob/379c6c7db20695a53b758190cd6c4302d0c3ab20/pkg/addr/isdas_test.go#L140) and [implementation](https://github.com/scionproto/scion/blob/379c6c7db20695a53b758190cd6c4302d0c3ab20/pkg/addr/fmt.go#L105). So, 65551 will be printed out as 65551. Both `0000:1:f` and `0:1:f` will be parsed (and `0:1:f` seems to be a more common option according to the tests), and `1:f` is not correct since the implementation expects that there will be three parts in the address.",
          "createdAt": "2025-06-30T08:17:57Z",
          "updatedAt": "2025-06-30T08:17:57Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thanks a lot! What is used to write ASes in  certificates by the PKI?  I'd like to double check as this should match what we describe [here](https://www.ietf.org/archive/id/draft-dekater-scion-pki-09.html#name-isd-as-number-attribute). Right now we say `hex encoding with leading zeros omitted`",
          "createdAt": "2025-06-30T08:31:25Z",
          "updatedAt": "2025-06-30T08:31:25Z"
        },
        {
          "author": "katyatitkova",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If I'm not mistaken, ISD-AS numbers are provided manually and then are being verified and written as-is. The validation code is [here](https://github.com/scionproto/scion/blob/379c6c7db20695a53b758190cd6c4302d0c3ab20/pkg/scrypto/cppki/certs.go#L548), and it expects AS number to be formatted in the same manner as the implementation from the link above does. So it looks like 65551 should still be 65551 and not 0:1:f. @jiceatscion did I miss something?",
          "createdAt": "2025-06-30T11:16:57Z",
          "updatedAt": "2025-06-30T11:16:57Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Regarding the certificate format, I agree; it looks like the validation code want the decimal representation.\n\nLooks like we are not being quite prescriptive enough in the CP draft. I would suggest making a decision about the 0-65535 decimal representation and spelling it out. I remember writing the \"For historical reasons... <decimal repr allowed>.\" phrase. It was probably a mistake to not make a clear decision about whether that was a \"canonical form\" or not.\n\nThe PKI drafts mentions a \"Canonical form\", but it is canonical only in that doc.\n\nMy suggestions to address Alvaro's concerns:\n* Clarify which is the canonical representation; decimal allowed or not. We must chose. I would prefer that the decimal representation be non-canonical, but it might be too late to change it because of existing certs and cert verification/generation code.\n* Possibly indicate where the non-canonical form is allowed, if anywhere. At least mention the PKI draft and the certificates as a place where only the canonical form is allowed.\n* Clarify that the leading zeros suppression still must leave one 0; this isn't self evident.\n* Make sure that we use the canonical representation everywhere in the drafts that calls for a canonical representation.\n* Specify in the PKI draft where the definition of \"Canonical representation\" is and remove it for the PKI draft itself.\n",
          "createdAt": "2025-07-01T10:05:59Z",
          "updatedAt": "2025-07-01T10:05:59Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've clarified the leading zeros in the section about SCION AS numbers.",
          "createdAt": "2025-07-01T14:54:27Z",
          "updatedAt": "2025-07-01T14:54:27Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is the canonical representation the one now in Section 1.5.2.2 (see https://scionassociation.github.io/scion-cp_I-D/SCION_AS_Table/draft-dekater-scion-controlplane.html)\n",
          "createdAt": "2025-07-01T14:56:12Z",
          "updatedAt": "2025-07-01T14:56:12Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I discussed this with @katyatitkova:  she agree that we should specify one canonical representation that is consistent in both drafts. SO I agree with the proicess you propose @jiceatscion \n\n> Clarify which is the canonical representation; decimal allowed or not. We must chose. \n\nI discussed this with @katyatitkova , she would ideally like to transition to an uniform, hex-only representation. However, IMHO: \n- This draft's goal is to document the existing implementation\n- Such a change would be major and take a lot of time to roll out (e.g. in SSFN)\n\nFor these two reasons above, I think we should agree on the dual Hex/dec representation and write something like: \n> SCION AS numbers in the lower 32-bit range MUST be represented as decimal. Implementations MAY accept such numbers in the Hex form, but then they should be converted to the decimal form (e.g. a program may accept AS number '0:1:f' and convert it to `65551`).\n\nWhat do you think @jiceatscion ?",
          "createdAt": "2025-07-03T08:57:42Z",
          "updatedAt": "2025-07-03T09:00:55Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree that we are forced to allow both representations. However we have to specify where each is acceptable. Your phrasing is contradictory: \"MUST be represented...\" by what/whom? \"convert...\" when? On input, on output?\n\n I think that you mean:\n* software MUST output the canonical form (unless when generating config files that have a different requirement).\n* software SHOULD accept either forms (in args or config files), but is not required to. E.g. pki requires the canonical form.\n",
          "createdAt": "2025-07-03T10:33:47Z",
          "updatedAt": "2025-07-03T10:33:47Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> * software MUST output the canonical form (unless when generating config files that have a different requirement).\n> * software SHOULD accept either forms (in args or config files), but is not required to. E.g. pki requires the canonical form.\n\nGreat point. \"be conservative in what you send, be liberal in what you accept\". I will adapt\n\n",
          "createdAt": "2025-07-03T11:44:22Z",
          "updatedAt": "2025-07-03T11:44:22Z"
        }
      ]
    },
    {
      "number": 113,
      "id": "I_kwDOJx2-rs67H2D-",
      "title": "nits and small clarifications - Alvaro's feedback",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/113",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "Prio 1",
        "editorial"
      ],
      "body": "- [x] Terminology - \"Hop Field (HF)\" is repeated. This also happens in other definitions. \n- [x] `*SCMP*: A signaling protocol analogous to the Internet Control.` - [nit] Expand SCMP.\n- [x] Clarifications in `1.3.  Paths and Links`\n  ```\n  387   A path can contain at most one peering link shortcut which means they\n  388   can only be used in paths between ASes within the \"customer cone\" of\n  389   the ASes connected by the peering link.\n  ```\n  > We have links (which I assume are one-hop connections), paths (which are\ne2e; \"an up-core-down path\", for example), and path segments.  The\ndefinition of \"path segments\" (in the Terminology section) combines terms:\n\"A path segment can be (1) an up segment (i.e. a path between a non-core AS\nand a core AS in the same ISD),\": \"A path segment can be...[a]...segment\n(i.e. a path...\".\nI think this description could be clarified.\n- [x] Typo `litteral` --> literal (e.g. in 1.5.3.3.  <ISD, AS> tuples) \n- [x] After reading \u00a77.3.1, also point to the specification in \u00a72.3.1.\n\n\nNITS in this part were DONE in #115 ",
      "createdAt": "2025-06-12T08:46:57Z",
      "updatedAt": "2025-07-07T10:14:10Z",
      "closedAt": "2025-07-07T10:14:10Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "More clarifications (from the second part of Alvaro's feedback):\n\n- [x] `2.2.1.6.  Hop Field`: add a sentence to clarify that  MAC is a form of authenticating segments between the Control Plane of an AS and its own routers within the AS. It is never computed by endpoints\n  > [] Only one MAC algorithm is specified, but an AS can select its own.  This may be a question for the dataplane draft...  How does a SCION endpoint know which MAC algorithm to use for a non-connected AS (maybe even in a different ISD) when constructing the SCION Header?\n  --> this iss to be further clarified in the DP draft, see https://github.com/scionassociation/scion-dp_I-D/issues/98 \n- [ ] \n  ```\n  1641\t2.2.4.  Configuration\n  \n  1643\t   For the purpose of constructing and propagating path segments, an AS\n  1644\t   Control Service MUST be configured with links to neighboring ASes.\n  1645\t   Such information may be conveyed to the Control Service in an out-of-\n  1646\t   band fashion (e.g in a configuration file).  For each link, these\n  1647\t   values MUST be configured:\n  \n  [] \"MUST be configured with links to neighboring ASes\"\n  ```\n  s/MUST/must\n  > There's no Normative value in using \"MUST\" here because the sentence is explaining a fact: if no links exist then nothing can happen...\n- [ ] [nit] s/policy that it does not/policy that does not\n- [ ] [] s/must check/MUST check in `1702\t       receiver Control Service must check every AS entry except the`\n- [ ] [] \"relatively small subset of the viable PCBs SHOULD be propagated\" ->    \"Not all viable PCBs should be propagated...\"\n   > This is not a good Normative statement because it is not clear what a \"relatively small subset\" is?  Half, 10%, only 2, etc. ??\n- [x] [] \"The goal of the AS SHOULD be...\"\n    > When is it ok for the goal to be something else?  I guess it's a matter of configuration, but the point is that this sentence is just referring to a fact: s/SHOULD/should\n- [ ] Use [inclusive language](https://www.rfc-editor.org/styleguide/part2/#inclusive_language) (e.g. blacklists, whitelist)\n- [x] Lowercase some SHOULD\n  ```\n  1755\t   *  Path disjointness: Paths can be either AS disjointed or link\n  1756\t      disjointed.  AS disjointed paths have no common upstream/core AS\n  1757\t      for the current AS, whereas link disjointed paths do not share any\n  1758\t      AS-to-AS link.  AS disjointness allows path diversity in the event\n  1759\t      that an AS becomes unresponsive, and link disjointness provides\n  1760\t      resilience in case of link failure.  Both criteria can be used\n  1761\t      depending on the objective of the AS.\n  \n  1763\t   The relative disjointness of two PCBs A and B may be calculated by\n  1764\t   assigning a disjointness score, calculated as the number of links in\n  1765\t   A that don't appear in B.  The beacon that has the highest\n  1766\t   disjointness score and is not the shortest path SHOULD be selected.\n  1767\t   If this is not better than what has already been selected, then the\n  1768\t   beacon with the shortest path yet to be selected SHOULD be chosen\n  1769\t   instead.\n  ```\n   > [] The list above presented examples, which I take to mean that the policy is up to the local AS.  IOW, there shouldn't be a specification of which paths to choose.  I take this paragraph as an example too.  Note also that the use of SHOULD allows for any selection.  Suggestion: Avoid using normative language and introduce the paragraph with \"For example...\".\n- [ ] s/must check/MUST check\n   `1702\t       receiver Control Service must check every AS entry except the`\n-  [ ] [] \"MUST at least include: ... MAY add\"\n  ```\n  ...\n  1834\t2.3.5.1.  Propagation of PCBs in Intra-ISD Beaconing\n  \n  1836\t   The propagation process in intra-ISD beaconing includes the following\n  1837\t   steps:\n  \n  1839\t   1.  From the candidate PCBs stored in the Beacon Store, the Control\n  1840\t       Service of an AS selects the best PCBs to propagate to its\n  1841\t       downstream neighboring ASes, based on a selection algorithm\n  1842\t       specific for this AS.\n  \n  1844\t   2.  The Control Service adds a new AS entry to every selected PCB\n  1845\t       which MUST at least include:\n  \n  1847\t       *  The ingress interface to this AS, in the Hop Field component.\n  \n  1849\t       *  The egress interface to the neighboring AS, also in the Hop\n  1850\t          Field component.\n  \n  1852\t       *  The ISD_AS number of the next AS, in the signed body component\n  1853\t          of the AS entry.\n  \n  1855\t       *  If the AS has peering links, the Control Service MAY add\n  1856\t          corresponding peer entry components to the signed body of the\n  1857\t          AS entry; one peer entry component for each peering link that\n  1858\t          the AS wants to advertise.  The Hop Field component of each\n  1859\t          added peer entry MUST have a specified egress interface.\n  ```\n   > The use of MUST and then MAY is a Normative conflict.  Instead of reiterating the information, leverage the previous specifications.  Note also that the minimum includes the Header information (key IDs, ISD_AS, etc.). Suggestion: \n       > The Control Service MUST add a new AS Entry (\u00a72.2.1.3), including any\n       Peer Entry information (\u00a72.2.1.7) the AS is configured to advertise.\n\n\n\n\n\n",
          "createdAt": "2025-06-25T10:24:53Z",
          "updatedAt": "2025-07-07T09:14:45Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "And more: \n\n- [x] The ISD_AS number inside the PCB must be equal to the one of the neighbor AS. We can clarify this. \n   ```\n  1864\t   4.  As a final step, the Control Service propagates each extended PCB\n  1865\t       to the correct neighboring ASes by invoking the\n  1866\t       SegmentCreationService.Beacon remote procedure call (RPC) in the\n  1867\t       Control Services of the neighboring ASes (see also\n  1868\t       Section 2.3.5.3).\n  ```\n   [] What is the set of \"correct neighboring ASes\"?  \"correct\" is not explained anywhere.\nThe ISD_AS number inside the PCB must be equal to the one of the neighbor AS. We can clarify this. \n- [x] [] s/until new link/until a new link\n- [x] If a link fails, rendering a PCB invalid, how is that detected?  I assume that the ASes on each side of the link would reevaluate the contents of the PCBs in their Beacon Store after such an event and take action -- where is that specified? --> Ahhh...I found the answer in the dataplane document (\u00a76.2). :-)  Please point to it.\n   ```\n   2051\t   scheduled removal of links, operators let path segments expire.  On\n  2052\t   link failures, endpoints route around the failed link by switching to\n  2053\t   different paths in the data plane.\n  ```\n- [x] [] s/and The average/and the average\n- [x] [] s/SHOULD...SHOULD/MUST...MUST\n ```\n 2290\t       SHOULD be equal to the core ISD-AS where the segment is being\n 2291\t       registered.  If not, the core AS SHOULD reject the segment.\n```\n- [x] `2381\t   MUST assume that all hops are constrained by the intra-AS MTU of each` s/MUST assume/assumes. There's no Normative action resulting from \"assume\".  Also, the important part of this section is specified where the path MTU is defined.\n- [x] `2638\t   This document specifies only messages RECOMMENDED for the purposes of\n`\"RECOMMENDED\" in this context leaves the option of not using the messages, which I'm sure is not the intent.  s/messages RECOMMENDED for/messages used for\n- [x] `2638\t   This document specifies only messages RECOMMENDED for the purposes of` \"RECOMMENDED\" in this context leaves the option of not using the messages, which I'm sure is not the intent.  s/messages RECOMMENDED for/messages used for\n- [x] `2644\t   Every SCMP message is preceded by a SCION header, and zero or more` [] Include a reference to the SCION header.\n- [x] `2746\t   Implementations MUST respect the following rules when processing SCMP`. [] \"MUST respect\" is not an actionable Normative action.  Given that the bullets below include Normative language, here's a suggestion:    The following rules apply when processing SCMP messages:\n- [x] [] s/because because/because\n- [x] with additional signals for reliable operations. --> \"These additional signals are outside the scope of this specification.\"\n- [x] [] `Endpoint path control is one of the main benefits of SCION compared to the current Internet as SCION endpoints can select inter-domain` --> Please don't use this document to compare SCION to anything.\n\n\n\n\n\n\n\n\n  \n\n",
          "createdAt": "2025-06-26T15:28:53Z",
          "updatedAt": "2025-07-03T13:24:55Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I went through the draft and all points are addressed, even tough there seems to be a bug in GitHub and I cannot tick the points here in this issue.",
          "createdAt": "2025-07-07T09:36:08Z",
          "updatedAt": "2025-07-07T09:36:08Z"
        }
      ]
    },
    {
      "number": 114,
      "id": "I_kwDOJx2-rs67IRwk",
      "title": "AS Entry Signed Body - clarify if PCB MUST or SHOULD or MAY be forwarded",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/114",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 2",
        "needs-discussion"
      ],
      "body": "- [x]  Find a better wording in \"The ISD-AS number of the downstream AS to which the PCB **SHOULD** be forwarded.\"\n   From Alvaro: \n   ```\n   2.2.1.4.2.  AS Entry Signed Body\n   ...\n   1340   *  next_isd_as: The ISD-AS number of the downstream AS to which the\n   1341      PCB SHOULD be forwarded.  The presence of this field prevents path\n   1342      hijacking attacks, as further discussed in Section 7.3.1.\n   ```\n   > When is it ok to forward the PCB to a different downstream AS?  I assume\n\"never\", which makes me think that you wanted to use \"MUST\" (instead of\n\"SHOULD\").\n\n- [ ] ~maybe this section also deserves a double MUST? (introduced in #98, discussed [here](https://github.com/scionassociation/scion-cp_I-D/pull/98#discussion_r1972040628) and on [Slack](https://scionproto.slack.com/archives/C8ADA9CEP/p1740679917948679) ) --> leaving a SHOULD as per Slack discussion~ --> Handled here https://github.com/scionassociation/scion-cp_I-D/issues/90#issuecomment-3012296750 \n       ```\n        The first ISD-AS entry of the path segment\n       SHOULD be equal to the core ISD-AS where the segment is being\n       registered.  If not, the core AS SHOULD reject the segment.\n       ```\n\n",
      "createdAt": "2025-06-12T09:24:12Z",
      "updatedAt": "2025-06-27T13:25:16Z",
      "closedAt": "2025-06-27T13:25:16Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Changed to MUST. It's still debatable, but I feel that adds clarity. ",
          "createdAt": "2025-06-23T13:52:40Z",
          "updatedAt": "2025-06-23T13:52:40Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Where did you change it? I cannot find the PR. Could you link in each PR which issues they address? ",
          "createdAt": "2025-06-24T19:31:54Z",
          "updatedAt": "2025-06-24T19:31:54Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It was changed in the latest commit to 'New Diagrams' PR. ",
          "createdAt": "2025-06-24T20:43:22Z",
          "updatedAt": "2025-06-24T20:43:22Z"
        }
      ]
    },
    {
      "number": 116,
      "id": "I_kwDOJx2-rs67ZlW2",
      "title": "SIG and address resolution reference",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/116",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "enhancement",
        "needs-discussion"
      ],
      "body": "How do endpoints know to which ISD-AS to send a packet? Here there are two cases: \n\n- the full SCION Address is provided (e.g. by a naming system)\n- Traffic goes via SIG, which is exchanging routing info with other SIGs\n\nTODOs: \n- [ ] Add some text on mapping \n- [ ] Mapping is also sort of a CP task. Shall we add a reference to the SIG also in this draft? \n- [ ] https://github.com/scionproto/scion/issues/4787 \n\nFeedback Alvaro \n>>>  (3) Destination Mapping\n  This specification is about path advertising, registration, and lookup --\n  the paths contain AS/ISD information, not prefixes.  How does an endpoint\n  map the destination address to the destination AS/ISD so it can query the\n  Control Service?\n\n>> Nico: This is handled not by the control plane directly, but by the SCION-IP gateways, which are currently not described by the the current spec, as they deal with the non-path aware part of the network (from a SCION point of view, they represent an application, which is doing tunneling of IP over SCION). We briefly describe this in the data plane draft in [5.3. SCION IP Gateway](https://datatracker.ietf.org/doc/html/draft-dekater-scion-dataplane-05#name-scion-ip-gateway). \n\n>That text didn't discuss mapping or resolution, but rather tunneling.\nI think it's ok to leave the mapping/resolution out of the control plane spec, but it would be ideal to point to a place where it is explained (as an Informative reference). \n",
      "createdAt": "2025-06-13T16:04:15Z",
      "updatedAt": "2025-06-27T07:31:42Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 117,
      "id": "I_kwDOJx2-rs69OxDG",
      "title": "PCB Validity - clarify wording",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/117",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": "- [x] Reword to clarify that the certificate MUST expire later than the segment.\n- [x] Clarify allowance in 2.2.3\n\n### Feedback Alvaro:\n```\n1364\t2.2.1.4.3.  AS Entry Signature\n\n1366\t   Each AS entry MUST be signed with the AS certificate's private key\n1367\t   K_i.  The certificate MUST have a validity period fully containing\n1368\t   that of the segment being verified, regardless of current time.  The\n1369\t   signature Sig_i of an AS entry ASE_i is computed over the AS entry's\n1370\t   signed component.\n```\n\n[] \"The certificate MUST have a validity period fully containing that of the segment being verified...\"\n\nI can read this a couple of different ways...but neither seems fully specified!\n\n1- What is the validity time of the segment?  Is that the Expiration Time in the Hop Field?  Which one?  If so, then it should be specified that if the certificate's validity period is less than the Expiration Time, the PCB MUST be discarded (?).\n\n2- If we're not talking about the Expiration Time, the PCB MUST become invalid when the certificate's validity period ends.\n\n\n```\n...\n1620\t2.2.3.  PCB Validity\n...\n1630\t   For the purpose of validation, a timestamp is considered \"future\" if\n1631\t   it is later than the current time at the point of validation plus an\n1632\t   allowance for differences between the validator's and originator's\n1633\t   clock.  As an allowance, it is recommended to use the granularity of\n1634\t   the hopfield expiration time (that is 337.5 seconds, see\n1635\t   Section 2.2.1.6).\n\n1637\t   For the purpose of validation, a hop is considered expired if its\n1638\t   absolute expiration time, calculated as defined in Section 2.2.1.6,\n1639\t   is later than the current time at the point of validation.\n```\n> [] Should the same allowance be made in this case?\n\n@jiceatscion how is this allowance counted for hops? We now point to section 2.2.1.6 which says: \n```\n   *  exp_time: The 8-bit encoded expiration time of the Hop Field,\n      indicating its validity.  This field expresses a duration in\n      seconds according to the formula: duration = (1 + exp_time) *\n      (24*60*60/256).  The minimum duration is therefore 337.5 s.  This\n      duration is relative to the PCB creation timestamp set in the\n      PCB's segment information component (see also Section 2.2.1.2).\n      Therefore, the absolute expiration time of the Hop Field is the\n      sum of these two values.\n```\n\nI assume that the 1 in the formula represents the allowance, do you confirm that? ",
      "createdAt": "2025-06-25T08:41:14Z",
      "updatedAt": "2025-07-18T02:36:46Z",
      "closedAt": null,
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\"2.2.3 - Should the same allowance be made in this case?\": Yes, we need to say that.\n\"2.2.1.6 - I assume that the 1 in the formula represents the allowance, do you confirm that?\" Nope. The +1 is simply so we don't waste bits encoding the useless value zero. As we say, the minimum value that can be expressed is one time the quantum; not zero. I guess it is worth saying. The confusion comes from the name of the duration \"exp_time\" which suggests that it expresses an absolute time. I guess we need to say that too. Because of this I guess the reader felt justified to conflate the allowance (applied after computing the absolute time), with the plus 1 (applied to exp_time).\n",
          "createdAt": "2025-06-27T08:19:05Z",
          "updatedAt": "2025-06-27T08:19:05Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The wording in the draft was overly verbose and confusing. I've tried to simplify things whilst adding clarification...\n\nTo be valid (that is, usable to construct a valid path), a PCB MUST:\n\n* Contain valid AS Entry signatures ([](#sign)).\n* Have a timestamp ([](#seginfo)) that is not later than the current time at the point of validation, plus an allowance for differences between the clocks of the validator and originator.\n* Contain only unexpired hops ([](#hopfield)).\n\nIt is recommend to use the hopfield expiration time (that is 337.5 seconds, see [](#hopfield)) as the allowance for differences between the clocks of the validator and originator.",
          "createdAt": "2025-07-18T02:36:46Z",
          "updatedAt": "2025-07-18T02:36:46Z"
        }
      ]
    },
    {
      "number": 118,
      "id": "I_kwDOJx2-rs69QHtl",
      "title": "Reword \"unspecified\" interface ID to clarify it is 0",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/118",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": "- [x] Clarify What value should be used on the Ingress field?  0? \n   ```\n    1491\t   *  ingress: The 16-bit ingress interface identifier (in the direction\n    1492\t      of the path construction, that is, in the direction of beaconing\n    1493\t      through the current AS).\n    \n    1495\t   *Note:* For the core AS that initiates the PCB, the ingress interface\n    1496\t   identifier MUST NOT be specified.  This initiating AS is a core AS.\n   ```\n- [x] Following previous point, should we change wording also in the CP draft. Current wording on 0 is weird.\n   ```\n   The Interface ID MUST be unique within each AS.  Interface ID 0 is\n   not a valid identifier as implementations MAY use it as the\n   \"unspecified\" value.\n   ```\n\nQuestion by Alvaro: \n`ingress interface identifier MUST NOT be specified`: What value should be used on the Ingress field?  0?",
      "createdAt": "2025-06-25T10:30:52Z",
      "updatedAt": "2025-07-07T13:36:33Z",
      "closedAt": "2025-07-07T13:36:33Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "According to @jiceatscion each AS administers its interface IDs. Each AS could use any non-existent value as the \"unspecified\" ID, without coordinating with other ASes. So there is no need to coordinate this for interop.\nHowever, we also we say in the DP spec: `Interface ID 0 is not a valid identifier as implementations MAY use it as the \"unspecified\" value.`\n",
          "createdAt": "2025-06-27T10:09:32Z",
          "updatedAt": "2025-06-27T10:09:32Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've clarified this in both the CP and DP drafts.",
          "createdAt": "2025-06-30T18:24:31Z",
          "updatedAt": "2025-06-30T18:24:31Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": ">  Each AS could use any non-existent value as the \"unspecified\" ID, without coordinating with other ASes. \n\n@jiceatscion this value still needs to be coordinated between different implementations running within an AS. I don't see the benefit of leaving this as a value to be configured by the operator. Could we just fix it in the spec to 0? This would make it a lot easier in terms of vendor interoperability\n\nCC: @shitz @oncilla ",
          "createdAt": "2025-07-02T09:43:31Z",
          "updatedAt": "2025-07-02T09:43:31Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am not too sure where an unspecified interface ID convention is needed across components, but OK, if only to cut on questions, it doesn't much hurt to specify 0 as both invalid and as the only allowed representation of the unspecified ifID.",
          "createdAt": "2025-07-04T15:40:31Z",
          "updatedAt": "2025-07-04T15:40:31Z"
        },
        {
          "author": "oncilla",
          "authorAssociation": "NONE",
          "body": "Fixing it to 0 sounds good to me. I never thought it could be anything else than 0, tbh.\n\nOur implementation confirms this btw: https://github.com/scionproto/scion/blob/ad39a826931ce404b6fb922052e5d99d0e22ed2a/pkg/segment/seg.go#L166-L168\n\nhttps://github.com/scionproto/scion/blob/ad39a826931ce404b6fb922052e5d99d0e22ed2a/pkg/segment/seg.go#L181-L183",
          "createdAt": "2025-07-04T16:14:39Z",
          "updatedAt": "2025-07-04T16:14:39Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Agreed, let's fix it to 0. ! I'll try to find a wording. ",
          "createdAt": "2025-07-07T06:05:21Z",
          "updatedAt": "2025-07-07T06:05:21Z"
        }
      ]
    },
    {
      "number": 119,
      "id": "I_kwDOJx2-rs69Qy3R",
      "title": "Beaconing - clarify checks and impact of link type misconfigurations",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/119",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "Prio 2",
        "editorial",
        "needs-discussion"
      ],
      "body": "Relates to  #90 \n\n- [x] Double check that link types are drawn correctly in figures 3-5\n- [ ] Think about the impact of all possible link mismatches (parent/parent, parent/peer, parent/core, core/peer, core/child, child/peer) and eventually add some text\n- [ ] Do we need to add more checks in 2.3.1? (e.g. you don't expect to receive a PCB on a peer interface).\n- [ ] in 2.3.5.1.  should we change `to propagate to its downstream neighboring ASes` to `to propagate to its neighboring child ASes`? \n\n  \n### Alvaro's feedback\n```\n...\n1651\t   *  Neighbor type (core, parent, child, peer), depending on link type\n1652\t      (see Section 1.3).  Link type depends on mutual agreements between\n1653\t      the organizations operating the ASes at each end of each link.\n``` \n\n[] Is there a check anywhere for the types to match?  IOW, if the local AS indicates that the neighbor is a child, they should indicate parent... ??\n\nI'm asking because the relationship can be derived from the contents of the PCB.  But then I guess this is for internal use only, right?\n> Nico: These different relations (core, parent-child, peer) only relate to two direct neighbors. So in figure 3 AS W is a peer of Y and NOT a child of X/Y. They affect how PCBs are propagated. For example, peering links are a \u201cshortcut\" where no PCBs are propagated.\n\nWhat happens if (looking at Figure 3), for example, AS Y is configured with AS W as a peer, but AS W (which presumably is also a child of AS X) is configured with AS Y as a child?  In this case, AS W would propagate the PCB to AS Y -- will AS Y detect the misconfiguration?\n\n\u00a72.3.1 includes a check of the incoming interface, but not its type.  Is it needed?\n\nAlso, if AS Y lost its links to AS X, then the topology would change so that AS W would become a parent.  How is this type of change detected so that the configuration is adjusted?  Is the change dynamic?",
      "createdAt": "2025-06-25T11:31:43Z",
      "updatedAt": "2025-06-30T16:49:52Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 120,
      "id": "I_kwDOJx2-rs69fU6T",
      "title": "Are the ISD and SCION AS number allocations correct?",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/120",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "question",
        "Prio 1"
      ],
      "body": "Section 1.5.1 - ISD numbers\n\nShould the ranges be 64-4095 and 4096-65535?\n\nThe first 12-bits provide 4096 numbers, which if starting from zero means the last number in the range should be 4095 rather than 4094. This would mean the range above should start at 4096. \n\nSection 1.5.5 - Special-Purpose SCION AS Numbers\n\nThis section is confused. I think it may already have been moved into Section 1.5.2 \"SCION AS numbers\" in a pending PR, but I think this should simply be called 'SCION AS number allocations'. \n\nThe ranges of Public AS numbers are not special purpose. \n\nThe allocations have large gaps in the address space - assume these are reserved for future use, but should they be documented as with the reserved ISD numbers? See https://docs.google.com/spreadsheets/d/1p-Qdon6umxY6mVaoPU062NvSxkoeFVW_ulM2ZvwtVyk/\n",
      "createdAt": "2025-06-26T13:16:40Z",
      "updatedAt": "2025-07-04T11:06:57Z",
      "closedAt": "2025-07-04T11:06:57Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> The first 12-bits provide 4096 numbers, which if starting from zero means the last number in the range should be 4095 rather than 4094. This would mean the range above should start at 4096.\n\n4095 is reserved  [here](Should the ranges be 64-4095 and 4096-65535?) since 2019, I don't know why.  I asked in [scionproto](https://scionproto.slack.com/archives/C8ADA9CEP/p1751037993236509).",
          "createdAt": "2025-06-27T15:27:00Z",
          "updatedAt": "2025-06-27T15:27:18Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> This section is confused. I think it may already have been moved into Section 1.5.2 \"SCION AS numbers\" in a pending PR, but I think this should simply be called 'SCION AS number allocations'.\n\nAgreed, I changed it in #115 directly",
          "createdAt": "2025-06-27T15:32:09Z",
          "updatedAt": "2025-06-27T15:32:09Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "We agreed to remove ISD 4095. @shitz wrote on [Slack](https://scionproto.slack.com/archives/C8ADA9CEP/p1751269944894259?thread_ts=1751037993.236509&cid=C8ADA9CEP): \n>  honestly don't remember anymore. I could imagine that we wanted to have a \"canary\" value 0b111111111111 to mark the end of the range or to have it reserved for any special future use, e.g., much like 255.255.255.255 is the broadcast address for the current network.\nI'm aware that all of this sounds very superficial and given that the max ISD is 2^16-1 having this reserved number in the middle doesn't make a lot of sense, i.e., I wouldn't know how to defend it in a draft. Maybe we should just drop this.",
          "createdAt": "2025-06-30T09:47:37Z",
          "updatedAt": "2025-06-30T09:47:37Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've added the reserved ranges to the SCION AS table, plus the full address range to improve readability.",
          "createdAt": "2025-06-30T17:59:52Z",
          "updatedAt": "2025-06-30T17:59:52Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "I_kwDOJx2-rs69hSWf",
      "title": "Security considerations: add discussion about SCMP External Interface Down messages",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/121",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "enhancement",
        "Prio 2"
      ],
      "body": "We briefly discuss this in 6.7.  SCMP Authentication, perhaps we could move and extend this paragraph to the security considerations section. \n\n\nFeedback Alvaro: \n```\n2921\t   Recipients can use this information to route around a broken data\n2922\t   plane inside an AS.\n```\n\n[] A rogue router can send this message (or the External Interface Down message) to disrupt the forwarding of information and/or force the traffic through a different path. This type of potential attack should be listed in the Security Considerations.",
      "createdAt": "2025-06-26T16:08:59Z",
      "updatedAt": "2025-06-27T07:29:21Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 122,
      "id": "I_kwDOJx2-rs69hds6",
      "title": "Security considerations: language on security properties",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/122",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "Prio 2",
        "needs-discussion"
      ],
      "body": "- [ ] Discuss definition of honest ASes with @dgalan7\n- [ ] Eventually extend definition\n- [ ] Evaluate normative language on connnectedness\n\n#### Feedback Alvaro\n...\n3127\t7.1.  Security Properties\n\n3129\t   The SCION control plane provides various security properties, as\n3130\t   discussed below.  Here, an AS is described as 'honest' if its private\n3131\t   keys are unknown to the attacker and if it uses a unique interface\n3132\t   identifier for each link.  An honest path is one that only traverses\n3133\t   honest ASes.  A honest segment is the one created by an honest AS.\n\n[] As characterized, an honest AS can still provide false information; for example, including a false Key ID, incorrect interface IDs, etc.  In the case of incorrect interface IDs, the PCBs may look ok and pass the consistency and connectivity tests, but forwarding may fail.\n\n@dgalan7 this text comes as a result of your feedback. Did you model what would happen if an AS sends incorrect data in a beacon (e.g. interface IDs)? We might need to extend the definition of honest ASes\n\n\n```\n...\n3160\t   To ensure that the properties hold across the overall SCION network,\n3161\t   all core ASes should be able to reach each other with some sequence\n3162\t   of core links, and all non-core ASes should have at least one path up\n3163\t   to a core AS.  Furthermore, to ensure that the properties hold within\n3164\t   a single ISD, all cores ASes of the ISD should be able to reach each\n3165\t   other without leaving the ISD, i.e., for every pair of cores in an\n3166\t   ISD there is a sequence of SCION links that only traverses ISD\n3167\t   members.  A core AS may reach other core ASes in the same ISD via\n3168\t   other ISDs.  This may be permitted, depending on the ISD's policies.\n```\n\n>> [] Should the conditions in this paragraph be described using Normative language?\n\n> I\u2019m thorn on this. A SCION network might also be deployed isolated from\n> others. Would it then be appropriate to use normative language (e.g. all core\n> ASes SHOULD be able to reach each other with some sequence of core links)? \n> I\u2019m not sure.\n> \n> This text also comes from the assumptions made on the formal model of SCION.\n\nIn this case I was thinking more s/should/MUST.  The conditions should still be valid regardless of the size of the SCION network: if isolated from others then the conditions apply only to what is deployed.\n",
      "createdAt": "2025-06-26T16:28:10Z",
      "updatedAt": "2025-08-11T16:44:31Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "JFYI - the ISEG recently published guidance on the use of normative BCP 14 language https://datatracker.ietf.org/doc/statement-iesg-statement-on-clarifying-the-use-of-bcp-14-key-words/  ",
          "createdAt": "2025-07-22T16:27:29Z",
          "updatedAt": "2025-07-22T16:27:29Z"
        },
        {
          "author": "dgalan7",
          "authorAssociation": "NONE",
          "body": "> Did you model what would happen if an AS sends incorrect data in a beacon (e.g. interface IDs)?\n\n(TL;DR: In our current model, an AS that accidentally includes incorrect information is considered dishonest. Thus, some properties about beacons handled by such an AS may no longer be guaranteed to hold; the beacon is only *partially* valid.)\n\nIn our model, a beacon is tentatively considered *valid* when it meets six key criteria:\n\n- Non-empty: there is at least one (signed) hop entry.\n- Rooted: the first hop entry has the corresponding fields set to null, indicating that the beacon started there rather than being a suffix of a larger path.\n- Continuous: each hop's `next` field matches the subsequent hop's `current` field.\n- Acyclic: no duplicated hop entries (still under discussion).\n- Network-consistent (*): hop entries correspond to actual network topology links.\n- Valley-free (*): follows standard valley-free routing principles.\n\nHonest ASes perform sanity checks on received beacons and drop invalid ones. However, local validation has inherent limitations. While ASes can easily verify some properties (like non-rooted beacons), they cannot fully validate network-wide consistency or valley-free properties across the entire path. Thus, beacons traversing only honest ASes should remain fully valid, as the aggregation of all local checks appears sufficient to ensure end-to-end validity, while those passing through paths containing mixed honest/dishonest ASes may only be *partially* valid. The properties marked with (*) above are those that may be lost in paths that involve dishonest ASes.\n\nFor incorrect interface IDs specifically, each AS is only required to know its own interfaces, so validation is limited to local checks. ASes only verify that the beacon's claimed source matches the known remote end of their receiving interface. In other words, this covers the last hop entry only. Previous hops in the path are not verified, allowing dishonest ASes to potentially include incorrect interface information without detection. So \"network-consistency\" (of interfaces) is one of the aspects of validity that may be lost in mixed honest/dishonest paths.\n\nGoing back to your question, an \"honest\" AS is currently defined as one that follows all specification requirements (\"MUST\" clauses) and performs operations correctly. This includes ASes that accidentally include incorrect information: they are still considered dishonest/non-compliant under this working model. The terms \"compliant\" or \"correct\" may be more precise than \"honest.\" This approach aligns with distributed algorithms literature, where Byzantine fault models treat accidental errors and malicious behavior equivalently as \"arbitrary failures\", since both can cause nodes to deviate from correct protocol behavior and require the same defensive mechanisms.\n\n> In this case I was thinking more s/should/MUST. The conditions should still be valid regardless of the size of the SCION network: if isolated from others then the conditions apply only to what is deployed.\n\n(TL;DR: We suggest flexible \"if you want these properties for the considered subnetwork, then follow these prerequisites\" phrasing instead of strict requirements, allowing non-standard SCION deployments while making trade-offs clear.)\n\nOur approach aims to frame network topology assumptions to be evaluable universally across any subnetwork. For any given subnetwork, if it meets the specified assumptions and contains sufficient honest (compliant) ASes, then the security properties should hold within that subnetwork. This generalized framing would eliminate the need for specific language like \"for properties to hold for an ISD...\" in favor of universal statements applicable to any network scope.\n\nHowever, not all assumptions may be practical for every real-world deployment. Some network operators might prefer more flexible topologies even if it means sacrificing certain formal guarantees. Therefore, rather than using strict \"MUST\" requirements, it may be better to frame the specification as conditional: \"if you wish to have these properties, then these are the prerequisites to follow\". This approach would avoid unnecessarily constraining valid SCION deployments while clearly communicating the trade-offs.\n\nThe long-term goal is to establish more precise mappings between specific assumptions and their corresponding properties. This would enable network operators to understand exactly which guarantees they retain, which require manual verification, and which become impossible when they deviate from particular topology requirements. Such granular mapping would provide operators with informed choices about their deployment trade-offs rather than an all-or-nothing approach to compliance.",
          "createdAt": "2025-08-11T16:44:31Z",
          "updatedAt": "2025-08-11T16:44:31Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOJx2-rs6-g5yz",
      "title": "Clarify associated_data and PCB signing",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/125",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "enhancement",
        "Prio 2"
      ],
      "body": "- [ ] Clarify the purpose of associated_data (now the value is there in protobuf, but not introduced)\n\n\n#### Comments from Alvaro:\n   Clarify associated_data\n   ```1304   *  associated_data_length: Specifies the length of associated data\n   1305      that is covered by the signature, but is not included in the\n   1306      header and body.  The value of this field is zero, if no\n   1307      associated data is covered by the signature.\n   ```\n   > Where is that associated data carried?  The descriptions don't seem to\ninclude anything (beyond the PathSegmentUnsignedExtensions) that could also\nbe signed.\n\n#### Some thoughts:\n\nThe figure in [2.2.1.4.3.  AS Entry Signature](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-08.html#sign) is not right. It contains the text below, which comes from a [comment in the segment definition](https://github.com/scionproto/scion/blob/379c6c7db20695a53b758190cd6c4302d0c3ab20/proto/control_plane/v1/seg.proto#L108): \n```\ninput(ps, i) = signed.header_and_body || associated_data(ps, i)\n\nassociated_data(ps, i) = ps.segment_info ||\n                         ps.as_entries[1].signed.header_and_body ||\n                         ps.as_entries[1].signed.signature ||\n                         ...\n                         ps.as_entries[i-1].signed.header_and_body ||\n                         ps.as_entries[i-1].signed.signature\n```\n\nThe problems I see with this are:\n\n- [ ] Check that the code corresponds to what the code actually does in terms of signature calculation \n- [ ] `header_and_body` is explained, but its content is not specified in protobuf\n- [ ] `message ASEntry` in protobuf is defined twice, once in [2.2.1.3. AS Entry](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-08.html#section-2.2.1.3)[AS Entry](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-08.html#name-as-entry) and once in [Figure 20](https://www.ietf.org/archive/id/draft-dekater-scion-controlplane-08.html#name-control-service-grpc-api-si) in the appendix.",
      "createdAt": "2025-07-02T15:22:20Z",
      "updatedAt": "2025-07-02T15:59:47Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 127,
      "id": "I_kwDOJx2-rs6-4Xvj",
      "title": "Use example ranges in examples",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/127",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 3",
        "editorial"
      ],
      "body": "We changed ISD and ASes to use example ranges in the DP and PKI drafts. We have a few examples in the CP draft that we should think about: \n- Figure 1 \"SCION Links\" - uses AS A, B, C etc... - maybe this is okay\n- Figures 2-4 \"PCB Propagation\" use AS V, W, X, Y, Z\n- Figure 5 \"Possible path segments\" uses AS X, Y, Z\n- Figure 32-34 \"Topology\" use AS A, B, C, D, E, F, G\n\n@knmeynell says  It's impractical (due to space) and arguably unnecessary (as the AS examples use alphanumeric representations rather than addresses) for the Control Plane figures.\n\nI agree with him, I see two solutions: \n- add a note saying that we use letters in figures\n- We say these ASes are `ff00:0:a` , b, c, d, e and then in figures we only use A, B, C, D, E, F. However, figures 32-24 would be problematic as they also include G\n\n\nTwin issues: \n- https://github.com/scionassociation/scion-cppki_I-D/issues/69\n- https://github.com/scionassociation/scion-dp_I-D/issues/99",
      "createdAt": "2025-07-04T11:52:13Z",
      "updatedAt": "2025-07-04T13:28:59Z",
      "closedAt": "2025-07-04T13:28:59Z",
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Whilst we could add hex addresses in the explanations and map them to letters in a diagrams, I feel this ultimately would be more confusing. The figures are more conceptual diagrams rather than examples and do not mix other forms of addresses such as ISDs or IP numbers, so I think are understandable as is. ",
          "createdAt": "2025-07-04T13:06:24Z",
          "updatedAt": "2025-07-04T13:06:24Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Right, I noticed we already have a note in the text in figure 3: \n>  Interface identifiers of each AS are numbered with integer values while ASes are described with an upper case letter for the sake of illustration.  \n",
          "createdAt": "2025-07-04T13:28:59Z",
          "updatedAt": "2025-07-04T13:28:59Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJx2-rs5YmfhB",
      "title": "Cdk addressing feedback",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/1",
      "state": "MERGED",
      "author": "cdekater",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-23T13:57:12Z",
      "updatedAt": "2023-08-23T14:04:21Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d5cc2c4cfa275a0fef6a1d0c601c88cd7f379a40",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk_addressing-feedback",
      "headRefOid": "38e5e307f15a9371a4b7a9ca14cd9071a942424f",
      "closedAt": "2023-08-23T14:04:21Z",
      "mergedAt": "2023-08-23T14:04:21Z",
      "mergedBy": "cdekater",
      "mergeCommit": {
        "oid": "c4dc53e6651bc781cc36aa4e0a0dd6ad894045b3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJx2-rs5Ymx-Q",
      "title": "Final corrections",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/2",
      "state": "MERGED",
      "author": "cdekater",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-23T14:41:29Z",
      "updatedAt": "2024-05-28T14:02:31Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "c4dc53e6651bc781cc36aa4e0a0dd6ad894045b3",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk_addressing-feedback",
      "headRefOid": "d42375418c49f53429755b7f79aa0654438e1d2c",
      "closedAt": "2023-08-23T14:41:39Z",
      "mergedAt": "2023-08-23T14:41:39Z",
      "mergedBy": "cdekater",
      "mergeCommit": {
        "oid": "530f3f0cd218685a12eb4df72024f252446b07d7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOJx2-rs5hbWZZ",
      "title": "Update Security Considerations and IANA Section",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/3",
      "state": "MERGED",
      "author": "cdekater",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-07T14:11:45Z",
      "updatedAt": "2024-02-23T18:00:34Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "5bef5e20fe1ac7147d271afc1aec46e1d2ce98a9",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk-security-considerations-cp",
      "headRefOid": "dfb3675b91e6bcf78ded6bd54eb2863850884c8c",
      "closedAt": "2024-02-23T18:00:27Z",
      "mergedAt": "2024-02-23T18:00:27Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "cdd780068b10d3a42eacf4bcbf092bcfd518ed40"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5phCfW",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "The \"customer\" term is really confusing. I would prefer it changed. Everything else is just my two cents.",
          "createdAt": "2023-12-07T14:18:44Z",
          "updatedAt": "2023-12-07T14:59:29Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "What's \"AS M\" in \"for a malicious AS M\"? Oh, I get it. It's a name for the hypothetical AS that is malicious. The phrasing doesn't make it too obvious.\r\n\r\nI would suggest a few things:\r\n* In security circles, the good guys trying to communicate are typically called A (for Alice), and B (for Bob), while the villain is C (for Charlie).\r\n* May be start with. In what follows, we postulate two legitimate ASes, A (operated by Alice) and B (operated by Bob), and a malicious AS C, operated by Charlie.\r\n\r\nThat might make it easier to describe motivations and methods.\r\n",
              "createdAt": "2023-12-07T14:18:44Z",
              "updatedAt": "2023-12-07T14:59:29Z"
            },
            {
              "originalPosition": 61,
              "body": "I think the first attack might deserve a little more explanation:\r\n* How could charlie block the Alice-Bob connection?\r\n* Why would the traffic be re-directed to Charlie, without Charlie being already in a privileged position?\r\n* Why is it that we can't prevent it?\r\nI personally do not have the answers.\r\n",
              "createdAt": "2023-12-07T14:31:05Z",
              "updatedAt": "2023-12-07T14:59:29Z"
            },
            {
              "originalPosition": 90,
              "body": "In what follows, I think that by \"customer\" you mean \"consumer [of BCPs]\" right? \"Customer\" is confusing; it implies a commercial relationship, which doesn't seem to apply here. Or does it?",
              "createdAt": "2023-12-07T14:53:50Z",
              "updatedAt": "2023-12-07T14:59:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5p6kWF",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T08:57:46Z",
          "updatedAt": "2023-12-12T14:56:37Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": ".... and injecting its own ~~hop fields~~ _AS entry_ into the PCB toward downstream ASes.",
              "createdAt": "2023-12-12T08:57:46Z",
              "updatedAt": "2023-12-12T14:56:37Z"
            },
            {
              "originalPosition": 61,
              "body": "> The second attack is detectable by downstream ASes, because a PCB disseminated by AS A towards AS B contains an identifier for the egress interface from AS A to AS B, protected by A's signature\r\n\r\nI think the interface identifier is not what is relevant here. The \"next ISD AS\" field in the AS Entry is the thing that will allow a verifier to detect that something is wrong.",
              "createdAt": "2023-12-12T09:45:13Z",
              "updatedAt": "2023-12-12T14:56:37Z"
            },
            {
              "originalPosition": 58,
              "body": "It's not really clear what the attack here is and why such a modified PCB would be attractive.",
              "createdAt": "2023-12-12T09:46:07Z",
              "updatedAt": "2023-12-12T14:56:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhOT0",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T14:58:46Z",
          "updatedAt": "2023-12-18T14:58:47Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "@jiceatscion, thank you for your suggestion!\r\nI have removed the M for malicious, and also rephrased the text a bit. Hope it is more clear now. ",
              "createdAt": "2023-12-18T14:58:46Z",
              "updatedAt": "2023-12-18T14:58:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhRH_",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:02:11Z",
          "updatedAt": "2023-12-18T15:02:11Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "@jiceatscion, I think you have a fair point. But unfortunately, I also have no answers. I took it from the SCION book, and given the fact that there was no explanation there, I thought it was obvious for all people with an IT background...   ",
              "createdAt": "2023-12-18T15:02:11Z",
              "updatedAt": "2023-12-18T15:02:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhRm7",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:03:13Z",
          "updatedAt": "2023-12-18T15:03:14Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "@jiceatscion, thanks. I have removed \"customer\" everywhere and replaced it with downstream ASes.  ",
              "createdAt": "2023-12-18T15:03:13Z",
              "updatedAt": "2023-12-18T15:03:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhSm2",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:05:02Z",
          "updatedAt": "2023-12-18T15:05:02Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "@matzf: thanks for the correction/feedback!\r\nRegarding \"attractive\": I have replaced it with \"alternative\". ",
              "createdAt": "2023-12-18T15:05:02Z",
              "updatedAt": "2023-12-18T15:05:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhS8F",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:05:40Z",
          "updatedAt": "2023-12-18T15:05:40Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "@matzf: good point, thanks! I have changed the text accordingly. ",
              "createdAt": "2023-12-18T15:05:40Z",
              "updatedAt": "2023-12-18T15:05:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qqzBK",
          "commit": {
            "abbreviatedOid": "8e08e0f"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-19T19:42:11Z",
          "updatedAt": "2023-12-19T19:42:11Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nThis document has no IANA actions.\r\n\r\nThe ISD and SCION AS number are SCION-specific numbers. They are currently allocated by Anapaya Systems, a provider of SCION-based networking software and solutions. This task is currently being transitioned  from Anapaya to the SCION Association.\r\n```\r\nBesides that, I'd add a reference to: https://docs.anapaya.net/en/latest/resources/isd-as-assignments \r\nAs we (Association) take over the task, we will update this to our page. \r\n",
              "createdAt": "2023-12-19T19:42:11Z",
              "updatedAt": "2023-12-19T19:42:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qq0CK",
          "commit": {
            "abbreviatedOid": "8e08e0f"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-19T19:45:15Z",
          "updatedAt": "2023-12-19T19:45:15Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Also, I would delete from section 1.5.1 this text: \r\n``` \r\nA suitable mechanism to globally coordinate the assignation of ISD\r\n   numbers does not yet exist.  However, we hope that in the future an\r\n   organization such as ICANN or a regional Internet registry (e.g.,\r\n   RIPE NCC) will take on the responsibility of assigning ISD and AS\r\n   numbers.\r\n   ```\r\n   This is because the mechanism exists and it is Anapaya.. To get to have internet registries, we need the IANA section, which needs an IETF publication... So I'd just omit this text .\r\n   \r\n   Also, I'd add the same reference to Anapaya's page also there. \r\n   ",
              "createdAt": "2023-12-19T19:45:15Z",
              "updatedAt": "2023-12-19T19:45:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qwGfp",
          "commit": {
            "abbreviatedOid": "8e08e0f"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T14:20:58Z",
          "updatedAt": "2023-12-20T14:20:58Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "@nicorusti: Thank you for your feedback. I have changed this draft, and also the other two drafts, accordingly.\r\nBest\r\nCorine",
              "createdAt": "2023-12-20T14:20:58Z",
              "updatedAt": "2023-12-20T14:20:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5sWGUL",
          "commit": {
            "abbreviatedOid": "5f59666"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "My comments have been sufficiently addressed for now.",
          "createdAt": "2024-01-12T09:09:32Z",
          "updatedAt": "2024-02-22T18:24:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5srdSP",
          "commit": {
            "abbreviatedOid": "2f4ecf5"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T13:15:54Z",
          "updatedAt": "2024-01-16T13:15:54Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "```suggestion\r\nMany thanks go to William Boye (Swiss National Bank), Matthias Frei (SCION Association), Kevin Meynell (SCION Association), Juan A. Garcia Prado (ETH Zurich), and Roger Lapuh (Extreme Networks) for reviewing this document. We are also very grateful to Adrian Perrig (ETH Zurich), for providing guidance and feedback about each aspect of SCION. Finally, we are indebted to the SCION development teams of Anapaya and ETH Zurich, for their practical knowledge and for the documentation about the SCION Control Plane, as well as to the authors of [CHUAT22] - the book is an important source of input and inspiration for this draft.\r\n```",
              "createdAt": "2024-01-16T13:15:54Z",
              "updatedAt": "2024-01-16T13:15:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5s_ihM",
          "commit": {
            "abbreviatedOid": "2f4ecf5"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T02:31:27Z",
          "updatedAt": "2024-01-18T02:31:27Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "I'm not sure 'frustrate' is the right term here, but I need to understand the context better. ",
              "createdAt": "2024-01-18T02:31:27Z",
              "updatedAt": "2024-01-18T02:31:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5s_jA8",
          "commit": {
            "abbreviatedOid": "2f4ecf5"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T02:33:18Z",
          "updatedAt": "2024-01-18T03:17:51Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nThe first kind of risk to the beaconing process in the control plane comes from an adversarial entity that controls one or all core ASes in an ISD (e.g., a government). One possible attack would be when this entity stops the core AS(es) from propagating PCBs, thus frustrating the discovery of new paths. In this case, downstream ASes will notice that PCBs are no longer being propagated, but all previously discovered (and still valid) paths are still usable for data-plane forwarding until they expire.\r\n```",
              "createdAt": "2024-01-18T02:33:18Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nAnother possible attack of this adversarial entity could be to shut down the control services, by compelling core and non-core ASes to stop replying to path requests, or only return a subset of all available paths. If this attack were used in conjunction with blackholing, where traffic is redirected to a non-existent resource, senders in the ISD would have difficulty getting traffic out of the ISD. In SCION, however, existing paths can continue to be used in the data plane as long as the traversed ASes allow the forwarding.\r\n```",
              "createdAt": "2024-01-18T02:35:23Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 110,
              "body": "```suggestion\r\n- The adversary could intercept and disseminate a PCB on its way from a specific AS A to the neighboring AS B, and inject its own AS entry into the PCB toward downstream ASes. The goal is to offer AS B an alternative up-segment that traverses the adversary's own AS to the core.\r\n```",
              "createdAt": "2024-01-18T02:37:18Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n- The adversary could modify the hop fields of an already existing path, in order to insert its own AS in the path.\r\n```",
              "createdAt": "2024-01-18T02:38:15Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nThe first type of attack generally cannot be prevented, but SCION is able to mitigate the other two types of attack.\r\n\r\nThe second type of attack is detectable by downstream ASes, because a PCB disseminated by AS A towards AS B contains the \"Next ISD AS\" field in the entry of AS A, pointing to AS B, and protected by A's signature. This will cause verification of the manipulated inbound PCBs to fail, as the adversary's PCBs cannot contain A's correct signature.\r\n\r\nThe third type of attack is made impossible by the hop field's MAC, which protects the hop field's integrity and chains it with the previous hop fields on the path.\r\n```",
              "createdAt": "2024-01-18T02:40:16Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nPath selection is one of the main benefits of SCION compared to the current Internet, where hosts have no control over the forwarding paths that their packets traverse. However, with the benefits of path selection comes the risk of endpoints selecting non-optimal paths. This section discusses some mechanisms with which an adversary can attempt to trick endpoints downstream (in the direction of beaconing) into choosing non-optimal paths. The goal of such attacks is to make paths that are controlled by the adversary more attractive than other available paths.\r\n```",
              "createdAt": "2024-01-18T02:43:26Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 150,
              "body": "```suggestion\r\nIn general, the number of PCBs that an adversary can announce this way scales exponentially with the number of consecutive ASes the adversary controls. However, this also decreases their chance of being chosen by a downstream AS for PCB dissemination or by an endpoint for path construction, as these relatively long paths have to compete with other, shorter paths. Furthermore, both endpoints and downstream ASes can detect poorer quality paths in the data plane and switch to better paths.\r\n```",
              "createdAt": "2024-01-18T02:57:14Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 156,
              "body": "```suggestion\r\nWithout specific prevention mechanisms, these so-called wormhole attacks are unavoidable in routing. The current implementation of SCION does not yet provide wormhole prevention mechanisms.\r\n```",
              "createdAt": "2024-01-18T02:57:55Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 162,
              "body": "```suggestion\r\nTo defend against this kind of wormhole attacks, it is necessary to be able to detect these attacks. The current implementation of SCION is not yet able to do this.\r\n```",
              "createdAt": "2024-01-18T02:58:35Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xIfzV",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T12:57:42Z",
          "updatedAt": "2024-02-23T12:57:42Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "This is coming from section 7.4.1 Path Hijacking through Interposition. These attacks requires the adversary to be on-path (which is a very strong assumption).  I clarified this in the text and reworded. Also the last attach could not be prevented, but the different path would be immediately visible to endpoints.",
              "createdAt": "2024-02-23T12:57:42Z",
              "updatedAt": "2024-02-23T12:57:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xIqm4",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T13:17:45Z",
          "updatedAt": "2024-02-23T13:17:46Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Metadata is generally contained in PCB extensions. Such extensions that express path properties are not described in this draft, as far as I know they are also not widely used in productive implementations. \r\nI'll therefore remove this section, as I feel it does not apply to the content of the draft. ",
              "createdAt": "2024-02-23T13:17:45Z",
              "updatedAt": "2024-02-23T13:17:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xJU8n",
          "commit": {
            "abbreviatedOid": "42a5d09"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T14:40:34Z",
          "updatedAt": "2024-02-23T14:40:34Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "This part about shutting down the control service of an AS is more of a kill-switch than an attack, and it requires access or control over an AS. This cannot be performed remotely. \r\nI'd therefore remove this paragraph",
              "createdAt": "2024-02-23T14:40:34Z",
              "updatedAt": "2024-02-23T14:40:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xJdPv",
          "commit": {
            "abbreviatedOid": "3e768ad"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T14:54:35Z",
          "updatedAt": "2024-02-23T14:54:35Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "This seems to me just a special case of \"Path Hijacking through Interposition\"  described in the paragraph above. I'd leave it for now, but perhaps it could be merged to the paragraph above in the long term.\r\n",
              "createdAt": "2024-02-23T14:54:35Z",
              "updatedAt": "2024-02-23T14:54:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOJx2-rs5jdeyR",
      "title": "Disambiguate the use of \"MAC\".",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/4",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses: https://github.com/scionassociation/standards/issues/98\r\nFixes #5 ",
      "createdAt": "2024-01-08T10:33:57Z",
      "updatedAt": "2024-02-22T16:55:37Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "41a1ec696545909a3b1bff38af8af3a19d0628c4",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "fix_MAC",
      "headRefOid": "c9937d970ee8e565129b8b9e4fcb2e85d556c572",
      "closedAt": "2024-02-22T16:55:34Z",
      "mergedAt": "2024-02-22T16:55:34Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "65f3a7186d96a7a39b1bb5627a713e0674b630b2"
      },
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks! Time to remove the 2-approval rule?",
          "createdAt": "2024-02-22T15:06:49Z",
          "updatedAt": "2024-02-22T15:06:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xBAyg",
          "commit": {
            "abbreviatedOid": "c9937d9"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM \r\n",
          "createdAt": "2024-02-22T15:02:46Z",
          "updatedAt": "2024-02-22T15:02:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOJx2-rs5jkC0K",
      "title": "Declare SCION AS numbers independant from BGP ASNs.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/10",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is my proposal to address the scion/BGP AS number objection.\r\n\r\nFixes #9 ",
      "createdAt": "2024-01-09T10:36:18Z",
      "updatedAt": "2024-02-22T18:20:59Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "41a1ec696545909a3b1bff38af8af3a19d0628c4",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "AS_num",
      "headRefOid": "39fbe9c3bfd94195b70b4652188102043a085417",
      "closedAt": "2024-02-22T18:20:56Z",
      "mergedAt": "2024-02-22T18:20:56Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5bef5e20fe1ac7147d271afc1aec46e1d2ce98a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xC7u1",
          "commit": {
            "abbreviatedOid": "39fbe9c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I edited a bit of wording, it overall looks good to me. ",
          "createdAt": "2024-02-22T18:20:28Z",
          "updatedAt": "2024-02-22T18:20:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOJx2-rs5j1VQk",
      "title": "Improve references classification and uses of MUST and SHOULD",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/11",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There's still some more MUST required IMHO.\r\n",
      "createdAt": "2024-01-11T16:38:55Z",
      "updatedAt": "2024-05-17T09:40:16Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "cdd780068b10d3a42eacf4bcbf092bcfd518ed40",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Normative_refs_terms",
      "headRefOid": "6041f1a1f255486346f6309f72f5dc4ab96677dd",
      "closedAt": "2024-02-23T18:43:23Z",
      "mergedAt": "2024-02-23T18:43:23Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "9ff5f72e47343502fba72129ec79d4f5e46a44b6"
      },
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As far as I remember, I went through every instance of must may should and their negatives. The should that I left in lowercase were likely intentional: layman use of the word for phrasing as opposed to normative, or sufficiently optional to not deserve an uppercase \"should\". But my opinion is just that, of course.\r\n\r\n",
          "createdAt": "2024-02-26T09:34:27Z",
          "updatedAt": "2024-02-26T09:34:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xLENk",
          "commit": {
            "abbreviatedOid": "6041f1a"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Hi JC, IN see that you left several should etc in lowercase. Was this intentional, based on [rfc8174](https://datatracker.ietf.org/doc/html/rfc8174)?\r\n\r\nI agree with you that some more work on these terms might be needed, I openet #12  to track this, as I'll merge this one to submit a new version to datatracker ",
          "createdAt": "2024-02-23T18:43:01Z",
          "updatedAt": "2024-02-23T18:43:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOJx2-rs5oBktS",
      "title": "Security considerations - DoS",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/13",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-27T10:18:47Z",
      "updatedAt": "2024-05-17T09:40:14Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "9ff5f72e47343502fba72129ec79d4f5e46a44b6",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk-security-considerations-cp",
      "headRefOid": "ebaa0373a7d916e8fd82865abff954dc582ef3dc",
      "closedAt": "2024-03-04T15:23:53Z",
      "mergedAt": "2024-03-04T15:23:53Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@knmeynell if you can have a wording pass, can you go through the whole security considerations section? (lines 1475-1565)?",
          "createdAt": "2024-03-01T11:02:52Z",
          "updatedAt": "2024-03-01T11:02:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xiB5t",
          "commit": {
            "abbreviatedOid": "c90b1b9"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T20:27:24Z",
          "updatedAt": "2024-02-27T20:27:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Suggestion:\r\n\r\n---\r\n\r\n[...] e.g. filtering, geo-blocking or using cookies.\r\n\r\nRPC methods that are available to endpoints in the local AS are strictly separate from methods available to from other ASes. Specifically, expensive recursive path segment and trust material lookups are thus shielded from abuse by unauthorized entities.\r\nFor RPC methods exposed to other ASes, the control service implementation minimizes its attack surface by rejecting illegitimate callers based on ISD/AS, path type and length and any other available data points as soon as possible, i.e. immediately after determining the request type. For example:\r\n- `SegmentCreationService.Beacon` can only be called by direct neighbors and thus calls from peers with a path length greater than one can immediately be discarded. \r\n- `SegmentRegistrationService.SegmentsRegistration` can only be called from within the same ISD, thus the source address must match the local ISD and the number of path segments must be 1.\r\n",
              "createdAt": "2024-02-27T20:27:24Z",
              "updatedAt": "2024-02-27T20:27:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xo4Ny",
          "commit": {
            "abbreviatedOid": "c90b1b9"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T15:16:32Z",
          "updatedAt": "2024-02-28T15:16:33Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Awesome, that is exactly what I was looking for. I introduced your points. I just slightly changed the wording of the first part  a bit (e.g. on local AS), but the concept should be unchanged.  ",
              "createdAt": "2024-02-28T15:16:33Z",
              "updatedAt": "2024-02-28T15:16:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDOJx2-rs5wW4yN",
      "title": "Add tentative description of CS API.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/24",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Documents connectRPC as the RPC protocol instead of the old gRPC/HTTP2/QUIC stack. Document service resolution minimally.\r\n\r\nFixes #15\r\n",
      "createdAt": "2024-05-23T16:45:12Z",
      "updatedAt": "2024-06-04T19:52:01Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "grpc_api_described",
      "headRefOid": "573335ff67a69ede6b39860864e201ea37aaff90",
      "closedAt": "2024-06-04T08:55:03Z",
      "mergedAt": "2024-06-04T08:55:03Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "66253684fc5e9ae56ad10f7cc1677016b0df7a27"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thanks a lot and sorry for my late review. LGTM, I Just fixed a reference and a word in #35 ",
          "createdAt": "2024-06-04T19:51:01Z",
          "updatedAt": "2024-06-04T19:52:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58AqRM",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-27T09:58:27Z",
          "updatedAt": "2024-05-27T12:13:04Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Tangential: I saw this note:\r\n```\r\n**Note:** The SCION open-source implementation makes use of Protobuf (Protocol Buffers), a free and open-source cross-platform data format developed by Google and used to serialize structured data. The messages and remote procedure calls described below are in \"proto3\" language. For more information on Protobuf, see the official [\"Protocol Buffers Documentation\"](https://protobuf.dev/).\r\n```\r\n\r\nThis looks a bit out of place where it currently is and I think it's redundant with the information in the \"## Communication protocol\" section. I'd suggest to remove it (or integrate anything that could still be relevant into the Communication Protocol section).",
              "createdAt": "2024-05-27T09:58:27Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 16,
              "body": "definitino -> definition",
              "createdAt": "2024-05-27T09:59:34Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 14,
              "body": "Personally, I would only describe the connect RPC approach and leave out the complication that there is an ongoing transition. Optimistically, this will be complete once this document is published. We know that it works, we know how to do the transition with forwards and backwards and sideways compatibility etc and I think it's fair to assume that a future reader of the document will not have any interest in our current sub-optimal implementation.\r\n\r\n@nicorusti?",
              "createdAt": "2024-05-27T10:07:29Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 16,
              "body": "There are still some detail about how QUIC connections are established missing here.\r\nMy suggestion would be to add an Appendix B with this information, something like \"Data plane considerations for control plane\".\r\n\r\n- the paths:\r\n  - Client side of QUIC connection determines path, server uses reverse path.\r\n  - neighbor-to-neighbor ASes use one-hop paths that are always available to control plane nodes. This is used for all path discovery.\r\n  - path segment registration uses the path being registered.\r\n  - path lookup is incremental (not sure if this is already described somewhere else); use any known up-segment to lookup core segments to destination ISD. Then use any up-core paths to lookup down segments in destination ISD.\r\n    For this type of requests, typically many paths will be available to choose from. Basic implementation can pick random path and simply retry on faults. Better would be to keep track of path properties like experienced latency, loss rate, etc and pick \r\n  - None of these are binding, CS can arbitrarily pick any available path.\r\n- Service address resultion: even though I'd like this to go away, I'm not optimistic about finding a consensus for an alternative approach for this and implementing it quickly. I think we should include how this currently works:\r\n  - document the message types from `svc_resolution.proto`.\r\n  - the service resolution protocol:\r\n     - send service resolution request ; single UDP pkt with `ServiceResolutionRequest{}`  destination port 0, dst host SVC_CS. Note request is an empty protobuf message, so this is an empty datagram.\r\n     - whoever is SVC_CS in destination AS (resolved by ingress router, see service addresses in dataplane draft) sends single UDP pkt reply to source ISD-AS,address:port of the request with `ServiceResolutionResponse{}` body, that contains a host addresses + UDP port for the transport type \"QUIC\".\r\n  - initiate QUIC connection to address in `response.transports[\"QUIC\"]`.\r\n- TLS certificates for QUIC: for all the RPCs described here, self signed dummy certificates can be used, as we do _not_ check the server (or client) certificates; the messages transported over the RPCs are individually authenticated and we do not need a secure channel.\r\n  - Side note: in practice, we use CP-PKI AS certificates, just because we can, and because we use it to establish a secure channel for experimental extensions that _do_ benefit from a secure channel (i.e. for DRKey, but perhaps we shouldn't mention this).",
              "createdAt": "2024-05-27T11:51:38Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 163,
              "body": "Remove this line; it doesn't do anything and should long have been deleted.",
              "createdAt": "2024-05-27T11:57:03Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 125,
              "body": "Maybe try phrase this to clarify that this is the API exposed to other ASes, i.e. to other control services.",
              "createdAt": "2024-05-27T12:04:26Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 225,
              "body": "The `SignedMessage` message type and its internal details were previously included here, I think we need it. We can either add it back directly into the same code block, or we can create a separate block with just these helper types.\r\nWe need:\r\n- SignedMessage \r\n- HeaderAndBodyInternal\r\n- Header\r\n- VerificationKeyID\r\n- SignatureAlgorithm (previously missing).",
              "createdAt": "2024-05-27T12:11:38Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 141,
              "body": "Maybe add a comment to hint that this LookupService is only exposed on control services of core ASes?",
              "createdAt": "2024-05-27T12:12:48Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58IrUD",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:29:03Z",
          "updatedAt": "2024-05-28T12:29:03Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "I wasn't aware of that. Looking into the code, I can see that non-core servers are different (they are forwarding servers - presumably forwarding to core servers). But the API is the exact same, so if we need to make a distinction, this might not be the most relevant spot. Do we have to mandate that non-core servers know nothing?",
              "createdAt": "2024-05-28T12:29:03Z",
              "updatedAt": "2024-05-28T12:29:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8LC",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:18Z",
          "updatedAt": "2024-05-28T12:58:18Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "gone",
              "createdAt": "2024-05-28T12:58:18Z",
              "updatedAt": "2024-05-28T12:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8MS",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:20Z",
          "updatedAt": "2024-05-28T12:58:20Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "done",
              "createdAt": "2024-05-28T12:58:20Z",
              "updatedAt": "2024-05-28T12:58:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8N3",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:22Z",
          "updatedAt": "2024-05-28T12:58:22Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "done",
              "createdAt": "2024-05-28T12:58:22Z",
              "updatedAt": "2024-05-28T12:58:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8QK",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:25Z",
          "updatedAt": "2024-05-28T12:58:25Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Did my best without writing a whole new chapter.\r\n",
              "createdAt": "2024-05-28T12:58:25Z",
              "updatedAt": "2024-05-28T12:58:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8Vm",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:34Z",
          "updatedAt": "2024-05-28T12:58:34Z",
          "comments": [
            {
              "originalPosition": 163,
              "body": "gone",
              "createdAt": "2024-05-28T12:58:34Z",
              "updatedAt": "2024-05-28T12:58:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8Yp",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:38Z",
          "updatedAt": "2024-05-28T12:58:38Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "done",
              "createdAt": "2024-05-28T12:58:38Z",
              "updatedAt": "2024-05-28T12:58:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8ex",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:48Z",
          "updatedAt": "2024-05-28T12:58:48Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "done\r\n",
              "createdAt": "2024-05-28T12:58:48Z",
              "updatedAt": "2024-05-28T12:58:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58b2Y7",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-30T08:52:12Z",
          "updatedAt": "2024-05-30T08:52:12Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "> But the API is the exact same, so if we need to make a distinction, this might not be the most relevant spot\r\n\r\nAs far as I remember, for the non-core ASes the Segment Lookup API is only exposed on the AS-internal TCP gRPC server. It doesn't exist in the inter-AS SCION/QUIC gRPC service. (See https://github.com/scionproto/scion/blob/9d52e2f8d2211427707dfe5b4028158759ebddeb/control/cmd/control/main.go#L366C1-L371C1; the SegmentLookupService is only available on the QUIC server in core ASes)",
              "createdAt": "2024-05-30T08:52:12Z",
              "updatedAt": "2024-05-30T08:52:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58dq63",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-30T12:31:37Z",
          "updatedAt": "2024-05-30T12:31:37Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "done\r\n",
              "createdAt": "2024-05-30T12:31:37Z",
              "updatedAt": "2024-05-30T12:31:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580pk5",
          "commit": {
            "abbreviatedOid": "573335f"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-03T15:17:10Z",
          "updatedAt": "2024-06-03T15:17:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOJx2-rs5we-iv",
      "title": "Address clock drift.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/25",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is almost identical to what I [added to the DP draft](https://github.com/scionassociation/scion-dp_I-D/pull/19). I also fixed a weird sentence about the routers dropping packets with expired hops.\r\n\r\nThe reviewers attention is kindly directed to section 2.2.3.\r\n\r\nAddresses #18 ",
      "createdAt": "2024-05-24T16:05:35Z",
      "updatedAt": "2024-06-05T15:02:05Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "66253684fc5e9ae56ad10f7cc1677016b0df7a27",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "clock_drift",
      "headRefOid": "3f0e73de94f2002ec0197c9c0ef1d52c5e3f48af",
      "closedAt": "2024-06-05T15:02:00Z",
      "mergedAt": "2024-06-05T15:02:00Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "60418e3460510480b9560bcaaf601a4ef2031c90"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58nyMh",
          "commit": {
            "abbreviatedOid": "e4df3eb"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Hi @jiceatscion there are a few things worth addressing, the biggest one regards the new section on clock drift. Let's perhaps discuss this directly after you take a look at my comments. ",
          "createdAt": "2024-05-31T13:12:11Z",
          "updatedAt": "2024-05-31T16:12:22Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Neighbor-based path discovery: Path discovery in SCION is performed by the beaconing mechanism. In order to participate in this process, an AS only needs to be aware of its direct neighbors. As long as no path segments are available, communicating with the neighboring ASes is possible with the one-hop path type, which does not rely on any path information. SCION uses these *one-hop paths* to propagate PCBs to neighboring ASes to which no forwarding path is available yet. The One-Hop Path Type is described in more detail in {{I-D.scion-dp}}.\r\n```",
              "createdAt": "2024-05-31T13:12:42Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n```\r\nIs there any reason why you added these newlines? \r\nApparently they don't change anything in the final draft, see \r\nhttps://author-tools.ietf.org/iddiff?url1=draft-dekater-scion-controlplane-03&url2=https://scionassociation.github.io/scion-cp_I-D/clock_drift/draft-dekater-scion-controlplane.txt&difftype=--html",
              "createdAt": "2024-05-31T13:15:18Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 78,
              "body": "What happens if an AS receives a future PCB that is invalid? Must it be dropped? This should be clearer in the text, A suggestion including some word smithing (assuming it MUST be dropped): \r\n```suggestion\r\n- `timestamp`: The 32-bit timestamp indicates the creation time of this PCB. It is set by the originating core AS. The expiration time of each hop field in the PCB is computed relative to this timestamp. The timestamp is encoded as the number of seconds elapsed since the POSIX Epoch (1970-01-01 00:00:00 UTC).\r\n```\r\n\r\n> The expiration time of the corresponding path segment\r\n\r\nAlso, shouldn't expiration time in a PCB refer to hop fields and not to the path segment, or am I confused?\r\n",
              "createdAt": "2024-05-31T13:43:48Z",
              "updatedAt": "2024-06-03T11:55:27Z"
            },
            {
              "originalPosition": 111,
              "body": "I'd remove the reference to expired hop fields in the data plane, and keep this info in the DP draft directly.\r\n```suggestion\r\n- `exp_time`: The 8-bit encoded expiration time of the hop field, indicating its validity. This field expresses a duration in seconds according to the formula: `duration = (1 + exp_time) * (24*60*60/256)`. The minimum duration is therefore 337.5 s. This duration is relative to the PCB creation timestamp set in the PCB's segment information component (see also [](#seginfo)). By combining these two values, an AS can compute the absolute expiration time of the hop field.\r\n```",
              "createdAt": "2024-05-31T14:01:16Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n- `mac`: The message authentication code (MAC) used in the data plane to verify the hop field. {{I-D.scion-dp}} provides a detailed description of the computation of the MAC and the verification of the hop field.\r\n```",
              "createdAt": "2024-05-31T14:06:49Z",
              "updatedAt": "2024-06-03T12:00:48Z"
            },
            {
              "originalPosition": 132,
              "body": "I'd remove this section from here and put it later. How about we put it in  section `Reception of PCBs`? or after `Path-Segment Registration on Code-Level`? \r\n\r\nAlso, I'd  separate text for each one of the drafts. Here, I'd mention only text that is specific to the control plane, and I'd put it somewhere else. \r\n\r\n> Routers along a packet's path verify the validity of hop fields by comparing the current time with a hop's expiration time.\r\nThis expiration time is calculated as described in [](#hopfield) on the basis of the segment's timestamp. That timestamp is assigned by the host that originates the segment. A fast clock at origination or a slow clock at a router will yield a lengthened time-to-live; possibly an origination time in the future. A slow clock at origination or a fast clock at a router will yield a shortened time to live; possibly an expiration time in the past.\r\n> By default, segments are propagated once a minute. A segment is registered by the last AS of that segment, therefore up to N minutes after origination, where N is the length of the segment. As a result, a segment must have a life time of at least N minutes to be of any use. N being the length of the segment. On the other hand, a very recent segment, which clocks offset could make appear from the future, ages by 1 minute per hop before being used, thereby reducing the impact of clock drift in that respect.\r\n\r\nThis feels more like a discussion about propagation interval, it is something that is missing on the draft, but I don't think it strictly relates to clock drift.\r\nIn the CP it is not routers, but the control service who is validating  hop field validity in PCBs. I think this section is not about clock drift, more about how propagation interval and HF expiration time interplay. I think this paragraph could go where we say `- The *propagation interval* SHOULD be at least \"5\" (seconds) for intra-ISD beaconing and at least \"60\" (seconds) for core beaconing.`\r\n\r\n\r\n> The unit of a segment's time-to-live is 5 minutes and 37 seconds (and 500 ms), or the equivalent of 5 hops. Given the above constraints, it is unreasonable to create a segment with a short time-to-live, while each additional time-to-live unit adds more than 5 minutes. As a result, a clock drift of up to 1 minute can be safely neglected.\r\nThe control service and its clients authenticate each-other according to their respective AS's certificate. Path segments are authenticated based on the certificates of the ASes that they refer to. The time validity of a certificate is affected by the offset between verifier and originator clocks. The expiration of a SCION AS certificate typically ranges from 3h to 5 years. As a result, a time offset measured in minutes is immaterial.\r\nEach administrator of a SCION router or core control service is responsible for maintaining sufficient clock accuracy. No particular method is assumed by this specification.\r\n\r\nI'd reword this section to say that the maximum clock drift between any two ASes is in the range of the \r\nmin(`exp_time`) - sum(propagation intervals along a path) where min(`exp_time`) is 337.5s. \r\nIt would be also nice to say something more about propagation intervals in the section described above. Is there a maximum propagation interval somewhere? If not, shall we explain what are the tradeoffs and why we recommend min 5 and 60s (and why this value should not be too high)? ",
              "createdAt": "2024-05-31T14:24:54Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 92,
              "body": "I'd simplify wording on certificate a bit, as the key pair belongs to the same cert (or could you use a different certificate to verify the AS entry?) \r\n\r\n\r\n```suggestion\r\nEach AS entry MUST be signed with the AS certificate's private key K<sub>i</sub>. The certificate MUST have a validity period fully containing that of the segment being verified; regardless of current time. The signature Sig<sub>i</sub> of an AS entry ASE<sub>i</sub> is computed over the AS entry's signed component. This is the input for the computation of the signature:\r\n```\r\n\r\n> validity period fully containing that of the segment being verified; regardless of current time.\r\n\r\nI find thus wording confusing. Shouldn't the validity of the cert be > than the longest expiration time among alll hop fields included in the AS entry? I'd also not mention \"regardless of current time\"\r\n",
              "createdAt": "2024-05-31T14:41:17Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 172,
              "body": " I slightly reworded the existing text to make clear that, when receiving a PCB, the CS must validate it. ",
              "createdAt": "2024-05-31T15:34:55Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 78,
              "body": "Also, please try to reuse the terminology already in use in the draft. For Hop fields, we use \"expiration time\", not \"time to live\"",
              "createdAt": "2024-05-31T15:51:54Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580bNv",
          "commit": {
            "abbreviatedOid": "615582c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T14:54:35Z",
          "updatedAt": "2024-06-03T14:56:22Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "> By combining these two values, an AS can compute the absolute expiration time of the hop field.\r\n\r\nNit: _anyone_ can compute the expiration time, not only \"an AS\". E.g. endpoints might have to do this to check if a path is still usable.",
              "createdAt": "2024-06-03T14:54:35Z",
              "updatedAt": "2024-06-03T14:56:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580_Jo",
          "commit": {
            "abbreviatedOid": "615582c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T15:47:53Z",
          "updatedAt": "2024-06-03T15:47:53Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "as we discussed. I added a PCB validity section and moved, and simplify, the clock accuracy section.",
              "createdAt": "2024-06-03T15:47:53Z",
              "updatedAt": "2024-06-03T15:47:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs586xlX",
          "commit": {
            "abbreviatedOid": "615582c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-04T08:59:51Z",
          "updatedAt": "2024-06-04T08:59:51Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "done.\r\n",
              "createdAt": "2024-06-04T08:59:51Z",
              "updatedAt": "2024-06-04T08:59:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5861AB",
          "commit": {
            "abbreviatedOid": "49b9d77"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-04T09:05:56Z",
          "updatedAt": "2024-06-04T09:05:56Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "I rewrote/moved based on these comments and our subsequent discussions. I leaned in the direction of less: the reader needs to be aware of the forces at play but can draw their own conclusions. They are fairly obvious but highly dependent on use case and policies. If we try to give advice we end-up with a complete administrator's manual. Not what we want here.\r\n\r\nTentatively resolving now.\r\n",
              "createdAt": "2024-06-04T09:05:56Z",
              "updatedAt": "2024-06-04T09:05:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59I3zD",
          "commit": {
            "abbreviatedOid": "49b9d77"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:58:38Z",
          "updatedAt": "2024-06-05T14:58:38Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "Thanks a lot, looks good now! ",
              "createdAt": "2024-06-05T14:58:38Z",
              "updatedAt": "2024-06-05T14:58:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59I5xY",
          "commit": {
            "abbreviatedOid": "3f0e73d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks a lot for restructuring the paragraph, looks good! ",
          "createdAt": "2024-06-05T15:01:42Z",
          "updatedAt": "2024-06-05T15:01:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOJx2-rs5wxX4_",
      "title": "Fix private AS range typo, replicated CP - language clarification",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/27",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Set of changes addressing:\r\n- #26 \r\n",
      "createdAt": "2024-05-28T14:07:49Z",
      "updatedAt": "2024-06-03T07:15:24Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "editorial",
      "headRefOid": "498247739e1a066a9911bd55b6cd7d6b4013c928",
      "closedAt": "2024-05-30T09:14:48Z",
      "mergedAt": "2024-05-30T09:14:48Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "c16dda05c7b2808a7c6c7b50719a1bb96a20ac2c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58Kdm3",
          "commit": {
            "abbreviatedOid": "4982477"
          },
          "author": "shitz",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-28T15:08:11Z",
          "updatedAt": "2024-05-28T15:08:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOJx2-rs5wygww",
      "title": "Add some explanation regarding interface configuration.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/29",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Explanations include a clarification (hopefully) of what a peering link is.\r\n\r\nAddresses #17 \r\n\r\nSimilar PR for DP draft: https://github.com/scionassociation/scion-dp_I-D/pull/21 \r\n",
      "createdAt": "2024-05-28T16:44:32Z",
      "updatedAt": "2024-06-03T15:53:51Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "interface_config",
      "headRefOid": "df96a1cb2dde59296e0d20514bf283c9f08d2b6a",
      "closedAt": "2024-06-03T15:53:37Z",
      "mergedAt": "2024-06-03T15:53:37Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "7af3379e03c1a053b250daded414bbf2465cf9af"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58SYKD",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T11:57:26Z",
          "updatedAt": "2024-05-29T11:57:27Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n**Peering Link**: A link between two SCION border routers of different ASes, where at least one of the two ASes is not core. Two peering ASes may be in different ISDs. A peering link can be seen as a short-cut on a normal path. Peering link information is added to segment information during the beaconing process and used to shorten paths while assembling them from segments.\r\n```",
              "createdAt": "2024-05-29T11:57:26Z",
              "updatedAt": "2024-05-29T11:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58S9HO",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T13:00:48Z",
          "updatedAt": "2024-05-29T13:00:48Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "This is already in #25 \r\n```suggestion\r\n```",
              "createdAt": "2024-05-29T13:00:48Z",
              "updatedAt": "2024-05-29T13:00:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58S9Pl",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T13:01:02Z",
          "updatedAt": "2024-05-29T13:01:02Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-29T13:01:02Z",
              "updatedAt": "2024-05-29T13:01:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UBxl",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:39:03Z",
          "updatedAt": "2024-05-29T14:39:04Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "I did remove the merge marker though.\r\n",
              "createdAt": "2024-05-29T14:39:04Z",
              "updatedAt": "2024-05-29T14:39:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UEGM",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:42:36Z",
          "updatedAt": "2024-05-29T14:42:36Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Weird, github deleted my comment when I marked the issue resolved....\r\nI was saying that the repetition is intentional. The original question concerned both data plane and control plane and I do not want to dilute the explanation by classifying bits and pieces into each document. Better to have the whole story in both drafts.\r\n",
              "createdAt": "2024-05-29T14:42:36Z",
              "updatedAt": "2024-05-29T14:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UFcZ",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:44:32Z",
          "updatedAt": "2024-05-29T14:44:33Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Oh, wait...you mean the change is in two PRs on the CP draft.\r\nArgg. I hate git.\r\nOk, I'll sort it out.\r\n",
              "createdAt": "2024-05-29T14:44:33Z",
              "updatedAt": "2024-05-29T14:44:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UMzS",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:55:52Z",
          "updatedAt": "2024-05-29T14:55:52Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Sorted.\r\n",
              "createdAt": "2024-05-29T14:55:52Z",
              "updatedAt": "2024-05-29T14:55:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58TO3M",
          "commit": {
            "abbreviatedOid": "478cf27"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "I restructured the configuration section a bit, a few more changes are still proposed",
          "createdAt": "2024-05-29T13:27:48Z",
          "updatedAt": "2024-05-29T16:56:55Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nA path segment MUST either start at a core AS, end at a core AS, or both start and end at a core AS. A single path segment MUST NOT start and end at a non-core AS. A path between two non-core ASes may be created by combining multiple path segments. If two of the ASes on path share a peering link, this can be used as a shortcut. For more information on SCION and peering links, see [](#beaconing).\r\n```",
              "createdAt": "2024-05-29T13:27:48Z",
              "updatedAt": "2024-05-29T16:56:55Z"
            },
            {
              "originalPosition": 14,
              "body": ">  necessarily traversing one or more core-ASes.\r\n\r\nThis is not true, there is a case where an up and down segment can be joined without going via the core:\r\n<img width=\"105\" alt=\"Screenshot 2024-05-29 at 15 28 36\" src=\"https://github.com/scionassociation/scion-cp_I-D/assets/11498717/a87a950c-9abb-4f9f-9372-603df4b860a1\">\r\n\r\nI propose that we just remove this line and I merged all in the line above.\r\n```suggestion\r\n```",
              "createdAt": "2024-05-29T13:29:29Z",
              "updatedAt": "2024-05-29T16:56:55Z"
            },
            {
              "originalPosition": 48,
              "body": "@matzf could you double check that the list is correct?",
              "createdAt": "2024-05-29T16:56:25Z",
              "updatedAt": "2024-05-29T16:56:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58V1t6",
          "commit": {
            "abbreviatedOid": "1dc381f"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T18:16:32Z",
          "updatedAt": "2024-05-29T18:20:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "That seems very redundant. I am not against mentioning the shortcut again, but how about a bit more concision:\r\n\r\n\"A path segment MUST either start at a core AS, or end at a core AS, or both. A path between two non-core ASes may be created by combining multiple path segments. If two of the ASes on path share a peering link, this can be used as a shortcut. For more information on SCION and peering links, see [](#beaconing).\"\r\n",
              "createdAt": "2024-05-29T18:16:32Z",
              "updatedAt": "2024-05-29T18:20:46Z"
            },
            {
              "originalPosition": 14,
              "body": "Right, I was missing that. Will fix. In fact I am no longer sure we need to mention the removal of core-AS from the middle at all, since not having any core ASes on the path is nothing special, as you correctly point out. It happens even in the absence of peering links.\r\n",
              "createdAt": "2024-05-29T18:20:41Z",
              "updatedAt": "2024-05-29T18:20:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58brmM",
          "commit": {
            "abbreviatedOid": "9745ab3"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-30T08:34:38Z",
          "updatedAt": "2024-05-30T08:34:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n**Peering Link**: A specific type of link between two SCION border routers of different ASes, which may also be in different ISDs. A peering link can be seen as a short-cut on a normal path. Peering link information is added to segment information during the beaconing process and used to shorten paths while assembling them from segments.\r\n```",
              "createdAt": "2024-05-30T08:34:38Z",
              "updatedAt": "2024-05-30T08:34:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58xkGR",
          "commit": {
            "abbreviatedOid": "478cf27"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T09:56:40Z",
          "updatedAt": "2024-06-03T09:56:41Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "I removed the underlay addresses from the list. Also used the same intro paragraph as in the DP draft.\r\n",
              "createdAt": "2024-06-03T09:56:40Z",
              "updatedAt": "2024-06-03T09:56:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580Yav",
          "commit": {
            "abbreviatedOid": "478cf27"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T14:50:07Z",
          "updatedAt": "2024-06-03T14:50:07Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": ":+1: ",
              "createdAt": "2024-06-03T14:50:07Z",
              "updatedAt": "2024-06-03T14:50:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580Y6M",
          "commit": {
            "abbreviatedOid": "df96a1c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-03T14:50:57Z",
          "updatedAt": "2024-06-03T14:50:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs581B5S",
          "commit": {
            "abbreviatedOid": "df96a1c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-03T15:52:50Z",
          "updatedAt": "2024-06-03T15:52:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOJx2-rs5xRKNJ",
      "title": "Introduce motivation for link types, explain restrictions for peering links",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/32",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Contributes to #17 (by virtue of avoiding the phrase \"peering AS\").\r\n",
      "createdAt": "2024-06-03T08:50:43Z",
      "updatedAt": "2024-06-07T07:14:12Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "motivate-link-types",
      "headRefOid": "d563c934c2e297e812f499bbb2540fc52749035e",
      "closedAt": "2024-06-07T07:14:03Z",
      "mergedAt": "2024-06-07T07:14:03Z",
      "mergedBy": "matzf",
      "mergeCommit": {
        "oid": "4a0cc23314c8a1dcb94e97090d3f1df21fc10266"
      },
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed, this is overlapping with #29. \r\n#29 should be merged first,  then I'll take another look on how to unify the two changes.",
          "createdAt": "2024-06-03T08:53:00Z",
          "updatedAt": "2024-06-03T08:53:00Z"
        },
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed, removed the glossary entry; it was good, but if we have a glossary entry for peering link, it seemed like we should probably have one for core and parent/child links as well.",
          "createdAt": "2024-06-06T16:00:38Z",
          "updatedAt": "2024-06-06T16:00:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs586Zrm",
          "commit": {
            "abbreviatedOid": "2bcdc00"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-04T08:25:39Z",
          "updatedAt": "2024-06-04T08:25:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs59I9QW",
          "commit": {
            "abbreviatedOid": "2bcdc00"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks a lot, crisp and clear! @matzf maybe before merging, we could check wether we want to remove the definition of peering links now in the glossary: \r\n\r\n> Peering Link: A specific type of link between two SCION border routers of different ASes, which may also be in different ISDs. A peering link can be seen as a short-cut on a normal path. Peering link information is added to segment information during the beaconing process and used to shorten paths while assembling them from segments.\r\n\r\n\r\n\r\n\r\nThis is also in the dataplane draft",
          "createdAt": "2024-06-05T15:07:16Z",
          "updatedAt": "2024-06-05T15:10:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs59UTTG",
          "commit": {
            "abbreviatedOid": "0f58f57"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "...changes at your discretion.",
          "createdAt": "2024-06-06T16:35:57Z",
          "updatedAt": "2024-06-06T16:49:48Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "\"or in a different ISD\" -> \"or in different ISDs\"",
              "createdAt": "2024-06-06T16:35:58Z",
              "updatedAt": "2024-06-06T16:49:48Z"
            },
            {
              "originalPosition": 25,
              "body": "\"Valley-freedom\" sounds weird... it's a tough one, but I found thin precedent for the form \"valley-freeness\": \r\n\r\nIt is interesting to note that there were increment in pulp freeness and reduction in the pulp strength when the same chitosan prepared was added from the first day up to the fifth day.\r\n[Mechanical properties of paper from oil palm pulp treated with chitosan from horseshoe crab](https://www.thefreelibrary.com/Mechanical+properties+of+paper+from+oil+palm+pulp+treated+with...-a0440400148)",
              "createdAt": "2024-06-06T16:48:39Z",
              "updatedAt": "2024-06-06T16:49:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59ZZFm",
          "commit": {
            "abbreviatedOid": "0f58f57"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-07T07:11:32Z",
          "updatedAt": "2024-06-07T07:11:33Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Changed it to valley freeness -- I found one paper using that term, and its from Adrian :smile:.\r\nAlso, no hyphen seems correcter.",
              "createdAt": "2024-06-07T07:11:32Z",
              "updatedAt": "2024-06-07T07:11:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59ZZZd",
          "commit": {
            "abbreviatedOid": "0f58f57"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-07T07:12:19Z",
          "updatedAt": "2024-06-07T07:12:20Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Done.",
              "createdAt": "2024-06-07T07:12:20Z",
              "updatedAt": "2024-06-07T07:12:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOJx2-rs5xYzUn",
      "title": "Clarify PCB selection policies and endpoint's needs",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/33",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #16.\r\n\r\n> > From: Joel Halpern\r\n> > There seems to be a philosophical contradiction in section 2.3.1 (Selection of PCBs to propagate) of the control plane document. Given the philosophy of SCION, the goal should be to propagate PCBs with the highest probability of collectively meeting the needs of the end hosts that will perform path construction. Of course, this AS doesn't know that. But the text ignores this distinction.\r\n> \r\n> Tis also relates to [rfc9217 section-2.8](https://www.rfc-editor.org/rfc/rfc9217.html#section-2.8):\r\n> >  how can the incentives of network operators and end users be aligned to realize the vision of path-aware networking, ..\r\n\r\n---- \r\n\r\nVery good phrasing from reviewer, paraphrased in the text.\r\nTried to clarify the incentives by explaining it as a two stage process. First the AS removes anything that doesn't seem \"viable\";  among the remaining PCBs, the incentives of AS and endpoints are aligned. \r\n",
      "createdAt": "2024-06-04T07:36:33Z",
      "updatedAt": "2024-06-21T16:49:38Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "selection-policy-endpoint-needs",
      "headRefOid": "6e5257d631aa3e453a89b87b8d3f47f985e0905b",
      "closedAt": "2024-06-21T16:49:35Z",
      "mergedAt": "2024-06-21T16:49:35Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "1eb85516903ff150f1a681db24d0438573faab3b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs586XGM",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-04T08:21:24Z",
          "updatedAt": "2024-06-04T08:21:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs59Idpi",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:21:00Z",
          "updatedAt": "2024-06-05T14:22:00Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": ">  Of course, this AS doesn't know that. But the text ignores this distinction. \r\n\r\nHow would you handle this comment? Is the policy you mention above sufficient? ",
              "createdAt": "2024-06-05T14:21:00Z",
              "updatedAt": "2024-06-05T14:22:00Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFrom these viable PCBs, only a relatively small subset should be propagated, to avoid excessive overhead of the path discovery system in bigger networks.\r\n```\r\n\r\nIs it a must? A should? How _small_ should the subset be?  ",
              "createdAt": "2024-06-05T14:21:57Z",
              "updatedAt": "2024-06-05T14:22:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59OvC7",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-06T07:13:39Z",
          "updatedAt": "2024-06-06T07:13:39Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "The numbers are mentioned below (5/50).",
              "createdAt": "2024-06-06T07:13:39Z",
              "updatedAt": "2024-06-06T07:13:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59O1wj",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-06T07:21:42Z",
          "updatedAt": "2024-06-06T07:21:42Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "That's the comment this PR addresses. My proposed text distinguishes between the interests of the AS and the interests of the endpoints, and it explicitly mention that an AS has no info about the endpoints specific needs.\r\nWhile of course this could be said with more or different words, I don't know what else could be said.",
              "createdAt": "2024-06-06T07:21:42Z",
              "updatedAt": "2024-06-06T07:21:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOJx2-rs5xZwY_",
      "title": "Clarify selection of MAC",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/34",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Refer to default hop field MAC algorithm in DP draft, which MUST be supported.\r\n\r\nContributes to #23.\r\nContributes to https://github.com/scionassociation/scion-dp_I-D/issues/7:\r\n- Explain why there is both a \"chaining\" of signatures in PCBs, and chaining of MACs in hop fields.\r\n\r\nRefers to https://github.com/scionassociation/scion-dp_I-D/pull/26, and uses ~identical paragraph.",
      "createdAt": "2024-06-04T09:45:01Z",
      "updatedAt": "2024-06-21T16:34:26Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "default-mac-algo",
      "headRefOid": "3bc1d7c751c0755697e3e6a08d7a307755c841b5",
      "closedAt": "2024-06-21T16:34:22Z",
      "mergedAt": "2024-06-21T16:34:22Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "b5e097110b483e6922e235ef66657c2ffc2f9bd8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs587RRQ",
          "commit": {
            "abbreviatedOid": "cd0ad9e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-04T09:56:22Z",
          "updatedAt": "2024-06-04T09:56:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs587zng",
          "commit": {
            "abbreviatedOid": "cd0ad9e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Just some minor comments (also related to my comments in https://github.com/scionassociation/scion-dp_I-D/pull/26 )",
          "createdAt": "2024-06-04T10:59:03Z",
          "updatedAt": "2024-06-04T11:02:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe algorithm used to compute the hop field MAC is an AS-specific choice. The operator of an AS can freely choose a MAC algorithm without outside coordination. However, the control service and routers of the AS do need to agree on the algorithm used.\r\nControl service and router implementations MUST support the Default Hop Field MAC algorithm described in {{I-D.scion-dp}}. This document does not specify any further mechanism to coordinate this choice between control services and routers of one AS.\r\n```",
              "createdAt": "2024-06-04T10:59:03Z",
              "updatedAt": "2024-06-04T11:02:22Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n- `mac`: The message authentication code (MAC) used in the data plane to verify the hop field, as described in {{I-D.scion-dp}}.\r\n```\r\nI think one more reference does not hurt",
              "createdAt": "2024-06-04T11:01:45Z",
              "updatedAt": "2024-06-04T11:02:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59Ty0M",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-06T15:40:36Z",
          "updatedAt": "2024-06-06T15:40:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This is to address the following comment, https://github.com/scionassociation/scion-dp_I-D/issues/7:\r\n\r\n> Both the PCB authentication and the hop authentication use a mechanism that computes the signature over all previous hops. This seems odd. If each hop includes the previous hop, that seems to produce an immutable chain at lower cost. At the very least, an explanation would seem called for.",
              "createdAt": "2024-06-06T15:40:36Z",
              "updatedAt": "2024-06-06T15:40:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59Udx3",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-06T16:53:56Z",
          "updatedAt": "2024-06-06T16:53:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5-QM0w",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-14T11:36:37Z",
          "updatedAt": "2024-06-14T11:36:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5_I3b6",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-21T16:34:10Z",
          "updatedAt": "2024-06-21T16:34:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDOJx2-rs5xd1Yv",
      "title": "CS API - minor wording change",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/35",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-04T19:47:51Z",
      "updatedAt": "2024-07-08T16:11:57Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "66253684fc5e9ae56ad10f7cc1677016b0df7a27",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "grpc_api_described_wordsmithing",
      "headRefOid": "2ea280f93d3993a539d36d6817a256b809d129bf",
      "closedAt": "2024-06-05T12:51:40Z",
      "mergedAt": "2024-06-05T12:51:39Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "89d9bf1fb384c523516750bb253522a557e3148d"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I added a potential reference for the connect RPC, feel free to change it if you think there is a better reference ",
          "createdAt": "2024-06-05T07:13:36Z",
          "updatedAt": "2024-06-05T07:13:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs59EwCS",
          "commit": {
            "abbreviatedOid": "2ea280f"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-05T08:27:23Z",
          "updatedAt": "2024-06-05T08:27:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOJx2-rs5xrDCd",
      "title": "change Language for PCB propagation (flooding)",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/37",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Addresses #36 36",
      "createdAt": "2024-06-06T12:05:36Z",
      "updatedAt": "2024-06-06T12:06:25Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "60418e3460510480b9560bcaaf601a4ef2031c90",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "pcb_propagation",
      "headRefOid": "12eb17b81f3973bd105981d80a9d533a0b6af2ff",
      "closedAt": "2024-06-06T12:06:22Z",
      "mergedAt": "2024-06-06T12:06:22Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 38,
      "id": "PR_kwDOJx2-rs5x_BvJ",
      "title": "Added revised Introduction",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/38",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Introduction with problem statement and component overview",
      "createdAt": "2024-06-10T14:17:58Z",
      "updatedAt": "2024-06-21T15:58:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "b62872ddb8427555057b24ed3e877ded662e5b35",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "knmeynell-patch-1",
      "headRefOid": "06ec2fa3595ff8e6c16abcf1d68c70617763991b",
      "closedAt": "2024-06-21T15:58:53Z",
      "mergedAt": "2024-06-21T15:58:53Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "1ea4648c6b2cd87a656648e8c7398975fdaf483d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5-QL_I",
          "commit": {
            "abbreviatedOid": "55ee565"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-14T11:34:26Z",
          "updatedAt": "2024-06-14T11:34:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDOJx2-rs5yYqb8",
      "title": "remove allowed",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/39",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves https://github.com/scionassociation/scion-dp_I-D/issues/11 ",
      "createdAt": "2024-06-13T16:15:33Z",
      "updatedAt": "2024-06-21T16:07:52Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1ea4648c6b2cd87a656648e8c7398975fdaf483d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "allowed",
      "headRefOid": "37b18c033e63524b92f7aed92f0f50e30318ed5d",
      "closedAt": "2024-06-21T16:07:49Z",
      "mergedAt": "2024-06-21T16:07:49Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5d331d933acb221893b6bbfbf2309ef7805edd12"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5-JIw9",
          "commit": {
            "abbreviatedOid": "cd401f8"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-06-13T16:47:02Z",
          "updatedAt": "2024-06-13T16:47:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\"... of IPv6 is MUST NOT be used.\" You have a stray \"is\" in-there.\r\n",
              "createdAt": "2024-06-13T16:47:02Z",
              "updatedAt": "2024-06-13T16:47:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDOJx2-rs5yqPB-",
      "title": "Move informative references to the informative section. Delete un-used ones",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/41",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #40 ",
      "createdAt": "2024-06-17T08:22:11Z",
      "updatedAt": "2024-06-19T11:24:28Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "4a0cc23314c8a1dcb94e97090d3f1df21fc10266",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "informative_normative",
      "headRefOid": "0e060bc0170e2b32be7718f353fd7c85b86a24f1",
      "closedAt": "2024-06-19T11:22:56Z",
      "mergedAt": "2024-06-19T11:22:56Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "b62872ddb8427555057b24ed3e877ded662e5b35"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5-iOQL",
          "commit": {
            "abbreviatedOid": "0e060bc"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-17T13:22:42Z",
          "updatedAt": "2024-06-17T13:22:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5-iOdp",
          "commit": {
            "abbreviatedOid": "0e060bc"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-17T13:23:02Z",
          "updatedAt": "2024-06-17T13:23:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOJx2-rs5zL3A4",
      "title": "Scalability of path discovery",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/42",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Scalability of path discovery.\r\n- Explain quality/quantity vs resource overhead\r\n- Resource cost in terms of number and length of discovered paths\r\n- Exploration time in terms of path length / network diameter\r\n- Separate analysis for inter/intra ISD beaconing:\r\n  - Typical / expected properties of the network\r\n  - Example numbers to give impression for order of magnitude of overhead\r\n\r\nFixes #8 ",
      "createdAt": "2024-06-21T13:23:58Z",
      "updatedAt": "2024-07-08T16:12:02Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a7bf7e2f4da132cfbbe5aac2ace8dabc600dd0e0",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "scalability",
      "headRefOid": "8b8d3dd4313fd3a427379cfb7311fb82105bcb6f",
      "closedAt": "2024-07-08T15:35:58Z",
      "mergedAt": "2024-07-08T15:35:58Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe"
      },
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for fixing my typos, @nicorusti.",
          "createdAt": "2024-07-03T13:28:50Z",
          "updatedAt": "2024-07-03T13:28:50Z"
        },
        {
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "body": "General Note: \r\n- The notes contain several references to \"immediate cold-start PCB forwarding\" which in turn refers to the section #selection where it says\r\nunder \"Storing and Selecting Candidate PCBs\":\r\n\"Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].\"\r\n- The notes contain several references to \"beacon origination interval\", i.e. the intervall at which new beacons are created. I couldn't find any description\r\n  of this interval, maybe I overlooked it? Is it the same as the propagation interval?\r\n\r\n\r\n# Some points I found could be useful to add to the doc:\r\n- I couldn't find a discussion of beacon origination interval (or the RegistrationInterval), see \"DefaultOriginationInterval\" (or the DefaultRegistrationInterval) in the code.\r\n  Maybe I overlooked it? \r\n- Load balancing? E.g. everybody picks the shortest paths, all other paths remain unused...? How is this handled?\r\n\r\n\r\n\r\n# Introduction\r\n## Avoiding Circular Dependencies and Partitioning\r\n- Does this section (title) make sense as it is? The two topics (circular dependencies and partitioning) appear unrelated. Partitioning is discussed in a separate subsection\r\n- Also, this section claims to contain a list that explains how circular dependencies are avoided.\r\n  However, I am not sure how anything in the list explains anything about circular dependencies?\r\n\r\n### Partition and Healing\r\n- `ASes could always switch to otherwise unused links`. \r\n\r\n  - What are `unused` links? `Unused` indicates that they are not in the \"Best PCB\" set. \r\n  If that is the case, then we cannot simply \"switch\" to use them, we first need to have them discovered by beacons. This takes time, see `propagation interval` (unless PCB are forwarded immediately) and beacon `origination interval`.\r\n  - Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the `propagation interval` and the `origination interval`.\r\n  As I understand, with propagation interval being set to e.g. 10Minutes, this adds up to 5hops*1/2*10min= 25minutes for 5 hops.\r\n\r\n# Path Exploration or Beaconing {#beaconing}\r\n## Introduction and Overview\r\n\r\n- `Intra-ISD beaconing`: Isn't this incomplete? How are DOWN segments created? I think leaf ASes need to propagate paths back to the COREs? -> Link to #intra-reg ?\r\n- `Inter-ISD beaconing`: Similarily, I think there is a step where CORE beacons share their path DB with other CORE ASes in the same ISD?\r\n\r\n### Extending a PCB\r\n- `selects the best combinations`: Maybe link to a section that explains how this works? And what \"best\" means?\r\n\r\n## Path-Segment Construction Beacons\r\n### PCB Validity\r\n- `For the purpose of validation, a timestamp is considered \"future\" if it is later than the current time at the point of validation plus the minimum expiration time of a hop field (337.5 seconds, see ).`\r\nMaybe add an explanation why we add the minimum expiration time here?\r\nShouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n\r\n\r\n\r\n\r\n## Propagation of PCBs {#path-prop}\r\n### Selection of PCBs to Propagate {#selection}\r\n#### Storing and Selecting Candidate PCBs\r\n\r\n- `temporary storage`: Maybe clarify what \"temporary\" means. \r\n  - How long are PCBs stored? \r\n  - Under what circumstances are they removed, e.g. when they expire? \r\n  - Or possibly replaced with a new version? What if the new version has an earlier expiration date?\r\n\r\n\r\n- `At each propagation event, each AS selects a set of the best PCBs from the candidates in the beacon store`\r\n\r\n\r\n- `The best PCBs set size SHOULD be at most \"50\" (PCBs) for intra-ISD beaconing and at most \"5\" (PCBs) for core beaconing.`\r\n  - I found this a bit confusing: the \"50\" appears to be the total number of beacons forwarded for non-core ASes, whereas the \"5\" refers to the number of \r\n    PCBs _per_ remote CORE AS. Maybe clarify this?\r\n\r\n- `Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].`\r\n  - Is this true? It appears to conflict with many other parts of the document that talk about propagation intervals in the contect of cold-start.\r\n  - Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n  - Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively\r\n    forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths? \r\n  - What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths\r\n    coming in all the time that need to be forwarded immediately, or not?\r\n    \r\n\r\n\r\n### Effects of Clock Inaccuracy\r\n- `PCBs are propagated at a configurable interval (typically, one minute).`\r\n  - Unless they are new, then the interval is ignored, see \"immediate cold-start PCB forwarding\".\r\n  - Maybe rephrase: \"(typically, one minute)\" ---> \"immediately for new beacons, minimum 5secs for intra-ISD, minimum one minute for inter-ISD\"?\r\n  See #path-prop: \"The propagation interval SHOULD be at least \"5\" (seconds) for intra-ISD beaconing and at least \"60\" (seconds) for core beaconing.\".\r\n  - Also, AFAIK, the current configured real-world interval is more like 10-15 minutes...?  \r\n\r\n- `PCBs with N hops may be validated up to N intervals (so typically N minutes) after origination`\r\n  - I think the word \"typically\" is misleading here, it can be understood as \"PCBs [...] are validated typically after N minutes\", whereas it actually means that the _maximum_ is typically N minutes. \r\n    Rephrase to \"(maximally N minutes)\" or \"(amounting to N minutes, assuming the minimum inter-ISD propagation interval)\"\r\n\r\n- Rephrase `The norm is 6 hours.` to `... SHOULD be 6 hours` ? What does 'norm' mean?\r\n\r\n- `In comparison to these time scales, clock offsets in the order of minutes are immaterial.`  \r\n  - This relates only to the previous paragraph about certificates; I guess it should be attached to the previous paragraph?\r\n\r\n\r\n## Path Discovery Time and Scalability {#scalability}\r\n- ~`balances _OF_ the number of discovered paths` -> remove OF~ Already fixed\r\n\r\n- `Generally, the time until a specific PCB is built depends on its length and the propagation interval.`? \r\n   - I think in the context of \"cold boot\u00a8, the propagation delay is \"0\", see \"immediate cold-start PCB forwarding\".\r\n- `PCB arrives at a random point in time during the interval and is buffered before potentially being propagated`\r\n  - see \"immediate cold-start PCB forwarding\"\r\n  - Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n\r\n- `As will become apparent, the inter-ISD beaconing results in excessive overhead with very large numbers of participating core ASes.`\r\n  - Does this need to be in the IETF spec?\r\n- `The ideal topology for SCION is to keep the inter-ISD core network to a moderate size, to benefit from the divide-and-conquer partitioning of ASes into ISDs and the efficiency of the intra-ISD beaconing.`\r\n  - What is done to ensure this? What happens if the size is not moderate? What is \"moderate\"?\r\n\r\n\r\n### Intra-ISD Beaconing\r\n\r\n- `Otherwise, child ASes at distance D below the new link, learn of the new link after D further propagation steps`\r\n   - New path: \"immediate cold-start PCB forwarding\"\r\n\r\n\r\n### Inter-ISD Beaconing\r\n\r\n- `On a cold start of the network, [...]. With a 5 second propagation period [...]`\r\n   - Above it says that bootstrapping results in immediatede forwarding, see \"immediate cold-start PCB forwarding\".\r\n\r\n- `When a new link is added to the network, it will be available to connect two ASes at distances from the link D1 and D2 from the link, respectively, after a mean time (D1+D2)*T/2.`\r\n  - Typo: duplicated \"from the link\";\r\n  - Also: see previous point about \"immediate cold-start PCB forwarding\"\r\n",
          "createdAt": "2024-07-05T15:39:07Z",
          "updatedAt": "2024-07-05T15:39:07Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thank you for your feedback @tzaeschke ! I respond here regarding the scalability and clock inaccuracy sections.  For other sections, and for points that we don't have time to address in time this revision, I opened separate issues: \r\n* https://github.com/scionassociation/scion-cp_I-D/issues/45 \r\n* https://github.com/scionassociation/scion-deployment_I-D/issues/1  \r\n* https://github.com/scionassociation/scion-cp_I-D/issues/46 \r\n* https://github.com/scionassociation/scion-cp_I-D/issues/48\r\n\r\n\r\n## Regarding Effects of Clock Inaccuracy\r\n\r\n> I think the word \"typically\" is misleading here, it can be understood as \"PCBs [...] are validated typically after N minutes\", whereas it actually means that the maximum is typically N minutes.\r\nRephrase to \"(maximally N minutes)\"\r\n\r\nDone, maximally N minutes sounds good.\r\n\r\n> Also, AFAIK, the current configured real-world interval is more like 10-15 minutes...?\r\n \r\n@matzf I is it 1 min as in the draft, or 10-15? 10-15 feels a bit high to me \r\n\r\n\r\n>  Rephrase `The norm is 6 hours.` to `... SHOULD be 6 hours` ? What does 'norm' mean? \r\n\r\nI am a bit reluctant to use RFC2119 language (uppercase SHOULD) for exactly 6 hours. This is a value that overall depends on the maximum AS path expected in the network, and it might as well be a different value. I therefore rephrased like this:\r\n`For this reason, it is unadvisable to create hops with a short expiration time, that should be around 6 hours.` \r\n\r\n> In comparison to these time scales, clock offsets in the order of minutes are immaterial.\r\n> This relates only to the previous paragraph about certificates; I guess it should be attached to the previous paragraph?\r\n\r\nDone.\r\n\r\n\r\n\r\n## Regarding Path Discovery Time and Scalability {#scalability} \r\n\r\n> The notes contain several references to \"immediate cold-start PCB forwarding\"  \r\n\r\n@matzf clarified [here](https://github.com/scionassociation/scion-cp_I-D/pull/42#discussion_r1666689901) that this is not the case, I removed that note, this should also solve some many of the consistency issues you reported.\r\n\r\n> Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n \r\n To be handled in https://github.com/scionassociation/scion-cp_I-D/issues/45\r\n \r\n\r\n> `As will become apparent, the inter-ISD beaconing results in excessive overhead with very large numbers of participating core ASes.` \r\nDoes this need to be in the IETF spec?\r\n\r\nGood point, I rephrased this section to: \r\n```To achieve scalability in its routing process, SCION uses a divide-and-conquer approach, partitioning  ASes into ISDs. In order to benefit from this, an ideal topology SCION should keep the inter-ISD core network to a moderate size. For more specific observations, we distinguish between intra- and inter-ISD beaconing. ```\r\n\r\n> What is done to ensure this? What happens if the size is not moderate? What is \"moderate\"?\r\n \r\n We give some numbers in the  Inter-ISD Beaconing section with an example with 1000 core ASes, this gives a rough figure. The bandwidth and computation overhead figures there should also give a rough hint of what happens if the network grows too much: the overhead becomes considerable. \r\n What is done to ensure this IMHO depends on how the network is deployed, I think this topic would be a better fit to be discussed in the new deployment Internet Draft, I opened an issue there: https://github.com/scionassociation/scion-deployment_I-D/issues/1  \r\n \r\n > Typo: duplicated \"from the link\";\r\n\r\nFixed\r\n  \r\n  \r\n\r\n",
          "createdAt": "2024-07-07T21:02:39Z",
          "updatedAt": "2024-07-08T16:09:59Z"
        },
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Commented on the related issues for the other sections.\r\n\r\n> > Also, AFAIK, the current configured real-world interval is more like 10-15 minutes...?\r\n> \r\n> @matzf I is it 1 min as in the draft, or 10-15? 10-15 feels a bit high to me\r\n\r\nThe 1 minute value seems realistic. SCIONLab uses 5 seconds for non-core beaconing and 1 minute for core beaconing. Anapaya's infrastructure reportedly runs with 30s.",
          "createdAt": "2024-07-08T14:58:51Z",
          "updatedAt": "2024-07-08T14:58:51Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5_RqJa",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I won't make pronouncements on the math accuracy... I find it convincing enough. Regarding the breadth and depth, I think it's good. I imaging that this is what the reviewer was asking for.\r\n\r\nPossibly, we could add a summary, with a few key scaling estimates in O() form. Where e.g. PCB received per second: O(N^2) - Although, that'll be concerning in the mind of your average reviewer, btw. So may be no need to rub it in.",
          "createdAt": "2024-06-24T10:10:26Z",
          "updatedAt": "2024-06-24T10:10:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5_SC_N",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T10:51:19Z",
          "updatedAt": "2024-06-24T11:19:41Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Remind the reader that only 50 PCBs per downlink are selected for propagation. ",
              "createdAt": "2024-06-24T10:51:19Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 72,
              "body": "Isn't that supposed to be 1000000/5 = 200K?... well, that's assuming a 5 seconds propagation interval, but you said it was slower than that. So, I don't know. 150K amounts to a propagation interval of 6 and 2/3 seconds...I don't believe that you'd use that deliberately :-)\r\n\r\n",
              "createdAt": "2024-06-24T11:06:55Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 73,
              "body": "Given your previous estimate of 250bytes per AS entry and core segments of ~10 ASes, I compute:\r\n200000 * 10 * 250 = 500M/s. Even using your 150K/s figure, I still get 375M/s. I missed something?\r\n",
              "createdAt": "2024-06-24T11:06:57Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 64,
              "body": "Remind the reader what the typical interval would be?",
              "createdAt": "2024-06-24T11:09:19Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 36,
              "body": "Here I'd cite the Irwin-Hall distribution, may be?",
              "createdAt": "2024-06-24T11:15:11Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 76,
              "body": "Ok, so here you seem to be using a 30s mean delay, so an interval of 1m.\r\n",
              "createdAt": "2024-06-24T11:18:52Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_UbSZ",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T14:57:52Z",
          "updatedAt": "2024-06-24T14:57:52Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I used propagation interval is 60s (should mention this explicitly). My calculation was:\r\n- number of PCBs received per propagation interval: 5 * N * num interfaces = 1'000'000\r\n- number of AS entries received (== number of signature validations) per propagation interval == ~10 * number of PCBs == 10'000'000\r\n- number of AS entries per second: number of AS entries per propagation interval / 60s == 10'000'000 / 60 == 166'666.\r\n\r\nI must have rounded pretty badly... ",
              "createdAt": "2024-06-24T14:57:52Z",
              "updatedAt": "2024-06-24T14:58:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_Ud0r",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:02:15Z",
          "updatedAt": "2024-06-24T15:02:15Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "These numbers are per propagation interval (60 seconds). So:\r\n5 * 200 * 1000 * 10 * 250 / 60 = 41.6M/s",
              "createdAt": "2024-06-24T15:02:15Z",
              "updatedAt": "2024-06-24T15:02:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_UfXJ",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:04:59Z",
          "updatedAt": "2024-06-24T15:04:59Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": ":+1: ",
              "createdAt": "2024-06-24T15:04:59Z",
              "updatedAt": "2024-06-24T15:04:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_U4Pa",
          "commit": {
            "abbreviatedOid": "760c0e2"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:48:07Z",
          "updatedAt": "2024-06-24T15:48:08Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Ack. I had missed something.\r\n",
              "createdAt": "2024-06-24T15:48:07Z",
              "updatedAt": "2024-06-24T15:48:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_U7Y2",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:53:53Z",
          "updatedAt": "2024-06-24T15:53:53Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Ok. Works for me. I had missed the multiplication by path length and I had the wrong interval. ",
              "createdAt": "2024-06-24T15:53:53Z",
              "updatedAt": "2024-06-24T15:53:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_U75n",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:54:46Z",
          "updatedAt": "2024-06-24T15:54:47Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I've changed the numbers for the example; I noticed that length 10 is much longer than what we say above with the log n/loglog n average path length.\r\nFor 1000 ASes, the log n/loglog n is around 3.5. Because we say that we have paths that are longer than the shortest path, I use a generous 6 -- because this gives nice numbers.\r\nBecause the numbers coincidentally ended up confusingly similar to the intra-ISD case I've increased the number of core links from 200 to 300.\r\n\r\nSo:\r\n5 * 300 * 1000 = 1.5 million PCBs\r\n5 * 300 * 1000 * 6 / 60 = 150k AS entries per second\r\n5 * 300 * 1000 * 6 * 250 / 60 = 37.5MB/s\r\n",
              "createdAt": "2024-06-24T15:54:46Z",
              "updatedAt": "2024-06-24T15:54:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_a2fE",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T07:47:10Z",
          "updatedAt": "2024-06-25T07:47:10Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "It seems Irwin-Hall was the wrong pointer after all. I had to relearn this:\r\nGenerally, the variance of the sum of independent random variables is just the sum of the variances;  the variance of the sum of n independent, _identically_ distributed variables is just n times the variance of a single variable.\r\nThe variance of continuously uniformly distributed random variables over interval [a,b] is (b-a)^/12. (!) -- in our case, this interval is [0,T] and so the variance for the individual random variables is T^2/12.\r\n\r\nEven if this was not something I knew directly, this seems too basic / too much textbook knowledge to add a citation or long explanation. What do you think.",
              "createdAt": "2024-06-25T07:47:10Z",
              "updatedAt": "2024-06-25T07:47:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_bU9h",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T08:27:50Z",
          "updatedAt": "2024-06-25T08:27:50Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": ".. which means that we don't actual care about T^2 / 12, do we? Anyway, you're right. The stats heads will know and the others won't care or understand (you just demonstrated this on me: I didn't understand).",
              "createdAt": "2024-06-25T08:27:50Z",
              "updatedAt": "2024-06-25T08:27:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_bcRL",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T08:40:04Z",
          "updatedAt": "2024-06-25T08:40:05Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "I see that has been done.\r\n",
              "createdAt": "2024-06-25T08:40:04Z",
              "updatedAt": "2024-06-25T08:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_eXqw",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T13:22:10Z",
          "updatedAt": "2024-06-25T13:22:10Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "I still find it too easy to forget the \"at most 50 per child\" clause when reading \"If the same AS has 1000 child links...\". How about:\r\n\"If the same AS has 1000 child links, the propagation of the beacons will require signing one new AS entry for each of the propagated PCBs for each link (at most 50 per link), that is ....\"?\r\n\r\nNot binding.\r\n",
              "createdAt": "2024-06-25T13:22:10Z",
              "updatedAt": "2024-06-25T13:22:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_eX14",
          "commit": {
            "abbreviatedOid": "17ad81b"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-25T13:22:25Z",
          "updatedAt": "2024-06-25T13:22:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6ALmiD",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-01T06:28:24Z",
          "updatedAt": "2024-07-01T06:28:24Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Indeed, done. :+1: ",
              "createdAt": "2024-07-01T06:28:24Z",
              "updatedAt": "2024-07-01T06:28:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ahy6c",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks a lot for putting this together! Most of my comments are small language stuff, besides that I feel that some of the rough calculations could be framed slightly different",
          "createdAt": "2024-07-03T12:42:10Z",
          "updatedAt": "2024-07-03T17:40:05Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nThe path discovery mechanism balances the number of discovered paths and the time it takes to discover them versus resource overhead of the discovery.\r\n```",
              "createdAt": "2024-07-03T12:42:10Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nWith a propagation interval T at each AS, the mean time until the PCB is propagated in one AS therefore is T / 2 and the mean total time for the propagation steps of a PCB of length L is L * T / 2 (with a variance of L * T^2 / 12).\r\n```",
              "createdAt": "2024-07-03T12:59:46Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nNote that link removal is not part of path discovery in SCION. For scheduled removal of links, operators SHOULD let path segments expire. On link failures, end points route around the failed link by switching to different paths in the data plane.\r\n```",
              "createdAt": "2024-07-03T13:00:42Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nEach AS potentially receives PCBs for all down-paths between core to itself. While the number of distinct provider chains to the core is typically moderate, the multiplicity of links between provider ASes has multiplicative effect on the number of PCBs. Once this number grows above the limit value of 50, ASes trim the set of PCBs propagated. As the choice is among different ways to transit the local AS, operators are well equipped to choose among this set of PCBs.\r\n```",
              "createdAt": "2024-07-03T13:06:00Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 46,
              "body": "We say `The *best PCBs set size* SHOULD be at most \"50\" (PCBs)`, so we don't really set an upper bound to the number of PCBs. I feel the text here should be adapted accordingly. How about: \r\n```suggestion\r\nUltimately, the number of PCBs received by an AS per propagation interval for each parent link and propagated on each child link is bound to 50, the maximum recommended PCB set size. The length of these PCBs, and thus the number of AS entries to be processed and stored, is expected to be moderate and not grow considerably with network size. The total resource overhead for beacon propagation is easily manageable even for highly connected ASes.\r\n```\r\nI'm not entirely happy with my own wording, that is the best I could think of.\r\n",
              "createdAt": "2024-07-03T16:32:14Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 48,
              "body": "> an AS with a rather large number of 100 parent links \r\n\r\nAt one RTGWG session we got asked how SCION scales with the number of inter-AS links. It was someone working on Azure's backbone, they have ~30k + inter-AS links, so I feel 100 is not a rather large number",
              "createdAt": "2024-07-03T16:34:40Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 48,
              "body": "I'd also adapt wording:\r\n```suggestion\r\nTo illustrate this with some numbers, an AS with a rather large number of 100 parent links receives at most 5000 PCBs during a propagation interval. Assuming a generous average length of 10 AS entries for these PCBs, this corresponds to 50000 AS entries. Due to the variable length fields in AS entries, the sizes for storage and transmission cannot be predicted exactly, and we'll assume an average of 250 bytes per AS entry. At the shortest, and thus chattiest, recommended propagation interval of 5 seconds, this corresponds to an average bandwidth of around 2.5MB/s, and processing 10000 signature verifications per second.\r\n```\r\n\r\nAlso, I assume PCBs would be sent in batches (50000*250 would be ~ 12MB of PCBs), right? So there would be a burst, that on a slower link (like 1G) would last 0.1s, right? Or can this be distributed bit? over time? Perhaps we don't need to mention this, just something that came to my mind after reading this section",
              "createdAt": "2024-07-03T16:58:10Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 51,
              "body": "Maybe we could mention that this is assuming a worst case scenario where  the AS is not doing any selection on received PCBs?",
              "createdAt": "2024-07-03T17:02:03Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 53,
              "body": "In the draft we say:\r\n\r\n> **Note:** Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, to ensure quick connectivity establishment. \r\n\r\nWouldn't this speed up bootstrapping time?",
              "createdAt": "2024-07-03T17:05:03Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nWhen a new parent-child link is added to the network, the parent AS will propagate the available PCBs in the next propagation event. If the AS on the child side of the new link is a leaf AS, path discovery is thus complete after one single propagation interval. Otherwise, child ASes at distance D below the new link, learn of the new link after D further propagation intervals.\r\n```",
              "createdAt": "2024-07-03T17:06:02Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 67,
              "body": "I feel these calculations are a bit hypothetical, because: \r\n* This 38 MB/s of  bandwidth would be distributed across 300 links (maybe it is better to say that the bandwidth overhead is ~ 1 Mbit/s per link\r\n* The overall CP load in an AS of such scale would be distributed on various instances (even tough one might suffice to handle the load for signature validation)",
              "createdAt": "2024-07-03T17:38:09Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6ApXIp",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T08:35:03Z",
          "updatedAt": "2024-07-04T08:35:03Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Maybe here we could summarize by saying that the overall message complexity for an AS is linear to the number of core ASes N.",
              "createdAt": "2024-07-04T08:35:03Z",
              "updatedAt": "2024-07-04T08:35:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AqsGk",
          "commit": {
            "abbreviatedOid": "5f7a89e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T11:10:57Z",
          "updatedAt": "2024-07-04T11:11:37Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "New line missing before \"Note that...\" ?\r\n",
              "createdAt": "2024-07-04T11:10:58Z",
              "updatedAt": "2024-07-04T11:11:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Axjay",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T10:48:59Z",
          "updatedAt": "2024-07-05T10:48:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I disagree, this seems entirely out of place. We shouldn't randomly throw in normative behavior rules into informative, explanatory sections.",
              "createdAt": "2024-07-05T10:48:59Z",
              "updatedAt": "2024-07-05T10:49:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxlFw",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T10:53:42Z",
          "updatedAt": "2024-07-05T10:53:43Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Fixed, I made it \"down-path segment\" (and fixed the slightly broken sentence around it). FWIW, I think \"down path\" would not be hyphenated.",
              "createdAt": "2024-07-05T10:53:43Z",
              "updatedAt": "2024-07-05T10:53:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Axn7P",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:01:15Z",
          "updatedAt": "2024-07-05T11:01:15Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Accepting to keep things consistent, but I find this SHOULD there rather strange. That's the one parameter that must be controlled in order that receivers of beacons won't be overwhelmed. Maybe it could say something like \"MUST be less than 50 unless there is an out of band agreement\". Anyway, maybe something for another day.",
              "createdAt": "2024-07-05T11:01:15Z",
              "updatedAt": "2024-07-05T11:01:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Axr_m",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:12:52Z",
          "updatedAt": "2024-07-05T11:12:52Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "> At one RTGWG session we got asked how SCION scales with the number of inter-AS links. It was someone working on Azure's backbone, they have ~30k + inter-AS links, so I feel 100 is not a rather large number\r\n\r\nThe 100 explicitly refer to links to (transit-)providers. I can't imagine that the Azure backbone has too many inter-AS links to transit providers.\r\nFeel free to suggest a different way to present this, but what I tried was to give an impression for the upper bound for the resource overhead seen by a typical AS; 100 provider links seems more than what a typical (SCION-)AS will have.",
              "createdAt": "2024-07-05T11:12:52Z",
              "updatedAt": "2024-07-05T11:12:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxtAp",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:15:47Z",
          "updatedAt": "2024-07-05T11:15:47Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "It's not making this assumption; in this scenario we received 50 * 100 == 5000 PCBs and forward only 50 of on each child link.",
              "createdAt": "2024-07-05T11:15:47Z",
              "updatedAt": "2024-07-05T11:15:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxvyP",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:23:38Z",
          "updatedAt": "2024-07-05T11:23:39Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "That's the weirdest note. How can we define required / recommended behavior in a note?\r\nAlso, this behavior doesn't exist in the implementation. The idea seems a bit naive and completely underspecified. It's at least not obvious that this does not break the normal beaconing protocol, which _relies_ on these intervals.\r\nI'd rather we just drop this note.",
              "createdAt": "2024-07-05T11:23:38Z",
              "updatedAt": "2024-07-05T11:23:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxyTI",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:30:22Z",
          "updatedAt": "2024-07-05T11:30:22Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I've not committed your suggestion directly but rather introduced the number one line above.\r\n```diff\r\n-Once this number grows above the limit value of 50, ASes trim the set of PCBs propagated.\r\n+Once this number grows above the maximum recommended best PCBs set size of 50, ASes trim the set of PCBs propagated.\r\n```",
              "createdAt": "2024-07-05T11:30:22Z",
              "updatedAt": "2024-07-05T11:30:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ax4VN",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:46:32Z",
          "updatedAt": "2024-07-05T11:46:33Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "But it's not, it's N times the path length. That's the whole buildup of this section:\r\n\r\n- [Resource costs] depend on the the number and length of the discovered path segments, that is, on the total number of AS entries of the discovered path segments.\r\n\r\n- Then we say that in core network, PCBs are roughly log(N) long.\r\n\r\n- With N the number of participating core ASes, an AS receives up to 5 * N PCBs per propagation interval per core link interface.\r\n",
              "createdAt": "2024-07-05T11:46:33Z",
              "updatedAt": "2024-07-05T11:46:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ax4sl",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:47:32Z",
          "updatedAt": "2024-07-05T11:47:32Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "The full bandwidth will be seen by the control service, both facing the network and for storage. This seems more relevant than the bandwidth across the individual links.\r\n\r\n> The overall CP load in an AS of such scale would be distributed on various instances\r\n\r\nI don't feel that this invalidates this calculations. The point was to illustrate that this is managable with modest resources.\r\n\r\nI'll throw in a sentence to say that control service tasks can be distributed to scale to even larger ASes (like this 30k inter-domain link backbone).\r\n",
              "createdAt": "2024-07-05T11:47:32Z",
              "updatedAt": "2024-07-05T11:54:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ax8kN",
          "commit": {
            "abbreviatedOid": "5f7a89e"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:58:08Z",
          "updatedAt": "2024-07-05T11:58:08Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Done.",
              "createdAt": "2024-07-05T11:58:08Z",
              "updatedAt": "2024-07-05T11:58:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A28Vv",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:08:29Z",
          "updatedAt": "2024-07-07T16:08:29Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "My intention was to refer to highlight that draining links by letting segments expire is recommended, but I see how this is off topic here. No strong opinions here, I'll leave as it it. ",
              "createdAt": "2024-07-07T16:08:29Z",
              "updatedAt": "2024-07-07T16:08:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A28bo",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:10:48Z",
          "updatedAt": "2024-07-07T16:10:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "This is hyphenated in the rest of the draft, thank you for keeping it consistent! ",
              "createdAt": "2024-07-07T16:10:48Z",
              "updatedAt": "2024-07-07T16:10:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A286T",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:25:08Z",
          "updatedAt": "2024-07-07T16:25:08Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Right, thanks for clarifying! ",
              "createdAt": "2024-07-07T16:25:08Z",
              "updatedAt": "2024-07-07T16:25:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A29Ev",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:31:07Z",
          "updatedAt": "2024-07-07T16:31:07Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Removed. This comes from the footnote page 24 of the SCION book, it was edited by Markus/Sam. Any idea how this ended up there? ",
              "createdAt": "2024-07-07T16:31:07Z",
              "updatedAt": "2024-07-07T16:31:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A2_QC",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T17:41:11Z",
          "updatedAt": "2024-07-07T17:41:12Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Thanks for the clarification, as far as I understand then the message complexity in terms of number of signature validations per AS can be approximated with O(N*log(N)), while the amount of propagated PCBs per AS is  O(N), correct?\r\nIf you agree, I still think it might be more understandable to directly mention it",
              "createdAt": "2024-07-07T17:41:12Z",
              "updatedAt": "2024-07-07T17:42:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A3Fob",
          "commit": {
            "abbreviatedOid": "4e2e591"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-07T21:10:24Z",
          "updatedAt": "2024-07-07T21:10:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOJx2-rs5zNNZT",
      "title": "clarify path reversibility",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/43",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #22 ",
      "createdAt": "2024-06-21T17:08:48Z",
      "updatedAt": "2024-07-04T15:52:26Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1eb85516903ff150f1a681db24d0438573faab3b",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "path_reversal",
      "headRefOid": "a501045e2ce0cd5857db15ea472e0e20e68adaff",
      "closedAt": "2024-07-04T15:52:22Z",
      "mergedAt": "2024-07-04T15:52:22Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "d275f5068aa9ed5dd11e9d803db416eacbe304c5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6AphN6",
          "commit": {
            "abbreviatedOid": "376fdf0"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T08:54:14Z",
          "updatedAt": "2024-07-04T09:00:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "That sentence doesn't seem grammatically correct. I am not sure what is doing the \"ensuring\". How about:\"\r\n\r\n- Path reversal: In SCION, every path is reversible. That is, the receiver of a packet can reverse the path in the packet header in order to produce a reply packet without having to perform a path lookup. Such a packet follows the original packet's path backwards.\r\n\"\r\n",
              "createdAt": "2024-07-04T08:54:14Z",
              "updatedAt": "2024-07-04T09:00:09Z"
            },
            {
              "originalPosition": 24,
              "body": "Point 6: haven't we already explained that? May be we could be more laconic here:\r\n\r\n6. The destination endpoint, once it receives the first packet, has the option to revert the path in the received packet in order to construct a response.",
              "createdAt": "2024-07-04T08:56:32Z",
              "updatedAt": "2024-07-04T09:00:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AqShY",
          "commit": {
            "abbreviatedOid": "376fdf0"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T10:19:05Z",
          "updatedAt": "2024-07-04T10:19:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Thanks a lot, nice wording! ",
              "createdAt": "2024-07-04T10:19:05Z",
              "updatedAt": "2024-07-04T10:19:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AqTld",
          "commit": {
            "abbreviatedOid": "376fdf0"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T10:21:25Z",
          "updatedAt": "2024-07-04T10:21:25Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I was a b it redundant with wording because of the feedback we received: \r\n\r\n> think in the provider world it is expected that traffic between two endpoints uses bidirectionally the same path symmetrically. As each AS can select its own path to other AS's, it looks like SCION is not symmetrical. Maybe a comment around that could help. \r\n\r\nI'll use your proposal for more succinct wording, how about: \r\n`The destination endpoint, once it receives the first packet, may revert the path in the received packet in order to construct a response. This ensures that traffic flows on the same path bidirectionally.`\r\n",
              "createdAt": "2024-07-04T10:21:25Z",
              "updatedAt": "2024-07-04T10:25:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Aqt5m",
          "commit": {
            "abbreviatedOid": "a501045"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T11:15:12Z",
          "updatedAt": "2024-07-04T11:15:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 44,
      "id": "PR_kwDOJx2-rs50bp1b",
      "title": "Highlighted use of MUST, MUST NOT and SHOULD where appropriate.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/44",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Have not changed this in code references\r\nSolves #12 ",
      "createdAt": "2024-07-04T11:04:27Z",
      "updatedAt": "2024-07-08T16:11:53Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d275f5068aa9ed5dd11e9d803db416eacbe304c5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Final_Tweaks",
      "headRefOid": "c355bddd0f6451e063cca4a2d336d31c8008b6c1",
      "closedAt": "2024-07-08T09:51:44Z",
      "mergedAt": "2024-07-08T09:51:44Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "a7bf7e2f4da132cfbbe5aac2ace8dabc600dd0e0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6A3GLK",
          "commit": {
            "abbreviatedOid": "3fe971e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T21:31:12Z",
          "updatedAt": "2024-07-07T21:40:53Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "I think this should be a MUST, however this should be regulated in the PKI dtaft. I''ll just reword to avoid using RFC2119 words\r\n```suggestion\r\nThe signature metadata minimally contains the ISD-AS number of the signing entity and the key identifier of the public key to be used to verify the message. For more information on signing and verifying control-plane messages, see the chapter \"Signing and Verifying Control-Plane Messages\" of the SCION Control-Plane PKI Specification {{I-D.scion-cppki}}.\r\n```",
              "createdAt": "2024-07-07T21:31:12Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            },
            {
              "originalPosition": 116,
              "body": "I think this is a MUST rather than a SHOULD",
              "createdAt": "2024-07-07T21:35:14Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            },
            {
              "originalPosition": 133,
              "body": "Same as above",
              "createdAt": "2024-07-07T21:35:27Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            },
            {
              "originalPosition": 142,
              "body": "I feel that registering the segment is not an absolute requirement to the spec, I'd avoid RFC2119 wording: \r\n```suggestion\r\n- `SegmentType`: Specifies the type of the path segment to be registered. Currently, only the following type is used:\r\n```",
              "createdAt": "2024-07-07T21:38:14Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A6gTH",
          "commit": {
            "abbreviatedOid": "71d63f6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T09:48:18Z",
          "updatedAt": "2024-07-08T09:48:36Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "Discussed with @matzf , MAY seems more appropriate, as this is somehow optional if the AS wants to advertise the peering link\r\n\r\n```suggestion\r\n   - If the AS has peering links, the control service MAY add corresponding peer entry components to the signed body of the AS entry; one peer entry component for each peering link that the AS wants to advertise. The hop field component of each added peer entry MUST have a specified egress interface.\r\n```",
              "createdAt": "2024-07-08T09:48:18Z",
              "updatedAt": "2024-07-08T09:48:36Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\n2. If the AS has peering links, the control service MAY add corresponding peer entry components to the signed body of the AS entry - one peer entry component for each peering link that the AS wants to advertise. The egress interface ID in the hop field component of each added peer entry MUST NOT be specified.\r\n```",
              "createdAt": "2024-07-08T09:48:30Z",
              "updatedAt": "2024-07-08T09:48:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "PR_kwDOJx2-rs50tsW5",
      "title": "Clarify beaconing at bootstrapping ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/47",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-08T15:45:17Z",
      "updatedAt": "2024-07-08T16:12:02Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "scalability",
      "headRefOid": "8b8d3dd4313fd3a427379cfb7311fb82105bcb6f",
      "closedAt": "2024-07-08T15:55:31Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 49,
      "id": "PR_kwDOJx2-rs50t6zB",
      "title": "Clarify beaconing fast retry at bootstrapping",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/49",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Solves #48 ",
      "createdAt": "2024-07-08T16:16:47Z",
      "updatedAt": "2024-07-21T17:26:01Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "beaconing_fast_retry",
      "headRefOid": "0863ace84c59f251fa995b699d7c819c7890d9a8",
      "closedAt": "2024-07-16T16:29:24Z",
      "mergedAt": "2024-07-16T16:29:24Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "0960054f97e054952821cd18b1421c2ae938aeef"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Disucssed with JC, looks good enough to merge.",
          "createdAt": "2024-07-16T16:29:18Z",
          "updatedAt": "2024-07-16T16:29:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6BHrLK",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T13:06:31Z",
          "updatedAt": "2024-07-09T13:08:03Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I side with Matthias regarding the phrase \"bootstrapping\". This calls for a definition and such is hard to come by. Do we need to mention that at all?\r\n\r\nRegarding \"The AS SHOULD\". We just said that it \"SHOULD not\" in the paragraph above. So can't possibly express it like that. This may be one case where \"MAY\" is approriate, assuming we specify under which condition (since that derogates from the previous paragraph).\r\n\r\nRegarding when it MAY... I think that \"previously unknown\" segments, or \"previously unreachable destinations\" could qualify.\r\n",
              "createdAt": "2024-07-09T13:06:31Z",
              "updatedAt": "2024-07-09T13:08:41Z"
            },
            {
              "originalPosition": 13,
              "body": "Same consideration about boostrapping. What is bootstrapping.",
              "createdAt": "2024-07-09T13:06:36Z",
              "updatedAt": "2024-07-09T13:08:03Z"
            },
            {
              "originalPosition": 22,
              "body": "And again. Here I think it would be enough to mention the worst case and not bother with \"unless...\".\r\n",
              "createdAt": "2024-07-09T13:07:57Z",
              "updatedAt": "2024-07-09T13:08:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIMrE",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T13:56:57Z",
          "updatedAt": "2024-07-09T13:56:57Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "\"Bootstrapping\" was a quick & dirty word, I'll replace it with a list of conditions when the propagation interval MAY not be respected. ",
              "createdAt": "2024-07-09T13:56:57Z",
              "updatedAt": "2024-07-09T13:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIQER",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:01:48Z",
          "updatedAt": "2024-07-09T14:01:48Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Ok, I will remove all mentions of bootstrapping. However, I'd like that we discuss (maybe also with oncilla) if this fast retry mechanism should really be optional, or perhaps mandatory. \r\nIf it stays optional (using MAY in comment above), then we are ok to say here `at worst case`. If it becomes mandatory, then the structural delay here might become a lot better (however, I feel we still don't understand the full implications).\r\n\r\n",
              "createdAt": "2024-07-09T14:01:48Z",
              "updatedAt": "2024-07-09T14:01:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIesg",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:24:23Z",
          "updatedAt": "2024-07-09T14:24:23Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "(fee free to resolve if you like my text, or to propose an alternative)",
              "createdAt": "2024-07-09T14:24:23Z",
              "updatedAt": "2024-07-09T14:24:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIeui",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:24:26Z",
          "updatedAt": "2024-07-09T14:24:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "(fee free to resolve if you like my text, or to propose an alternative)",
              "createdAt": "2024-07-09T14:24:26Z",
              "updatedAt": "2024-07-09T14:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIe7h",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:24:45Z",
          "updatedAt": "2024-07-09T14:24:45Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "@jiceatscion @matzf @oncilla do these conditions sound reasonable? How would the AS check that it receives a previously unknown segment, shall we be more precise about this? \r\n\r\nON a similar note, @tzaeschke 's  comments were: \r\n>  Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths?\r\n\r\n> What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths coming in all the time that need to be forwarded immediately, or not?",
              "createdAt": "2024-07-09T14:24:45Z",
              "updatedAt": "2024-07-09T14:24:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BI2bw",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "oncilla",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:59:03Z",
          "updatedAt": "2024-07-09T14:59:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": ">  How would the AS check that it receives a previously unknown segment, shall we be more precise about this?\r\n\r\nI don't think this is accurate. We do not do fast recovery if we receive a previously unknown path segment in all cases.\r\n\r\nI think what it really boils down to is the following:\r\n\r\nIf we have not successfully distributed at least one beacon within the last beaconing interval, be it due to failing RPCs, or because no beacon was available to propagate, we enter the fast recovery mode.\r\n\r\n> Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths?\r\n\r\nThe questions are mute, because we do not immediately beacon if a new path segment is discovered.\r\n\r\n",
              "createdAt": "2024-07-09T14:59:03Z",
              "updatedAt": "2024-07-09T14:59:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BQRbQ",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-10T09:16:51Z",
          "updatedAt": "2024-07-10T09:44:13Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "\"be validated at worst case up to N intervals (so maximally N minutes)\". This is triply redundant:\r\n\r\n\"up to\" means \"<=\" means \"maximally\" means \"in the worst case\". I give you that the \"maximally\" phrase is about duration and not intervals, but still, that was more than clear enough as it was.\r\n",
              "createdAt": "2024-07-10T09:16:51Z",
              "updatedAt": "2024-07-10T09:44:13Z"
            },
            {
              "originalPosition": 9,
              "body": "Ok. so if we want to be both honest and minimalist, we should just give permission to the current implementation do do what it does, without mandating it (since I don't think we really know how good or bad it is). how about:\r\n\r\n\"\r\nNote that to ensure quick connectivity establishment, an AS MAY attempt to forward a PCB more frequently (\"fast recovery\") if no attempt is know to have succeeded. Current practice is to increase the frequency of attempts if and only if no beacon has been successfully propagated during the last beaconing interval.\r\n\"\r\n?",
              "createdAt": "2024-07-10T09:39:11Z",
              "updatedAt": "2024-07-10T09:44:13Z"
            },
            {
              "originalPosition": 45,
              "body": "\"...propagate the available PCBs at latest in...\"\r\n\r\n\"...propagate the available PCBs at the latest in...\"",
              "createdAt": "2024-07-10T09:43:27Z",
              "updatedAt": "2024-07-10T09:44:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BdlhW",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T14:08:48Z",
          "updatedAt": "2024-07-11T14:08:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "changed\r\n",
              "createdAt": "2024-07-11T14:08:48Z",
              "updatedAt": "2024-07-11T14:08:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BduXY",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T14:22:30Z",
          "updatedAt": "2024-07-11T14:22:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "ok",
              "createdAt": "2024-07-11T14:22:30Z",
              "updatedAt": "2024-07-11T14:22:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BdyTi",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T14:28:31Z",
          "updatedAt": "2024-07-11T14:28:32Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "How about this mix of your two wordings? \r\n```suggestion\r\nNote that to ensure quick connectivity establishment, an AS MAY attempt to forward a PCB more frequently (\"fast recovery\"). Current practice is to increase the frequency of attempts if no PCB propagation is know to have succeeded within the last propagation interval:\r\n\r\n- because the corresponding RPC failed\r\n\r\n- or because no beacon was available to propagate\r\n```",
              "createdAt": "2024-07-11T14:28:31Z",
              "updatedAt": "2024-07-11T14:28:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BenAX",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:24:32Z",
          "updatedAt": "2024-07-11T15:24:32Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Remove this \"at worst\"; can't be fewer steps (even if they'd be triggered quicker)",
              "createdAt": "2024-07-11T15:24:32Z",
              "updatedAt": "2024-07-11T15:24:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BenCP",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:24:34Z",
          "updatedAt": "2024-07-11T15:24:34Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nWhen a new parent-child link is added to the network, the parent AS will propagate the available PCBs in the next propagation event. If the AS on the child side of the new link is a leaf AS, path discovery is thus complete after at most one propagation interval. Otherwise, child ASes at distance D below the new link, learn of the new link after at worst D further propagation intervals.\r\n```\r\n\r\n\"fast recovery\" does not accelerate finding _additional_ paths. It could only help if the AS and its entire subtree was previously disconnected. That seems an unnecessary weird edge case to explain, I'd just leave it out (and it remains correct).",
              "createdAt": "2024-07-11T15:24:34Z",
              "updatedAt": "2024-07-11T15:24:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BenGH",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:24:37Z",
          "updatedAt": "2024-07-11T15:24:37Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "wether -> whether\r\n\r\nThe fast recovery mechanism only significantly affects the path discovery time for (the first) down segments.\r\nIn core beaconing, it's mostly irrelevant for establishing connectivity, as it is disabled as soon as one PCB was propagated over an interface. Because origination/propagation starts from everywhere, this does not create any meaningful connectivity.\r\n\r\nIf you want to mention it at all, I would describe it specifically for the down beaconing case, at the end of the paragraph starting with \"On a cold start of the network ...\". Something like:\r\n\"When all ASes start propagation interval just after they've received the first PCBs from any of their providers (see 'fast recovery'), the construction of a first path to connect each AS to the ISD core is accelerated.\".\r\n",
              "createdAt": "2024-07-11T15:24:37Z",
              "updatedAt": "2024-07-11T15:24:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ber7R",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:31:13Z",
          "updatedAt": "2024-07-11T15:31:13Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "right, I'll do",
              "createdAt": "2024-07-11T15:31:13Z",
              "updatedAt": "2024-07-11T15:31:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6B-48w",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-16T16:22:07Z",
          "updatedAt": "2024-07-16T16:22:07Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Thanks, I added your wording there.",
              "createdAt": "2024-07-16T16:22:07Z",
              "updatedAt": "2024-07-16T16:22:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 51,
      "id": "PR_kwDOJx2-rs51FRYp",
      "title": "Update GitHub actions",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/51",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-11T11:17:08Z",
      "updatedAt": "2024-07-11T11:17:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "actions_update",
      "headRefOid": "f5c6c8782d127ba5dbeadd33103bf83ce7936cea",
      "closedAt": "2024-07-11T11:17:51Z",
      "mergedAt": "2024-07-11T11:17:51Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "c8ec077c3769f92300ec68f1bbf6ed6bb3ae83b7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 53,
      "id": "PR_kwDOJx2-rs511Ni3",
      "title": "wormhole attack: mention proof of transit as detection mechansim",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/53",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #52 ",
      "createdAt": "2024-07-18T21:31:00Z",
      "updatedAt": "2024-07-21T17:26:00Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "0960054f97e054952821cd18b1421c2ae938aeef",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "wormhole-pot",
      "headRefOid": "55bed7906485c5ea7df9b268218dde402a5db3fa",
      "closedAt": "2024-07-21T01:03:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "You\u2019re right, the scenario in the draft refers to wormhole in the control plane (where PCBs are used to advertise a wormholed path), and PoT is useless there. \r\n\r\nI was thinking about a wormhole in the data plane. IN this case, you are also right, this is a pretty useless attack, as it requires two malicious on-path ASes. Right now, we talk about this in the DP draft `5.2.1.  Modification of the Path Header` . I\u2019ll therefore discard this PR and open one in the DP: https://github.com/scionassociation/scion-dp_I-D/pull/34 ",
          "createdAt": "2024-07-21T01:03:25Z",
          "updatedAt": "2024-07-21T01:03:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6CZnRN",
          "commit": {
            "abbreviatedOid": "f216d70"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-19T09:08:33Z",
          "updatedAt": "2024-07-19T09:08:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I am really no security expert, so my reading is worth the same as some random non-expert in your audience. From that naive perspective, I fail to grasp how recipients or senders requiring a proof of transit would help detect the wormhole. After all, the two attacker ASes are colluding to rewrite the packets. It seems to me they ought to have everything they need to write the fake proof of transit as well; the peering link could be real. In fact, there is no need to rewrite the packets; they could be tunneled into honest scion traffic taking the long route between the two attackers, making the peering link basically real. But that's probably just me not understanding how the proof is constructed.\r\n\r\nI am also not quite sure that the scenario qualifies as a wormhole attack. The usual scenario is that traffic is actually taken on shorter route without permission. So, the attacker is already on the path; the goal being to deceive the sender and receiver about their proximity (and, among other things, the perenity of the connectivity). In that case, proof of transit could defend against the attack. However, that isn't the case in your example. Your example is more of a reverse wormhole attack: an attractive wormhole is advertised but does not exist. The traffic takes a long route. So the purpose of the attacker is to insert itself on the path.\r\n",
              "createdAt": "2024-07-19T09:08:33Z",
              "updatedAt": "2024-07-19T09:08:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Cap0n",
          "commit": {
            "abbreviatedOid": "f216d70"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-19T11:45:45Z",
          "updatedAt": "2024-07-19T11:45:45Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "What I want to say is that If traffic is \"swallowed\" via a wormhole shortcut, then packets will skip some of the ASes on path. If there is proof of transit, then the proof for the skipped ASes would be missing, revealing the attack.\r\nOn the other hand, it is impossible to prove that packets went though other ASes.. PoT can only prove that traffic did NOT go through the intended ASes. Does it make sense?\r\n\r\nI tried to update wording\r\n",
              "createdAt": "2024-07-19T11:45:45Z",
              "updatedAt": "2024-07-19T11:45:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOJx2-rs52BSbt",
      "title": "typo: appendix, use automatic references",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/54",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-21T17:25:38Z",
      "updatedAt": "2024-07-21T17:31:49Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "0960054f97e054952821cd18b1421c2ae938aeef",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "typo",
      "headRefOid": "bed84f2cbaf0d32203d9337ef3b9482f973c3959",
      "closedAt": "2024-07-21T17:31:47Z",
      "mergedAt": "2024-07-21T17:31:47Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "2fea2e2ee6c8d57f9eb7d0d9ba71e43dc06edb8c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 59,
      "id": "PR_kwDOJx2-rs54flrO",
      "title": "Added reference about development",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/59",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-08-15T17:49:46Z",
      "updatedAt": "2024-08-30T13:47:45Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "2fea2e2ee6c8d57f9eb7d0d9ba71e43dc06edb8c",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "ietf-note",
      "headRefOid": "d6926ef48ee14b717724c299789b3ecdf91abdef",
      "closedAt": "2024-08-28T15:14:58Z",
      "mergedAt": "2024-08-28T15:14:58Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "28653e087822932fbc1133ec67847f8a77344331"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6HGXON",
          "commit": {
            "abbreviatedOid": "d6926ef"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T15:14:47Z",
          "updatedAt": "2024-08-28T15:14:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOJx2-rs56SB5g",
      "title": "General Edits",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/60",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "General edits to improve consistency, readability and to rationalise superfluous text. Also fixed some unclear or confusing text.\r\n\r\nResolves #58 ",
      "createdAt": "2024-09-03T15:39:33Z",
      "updatedAt": "2024-10-17T17:32:36Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "8ad3175185d3a4a40e89ab2ec005dc12417b80eb",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "general-review",
      "headRefOid": "a57e998b3224b98b0ddb905cd7a278cdbad8b72f",
      "closedAt": "2024-10-17T17:32:36Z",
      "mergedAt": "2024-10-17T17:32:36Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "b4d0b3a4cea2e9331b1cc8de1dbadfc3a8699d3d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6I4n4V",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-11T11:29:52Z",
          "updatedAt": "2024-09-11T12:14:06Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "echo in title",
              "createdAt": "2024-09-11T11:29:52Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 50,
              "body": "echo",
              "createdAt": "2024-09-11T11:30:38Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 53,
              "body": "echo\r\n",
              "createdAt": "2024-09-11T11:30:53Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 494,
              "body": "\"such a\" -> \"such as\"",
              "createdAt": "2024-09-11T11:42:33Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 679,
              "body": "\"they SHOULD be around 6 hours\"\r\n\r\nNot your own edit but I wonder if we have to be so prescriptive here. May be we should instead RECOMMEND \"Several hours\" and indicate that 6h is the most common choice.",
              "createdAt": "2024-09-11T11:49:53Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 724,
              "body": "\"an acyclic graph\"\r\n\r\nThe original \"a directed acyclic graph\", though pedantic, would be more accurate. We DO pay attention to the direction of the connections.\r\n",
              "createdAt": "2024-09-11T11:56:25Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 730,
              "body": "\"has multiplicative effect\" -> \"has a multiplicative effect\", no?",
              "createdAt": "2024-09-11T11:57:35Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 777,
              "body": "\"As mentioned previously, \"\r\n\r\nDo we need to apologize for it?",
              "createdAt": "2024-09-11T12:02:23Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 796,
              "body": "\"as AS may want to\" -> \"as an AS may want to\"",
              "createdAt": "2024-09-11T12:05:11Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuIR",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:23:13Z",
          "updatedAt": "2024-10-06T17:23:14Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Typo in 'Path Segment Construction Beacons (PCBs)",
              "createdAt": "2024-10-06T17:23:13Z",
              "updatedAt": "2024-10-06T17:23:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuJx",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:24:00Z",
          "updatedAt": "2024-10-06T17:24:01Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Okay",
              "createdAt": "2024-10-06T17:24:00Z",
              "updatedAt": "2024-10-06T17:24:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuLa",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:24:52Z",
          "updatedAt": "2024-10-06T17:24:52Z",
          "comments": [
            {
              "originalPosition": 494,
              "body": "> \"such a\" -> \"such as\"\r\n\r\nOkay",
              "createdAt": "2024-10-06T17:24:52Z",
              "updatedAt": "2024-10-06T17:24:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuMN",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:25:24Z",
          "updatedAt": "2024-10-06T17:25:24Z",
          "comments": [
            {
              "originalPosition": 679,
              "body": "Fine with me.",
              "createdAt": "2024-10-06T17:25:24Z",
              "updatedAt": "2024-10-06T17:25:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuMy",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:25:41Z",
          "updatedAt": "2024-10-06T17:25:41Z",
          "comments": [
            {
              "originalPosition": 724,
              "body": "Okay",
              "createdAt": "2024-10-06T17:25:41Z",
              "updatedAt": "2024-10-06T17:25:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuOt",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:26:38Z",
          "updatedAt": "2024-10-06T17:26:38Z",
          "comments": [
            {
              "originalPosition": 730,
              "body": "Either is grammatically correct, although J.C's suggestion is probably better.",
              "createdAt": "2024-10-06T17:26:38Z",
              "updatedAt": "2024-10-06T17:26:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuPn",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:27:00Z",
          "updatedAt": "2024-10-06T17:27:00Z",
          "comments": [
            {
              "originalPosition": 777,
              "body": "Okay",
              "createdAt": "2024-10-06T17:27:00Z",
              "updatedAt": "2024-10-06T17:27:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuQw",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:27:31Z",
          "updatedAt": "2024-10-06T17:27:31Z",
          "comments": [
            {
              "originalPosition": 796,
              "body": "Okay",
              "createdAt": "2024-10-06T17:27:31Z",
              "updatedAt": "2024-10-06T17:27:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuhW",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:35:20Z",
          "updatedAt": "2024-10-06T17:35:21Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Okay",
              "createdAt": "2024-10-06T17:35:20Z",
              "updatedAt": "2024-10-06T17:35:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6H8hoC",
          "commit": {
            "abbreviatedOid": "e30ed3c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Commenting just to resolve some conversations.. I am reviewing ",
          "createdAt": "2024-09-04T17:00:54Z",
          "updatedAt": "2024-10-11T15:25:49Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n**Control Plane**: The SCION Control Plane is responsible for the propagation and discovery of network paths, i.e., for the exchange of routing information between network nodes. The Control Plane thus determines where traffic can be sent and deals with questions such as how paths are discovered, which paths exist, etc. Within a SCION AS, such functionalities are carried out by the Control Service whereas packet forwarding is a task carried out by the data plane.\r\n```\r\nlink quality is not addressed by the CP\r\n",
              "createdAt": "2024-09-04T17:00:54Z",
              "updatedAt": "2024-10-11T15:25:49Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nA path MUST contain at most one peering link shortcut which means they can only be used in paths between ASes within the \"customer cone\" of the ASes connected by the peering link.\r\n```\r\n@jiceatscion can we use two peering links in a path? As far as I know no, therefore here we could use MUST",
              "createdAt": "2024-09-04T17:06:09Z",
              "updatedAt": "2024-10-11T15:25:49Z"
            },
            {
              "originalPosition": 32,
              "body": "Changed to:\r\n>  The Control Plane thus determines where traffic can be sent and deals with questions such as how paths are discovered, which paths exist, how they are disseminated to endpoints, etc. ",
              "createdAt": "2024-10-11T14:45:32Z",
              "updatedAt": "2024-10-11T15:25:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6NnLgH",
          "commit": {
            "abbreviatedOid": "a57e998"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-17T17:32:13Z",
          "updatedAt": "2024-10-17T17:32:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOJx2-rs57KXG8",
      "title": "grpc: describe empty responses and mention the existence of gRPC errors",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/62",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #61 ",
      "createdAt": "2024-09-11T13:19:28Z",
      "updatedAt": "2024-09-19T17:33:29Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "28653e087822932fbc1133ec67847f8a77344331",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "beaconing_api_errors",
      "headRefOid": "34bd2f3305dd0bc1eb673497696f139b6f7df268",
      "closedAt": "2024-09-19T17:33:23Z",
      "mergedAt": "2024-09-19T17:33:23Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "833acf74eb6bcccb1974bc883ee8c623b1bafc9f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6KCp1I",
          "commit": {
            "abbreviatedOid": "34bd2f3"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM\r\n",
          "createdAt": "2024-09-19T15:49:39Z",
          "updatedAt": "2024-09-19T15:49:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOJx2-rs58JkpE",
      "title": "mtu: add clarifications.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/63",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #57 ",
      "createdAt": "2024-09-20T10:33:09Z",
      "updatedAt": "2024-10-04T12:24:40Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "833acf74eb6bcccb1974bc883ee8c623b1bafc9f",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cp_mtu",
      "headRefOid": "959ec246190151f0b98855c1bc4c54100f3c3f37",
      "closedAt": "2024-10-04T12:24:37Z",
      "mergedAt": "2024-10-04T12:24:37Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "93ab0da2eb6b55dbdb5f3bdc5e4155f84fcdccf1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6LqJb3",
          "commit": {
            "abbreviatedOid": "0d37e42"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Thanks a lot, looks good. I proposed rewording of some sections and added a note in the config section ",
          "createdAt": "2024-10-02T14:13:23Z",
          "updatedAt": "2024-10-03T09:38:44Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nSCION paths represent a sequence of ASes and inter-AS links; each with possibly different MTUs. As a result, the path MTU is the minimum of the MTUs of each inter-AS link and intra-AS networks it traverses. Such MTU information is disseminated during path construction:\r\n\r\n* The MTU of the first and last ASes (represented by the MTU field of the corresponding [AS Entries](#ase-sign))\r\n* The MTU of each inter-AS link or peering link (indicated by the ingress_mtu field of each [](#hopentry) or the peer_mtu field of each [](#peerentry) used)\r\n* The MTU of any intra-AS network traversed if the ingress and egress interfaces of a hop exist on two different border routers\r\n\r\nIt is then made available to endpoints during the path lookup process.\r\n```\r\n\r\nI assume that the MTU is also included in the information returned after a lookup. Right now, we don't say much about this. Could it be more explicit?",
              "createdAt": "2024-10-02T14:13:23Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nRegarding the later point: A SCION endpoint using a path segment has no means of knowing whether a given hop implies traversing the corresponding AS' internal network or not, nor whether a possibly larger MTU applies. In addition, SCION control plane implementations are NOT REQUIRED to account for this in the hop's `ingress_mtu` field. As a result, a SCION endpoint looking up a path MUST assume that all hops are additionally constrained by the internal network MTU of each AS traversed.\r\n```",
              "createdAt": "2024-10-02T14:17:23Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- `mtu`: The maximum transmission unit (MTU) that is supported by all intra-domain links within the current AS. This value is set by the control service when adding the AS entry to the beacon. How the control service obtains this information is implementation dependent. Current practice is to make it a configuration item.\r\n```\r\nI think it is better to refer to the intra-domain underlay rather than to hosts",
              "createdAt": "2024-10-03T09:21:14Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n- `ingress_mtu`: Specifies the maximum transmission unit (MTU) of the ingress interface (in beaconing direction) of the hop being described. The MTU of path segments constructed from the containing beacon is necessarily less than or equal to this value. How the control service obtains the MTU of an inter-AS link is implementation dependent. It may be discovered or configured. Current practice to make it a configuration item.\r\n```",
              "createdAt": "2024-10-03T09:25:57Z",
              "updatedAt": "2024-10-04T09:18:20Z"
            },
            {
              "originalPosition": 16,
              "body": "Are you referring to a specific section of RFC1122? I skimmed through it and I did not find where you are referring to immediately. In the terminology section, it only says: \r\n```\r\n         MTU\r\n              The maximum transmission unit, i.e., the size of the\r\n              largest packet that can be transmitted.\r\n```",
              "createdAt": "2024-10-03T09:30:32Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n- `peer_mtu`: Specifies the maximum transmission unit (MTU) of the peering link being described. The MTU of paths via such link is necessarily less than or equal to this value.  How the control service obtains the MTU of an inter-AS link is implementation dependent. It may be discovered or configured. Current practice to make it a configuration item.\r\n```",
              "createdAt": "2024-10-03T09:31:27Z",
              "updatedAt": "2024-10-04T09:21:29Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nThis may be optimized if the control plane implementations made the hop's `ingress_mtu` field no greater than the MTU of the path between the two border routers involved in that hop. However existing implementations have not historically done this in favor of the more conservative approach to use the maximum AS MTU specified in [](#ase-sign).\r\n```",
              "createdAt": "2024-10-03T09:36:25Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 38,
              "body": "JFYI I've added this",
              "createdAt": "2024-10-03T09:38:09Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyK_R",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:08:07Z",
          "updatedAt": "2024-10-03T10:08:08Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I think neither my nor your formulation are accurate. A path segment does not have an end-to-end MTU. Only a path does. In addition, we cannot say \"MUST\" or \"MUST NOT\" as no-one is setting any end-2-end MTU for a path at the protocol level. It is ony a property that results from the various MTU fields. How about:\r\n\r\n\"\r\n- `ingress_mtu`: Specifies the maximum transmission unit (MTU) of the ingress interface (in beaconing direction) of the hop being described. The MTU of path segments constructed from the containing beacon is necessarily less than or equal to this value. How the control service obtains the MTU of an inter-AS link is implementation dependent. It may be discovered or configured. Current practice to make it a configuration item.\r\n\"\r\n",
              "createdAt": "2024-10-03T10:08:07Z",
              "updatedAt": "2024-10-03T10:08:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyNwd",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:12:29Z",
          "updatedAt": "2024-10-03T10:12:30Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "A precise reference would be complicated. I was shocked to discover how poorly the term is defined. This is the closest I found to a definition and it is spread between the paragraph you quote and the text after it:\r\n\r\n> The terms frame, packet, datagram, message, and segment are\r\n>          illustrated by the following schematic diagrams:\r\n> \r\n>          A. Transmission on connected network:\r\n>            _______________________________________________\r\n>           | LL hdr | IP hdr |         (data)              |\r\n>           |________|________|_____________________________|\r\n> \r\n>            <---------- Frame ----------------------------->\r\n>                     <----------Packet -------------------->\r\n\r\nSo, the MTU is defined first as applying to a packet, and then a packet is defined as the portion of the Frame that follows the LL header.\r\n",
              "createdAt": "2024-10-03T10:12:29Z",
              "updatedAt": "2024-10-03T10:30:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyPLj",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:15:06Z",
          "updatedAt": "2024-10-03T10:15:06Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Same response as before and same suggestion for a third brew of the text.\r\n",
              "createdAt": "2024-10-03T10:15:06Z",
              "updatedAt": "2024-10-03T10:15:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyUYP",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:26:31Z",
          "updatedAt": "2024-10-03T10:26:31Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "No, that isn't quite true. The CS implementations do not conservatively use the AS's MTU as a limit on the ingress MTU. They let the endpoints do that. As a result, the endpoints *have* to do it. As a result, there's no point for the CS to offer the optimal MTU for a given hop.\r\n\r\nThe truth is that we'd need a migration strategy:\r\n* Phase 1: reduce the ingress MTU to that of the specific HOP (which has no effect on consumers of the HOP).\r\n* Phase 2: wait for all CS'es in the world to run running that modified code.\r\n* Phase 3: update the daemon and other segment consuming code to rely on the ingress MTU only and consider the AS's MTU of only the last HOP of the path.\r\n\r\nHow the heck do I summarize that in a normative doc? Yet, if we don't say it, someone will object and say the protocol is wasting a performance opportunity.\r\n",
              "createdAt": "2024-10-03T10:26:31Z",
              "updatedAt": "2024-10-03T10:26:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyU4K",
          "commit": {
            "abbreviatedOid": "0d37e42"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:27:38Z",
          "updatedAt": "2024-10-03T10:27:38Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "ack.\r\n",
              "createdAt": "2024-10-03T10:27:38Z",
              "updatedAt": "2024-10-03T10:27:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7P20",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:18:54Z",
          "updatedAt": "2024-10-04T09:18:55Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "True, I added your formulation.",
              "createdAt": "2024-10-04T09:18:54Z",
              "updatedAt": "2024-10-04T09:18:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7R7v",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:23:12Z",
          "updatedAt": "2024-10-04T09:23:12Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I updated my suggestion above. As this is a peering link, I think we cannot use the same wording as for regular links (we cannot refer to the MTU in a path segment, as the peering link intrinsically merges two distinct segments). Let me know wat you think about this wording: \r\n> The MTU of paths via such link is necessarily less than or equal to this value. \r\n",
              "createdAt": "2024-10-04T09:23:12Z",
              "updatedAt": "2024-10-04T09:23:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7UF7",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:27:31Z",
          "updatedAt": "2024-10-04T09:27:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "And I changed \"MTU of path segments\" to \"MTU of paths\", since we agreed that the MTU of a segment is undefined.",
              "createdAt": "2024-10-04T09:27:31Z",
              "updatedAt": "2024-10-04T09:27:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7VXy",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:30:11Z",
          "updatedAt": "2024-10-04T09:30:11Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Yes, that's what I would have done. I did apply the same change to the ingress MTU for a similar reason: there is no segment MTU; it all depends on which portion you use.",
              "createdAt": "2024-10-04T09:30:11Z",
              "updatedAt": "2024-10-04T09:30:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7uyE",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T10:17:21Z",
          "updatedAt": "2024-10-04T10:17:21Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Thank you for the clarification, I see your point. Let me propose another wording (I have to open a new thread).",
              "createdAt": "2024-10-04T10:17:21Z",
              "updatedAt": "2024-10-04T10:17:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L8DSq",
          "commit": {
            "abbreviatedOid": "06e36e2"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:02:47Z",
          "updatedAt": "2024-10-04T11:02:47Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Ok, then let's perhaps leave the reference as it is, I think the text is clear enough,",
              "createdAt": "2024-10-04T11:02:47Z",
              "updatedAt": "2024-10-04T11:02:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L8VV6",
          "commit": {
            "abbreviatedOid": "06e36e2"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:41:05Z",
          "updatedAt": "2024-10-04T11:41:06Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "@jiceatscion how about this wording? In a nutshell: \r\n- I only mention MTU of each intra-AS network\r\n- I mention that endpoints are unaware of AS topologies, therefore they must assume intra-AS is traversed. This should be a strong enough justification for this approach (and we leave out ptential discussions for optimizations, that are not really of primary importance for this document)\r\n\r\n\r\n```suggestion\r\n* The MTU of each intra-AS network traversed (represented by the MTU field of the corresponding [AS Entries](#ase-sign))\r\n* The MTU of each inter-AS link or peering link (indicated by the ingress_mtu field of each [](#hopentry) or the peer_mtu field of each [](#peerentry) used)\r\n\r\nSuch information is then made available to endpoints during the path lookup process (See [](#lookup)). SCION endpoints are oblivious to the topology of intermediate ASes, therefore when looking up a path they MUST assume that all hops are constrained by the intra-AS MTU of each AS traversed.\r\n```",
              "createdAt": "2024-10-04T11:41:05Z",
              "updatedAt": "2024-10-04T11:43:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L8doK",
          "commit": {
            "abbreviatedOid": "dabe855"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T11:58:47Z",
          "updatedAt": "2024-10-04T11:58:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOJx2-rs59iVAa",
      "title": "Updated Intro and added Change Log",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/65",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-03T18:22:40Z",
      "updatedAt": "2024-10-03T18:28:40Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "833acf74eb6bcccb1974bc883ee8c623b1bafc9f",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Intro_update",
      "headRefOid": "120627fa8ae3fe3c707dc71f0824ab3cb889e055",
      "closedAt": "2024-10-03T18:28:39Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 66,
      "id": "PR_kwDOJx2-rs59ia0w",
      "title": "Updated Intro and add changelog",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/66",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #64 ",
      "createdAt": "2024-10-03T18:33:23Z",
      "updatedAt": "2024-10-11T14:43:41Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "401b12cb34dbcfbd813d6e1c064f42530e2c6a7d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Intro_update",
      "headRefOid": "48116d0826bffb782bced133e1d0f3acc633cbdd",
      "closedAt": "2024-10-11T14:43:39Z",
      "mergedAt": "2024-10-11T14:43:39Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5189e4d239f924e82de6afd9bf75d7bc89ee3fd3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6M2EL6",
          "commit": {
            "abbreviatedOid": "1858906"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I edited a bit the change log, looks good!",
          "createdAt": "2024-10-11T14:43:34Z",
          "updatedAt": "2024-10-11T14:43:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOJx2-rs59pP3J",
      "title": "cleanup: Cleaned-up protobufs appendix and add some missing refs to it",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/68",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": " Also cleaned-up extraneous blank lines. Replaced phrases like \"on xyz-level\".\r\n\r\nFixes #67 ",
      "createdAt": "2024-10-04T16:55:59Z",
      "updatedAt": "2024-10-18T14:28:46Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "93ab0da2eb6b55dbdb5f3bdc5e4155f84fcdccf1",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "api",
      "headRefOid": "c82117d711d20a243e7ca4a0fcbfa278fdee91d1",
      "closedAt": "2024-10-08T08:29:55Z",
      "mergedAt": "2024-10-08T08:29:55Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "59edc75fc902a83734ad852bc88795d253889ec2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6MPJfq",
          "commit": {
            "abbreviatedOid": "519c312"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks a lot! I left some minor comments/changes, the rest looks good! \r\n",
          "createdAt": "2024-10-07T19:35:30Z",
          "updatedAt": "2024-10-07T20:08:29Z",
          "comments": [
            {
              "originalPosition": 319,
              "body": "```suggestion\r\n1. First, the source endpoint queries the control service in its own AS (i.e., the source AS) for the required segments by sending a SegmentsRequest. The control service has up-path segments stored in its path database. Additionally, the control service checks if it has appropriate core- and down-path segments in store as well; in this case it returns them immediately in a SegmentsResponse.\r\n```",
              "createdAt": "2024-10-07T19:35:30Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            },
            {
              "originalPosition": 488,
              "body": "Does this description apply to all messages beklow? If so, I'd put it in the main text or in the figure description rather than at the top of the figure. Right now, in the compiled draft, it looks sort of funny: \r\n```\r\nFull Control Service gRPC API\r\n\r\n   The following code blocks provide, in protobuf format, the entire API\r\n   by which control services interact.\r\n\r\n   // This API is exposed on the SCION dataplane by the control services\r\n   // of core ASes and exposed on the \"intra-domain protocol\" network.\r\n   service SegmentLookupService {\r\n       // Segments returns all segments that match the request.\r\n       rpc Segments(SegmentsRequest) returns (SegmentsResponse) {}\r\n   }\r\n   ```\r\n\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-10-07T19:51:43Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            },
            {
              "originalPosition": 520,
              "body": "```suggestion\r\n{: #figure-11 title=\"Control Service gRPC API - Segment lookup. This API is exposed on the SCION dataplane by the control services of core ASes and exposed on the \"intra-domain protocol\" network.\"}\r\n```",
              "createdAt": "2024-10-07T20:03:20Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            },
            {
              "originalPosition": 525,
              "body": "Same as in comment above",
              "createdAt": "2024-10-07T20:04:59Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MS9IP",
          "commit": {
            "abbreviatedOid": "519c312"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:29:11Z",
          "updatedAt": "2024-10-08T08:29:11Z",
          "comments": [
            {
              "originalPosition": 488,
              "body": "done",
              "createdAt": "2024-10-08T08:29:11Z",
              "updatedAt": "2024-10-08T08:29:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MS9Pb",
          "commit": {
            "abbreviatedOid": "519c312"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:29:22Z",
          "updatedAt": "2024-10-08T08:29:22Z",
          "comments": [
            {
              "originalPosition": 520,
              "body": "done",
              "createdAt": "2024-10-08T08:29:22Z",
              "updatedAt": "2024-10-08T08:29:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 69,
      "id": "PR_kwDOJx2-rs598qM_",
      "title": "cp_draft: fix recommended/typical values for best PCB set size and AS cert TTL",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/69",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #50 ",
      "createdAt": "2024-10-08T13:00:39Z",
      "updatedAt": "2024-10-17T13:05:19Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "5189e4d239f924e82de6afd9bf75d7bc89ee3fd3",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "anapaya_review",
      "headRefOid": "b2e89074d83d56aff3ea035ae2b406e9a348629c",
      "closedAt": "2024-10-17T13:05:15Z",
      "mergedAt": "2024-10-17T13:05:15Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "8ad3175185d3a4a40e89ab2ec005dc12417b80eb"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Can you add one line to the change log?",
          "createdAt": "2024-10-15T09:50:00Z",
          "updatedAt": "2024-10-15T09:50:00Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you update the branch from main, there'll be a change log to update.",
          "createdAt": "2024-10-15T14:48:43Z",
          "updatedAt": "2024-10-15T14:48:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6NkmtJ",
          "commit": {
            "abbreviatedOid": "b2e8907"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-17T13:04:46Z",
          "updatedAt": "2024-10-17T13:04:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "PR_kwDOJx2-rs59-G-G",
      "title": "Deprecates draft-dekater-panrg-scion-overview",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/70",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-08T15:52:15Z",
      "updatedAt": "2024-10-11T13:57:57Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "59edc75fc902a83734ad852bc88795d253889ec2",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Intro_notes",
      "headRefOid": "f43f0a68ff1a36671a98318146fc6bdd9f97c0d7",
      "closedAt": "2024-10-11T13:57:54Z",
      "mergedAt": "2024-10-11T13:57:54Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "401b12cb34dbcfbd813d6e1c064f42530e2c6a7d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6Midh_",
          "commit": {
            "abbreviatedOid": "f0cb977"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Can you make wording in the intro in par with DP? ",
          "createdAt": "2024-10-09T18:04:49Z",
          "updatedAt": "2024-10-09T18:04:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6M1q65",
          "commit": {
            "abbreviatedOid": "f43f0a6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-11T13:57:10Z",
          "updatedAt": "2024-10-11T13:57:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOJx2-rs5_AFEh",
      "title": "General review - nico",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/71",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #19 \r\nContributes to #58",
      "createdAt": "2024-10-17T17:55:09Z",
      "updatedAt": "2024-10-18T10:04:38Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "b4d0b3a4cea2e9331b1cc8de1dbadfc3a8699d3d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "nic-review",
      "headRefOid": "e7b08a324728a360a0dd6808de190b21fd84d506",
      "closedAt": "2024-10-18T10:04:31Z",
      "mergedAt": "2024-10-18T10:04:31Z",
      "mergedBy": "knmeynell",
      "mergeCommit": {
        "oid": "7f28a8f08af3490638a62138694bfaa4b481c29e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6Ns3_n",
          "commit": {
            "abbreviatedOid": "6f17135"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T08:11:05Z",
          "updatedAt": "2024-10-18T08:11:31Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "describes impact -> describes the impact",
              "createdAt": "2024-10-18T08:11:05Z",
              "updatedAt": "2024-10-18T08:11:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6NtDp_",
          "commit": {
            "abbreviatedOid": "6f17135"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T08:30:45Z",
          "updatedAt": "2024-10-18T08:30:46Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nRecovering from a partitioned network is also seamless as only coarse time synchronization between the partitions is required to resume normal operation and move forward with updates of the cryptographic material. [](#clock-inaccuracy) further describes the impact of time synchronization.\r\n```",
              "createdAt": "2024-10-18T08:30:45Z",
              "updatedAt": "2024-10-18T08:30:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6NtSnL",
          "commit": {
            "abbreviatedOid": "e7b08a3"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T08:55:21Z",
          "updatedAt": "2024-10-18T08:55:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6Nt90j",
          "commit": {
            "abbreviatedOid": "e7b08a3"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good to me",
          "createdAt": "2024-10-18T10:04:16Z",
          "updatedAt": "2024-10-18T10:04:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOJx2-rs5_GDVt",
      "title": "addressing: clarify text representation",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/74",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "contributes to #73 ",
      "createdAt": "2024-10-18T11:56:57Z",
      "updatedAt": "2024-10-18T12:13:52Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "7f28a8f08af3490638a62138694bfaa4b481c29e",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "73-isdas-text-repr",
      "headRefOid": "68f392db347c9efd52b6fc1fb0cae188b0c7b591",
      "closedAt": "2024-10-18T12:13:46Z",
      "mergedAt": "2024-10-18T12:13:46Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "fb51d27709ffc752093158a1989b28cd87fe7646"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6NvBlY",
          "commit": {
            "abbreviatedOid": "68f392d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T12:13:35Z",
          "updatedAt": "2024-10-18T12:13:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOJx2-rs5_GgNP",
      "title": "add section about monitoring the CP",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/75",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #20",
      "createdAt": "2024-10-18T13:02:53Z",
      "updatedAt": "2024-10-18T14:28:02Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "fb51d27709ffc752093158a1989b28cd87fe7646",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "manageability",
      "headRefOid": "f13368a7c7a1356207c3b9392bc5e8343f47794a",
      "closedAt": "2024-10-18T14:26:12Z",
      "mergedAt": "2024-10-18T14:26:12Z",
      "mergedBy": "knmeynell",
      "mergeCommit": {
        "oid": "eae432ed9cee1e13c30ce3a8623f9594f86ef4bd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6NwcSm",
          "commit": {
            "abbreviatedOid": "f13368a"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks fine to me.",
          "createdAt": "2024-10-18T14:26:00Z",
          "updatedAt": "2024-10-18T14:26:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOJx2-rs5_HRSf",
      "title": "add section about monitoring the CP (continued)",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/76",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Continues #75 \r\nResolves #20 ",
      "createdAt": "2024-10-18T14:32:18Z",
      "updatedAt": "2024-10-18T15:10:56Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "eae432ed9cee1e13c30ce3a8623f9594f86ef4bd",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "manageability",
      "headRefOid": "09d31e48bdfba2047465f22240d38dfb5e19e9bb",
      "closedAt": "2024-10-18T15:10:50Z",
      "mergedAt": "2024-10-18T15:10:50Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "ec4e9044cd576d94a2576d7f9b204bad474245c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6Nw0fg",
          "commit": {
            "abbreviatedOid": "09d31e4"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "LGTM\r\n",
          "createdAt": "2024-10-18T15:07:35Z",
          "updatedAt": "2024-10-18T15:07:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6Nw2El",
          "commit": {
            "abbreviatedOid": "09d31e4"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T15:10:40Z",
          "updatedAt": "2024-10-18T15:10:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOJx2-rs6BojUp",
      "title": "scmp: import SCMP from dataplane draft",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/78",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also in passing:\r\n* added a missing RFC reference\r\n* removed many superfluous blank lines\r\n* untabified\r\n* extended the \"~\" lines around some code blocks, because it seems to help my editor not get confused (hopefully it won't increase the confusion of other editors).\r\n\r\nContributes to: https://github.com/scionassociation/scion-dp_I-D/issues/84",
      "createdAt": "2024-11-12T13:24:12Z",
      "updatedAt": "2024-12-02T17:09:33Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "ec4e9044cd576d94a2576d7f9b204bad474245c0",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "scmp_to_cp",
      "headRefOid": "111346fa924187c3f54df82d14b65b8aa5de63ec",
      "closedAt": "2024-12-02T17:09:29Z",
      "mergedAt": "2024-12-02T17:09:29Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "66e4d967c527147d16f906ccede908163c8a761e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6TbIjA",
          "commit": {
            "abbreviatedOid": "2d0b89a"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-02T17:08:55Z",
          "updatedAt": "2024-12-02T17:08:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOJx2-rs6DK8IG",
      "title": "Clarifies aim of document",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/79",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also corrects erroneous reference to Data Plane.",
      "createdAt": "2024-11-26T11:06:37Z",
      "updatedAt": "2024-12-20T07:17:16Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "ec4e9044cd576d94a2576d7f9b204bad474245c0",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "this-is-not-a-standard",
      "headRefOid": "44d3c69e33205f52228f4c3a0f897e09780dc0b8",
      "closedAt": "2024-12-20T07:17:16Z",
      "mergedAt": "2024-12-20T07:17:16Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "1e63d9984d5ca94f84c4a134e20cb7b4dc8bd0cf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6S428t",
          "commit": {
            "abbreviatedOid": "4a5744a"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-27T09:05:54Z",
          "updatedAt": "2024-11-27T09:05:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe SCION architecture was initially developed outside of the IETF by ETH Zurich with significant contributions from Anapaya Systems. It is deployed in the Swiss finance sector to provide resilient connectivity between financial institutions. The aim of this document is to document the existing protocol specification as deployed, to encourage interoperability among implementations, and to introduce new concepts that can potentially be further improved to address particular problems with the current Internet architecture. This is not intended for publication as an Internet Standard.\r\n```",
              "createdAt": "2024-11-27T09:05:54Z",
              "updatedAt": "2024-11-27T09:05:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6S449R",
          "commit": {
            "abbreviatedOid": "610b278"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-27T09:08:27Z",
          "updatedAt": "2024-11-27T09:08:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6WBR8o",
          "commit": {
            "abbreviatedOid": "44d3c69"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-20T07:17:06Z",
          "updatedAt": "2024-12-20T07:17:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOJx2-rs6F7CCk",
      "title": "Address Til's comments.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/80",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #46\r\nDraft [diff with main](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/til_feedback/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2024-12-20T14:51:34Z",
      "updatedAt": "2025-02-26T09:20:12Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f21011278eca93379b66067f33c7feb09b4b67f2",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "til_feedback",
      "headRefOid": "f2bd5e8295aacb0fe97ece518a785defec50c3b9",
      "closedAt": "2025-02-26T09:20:09Z",
      "mergedAt": "2025-02-26T09:20:09Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "d0182d28fb0e84c56d43aaa021d29a77907b9e0d"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thanks a lot, I'll review after holidays! ",
          "createdAt": "2024-12-24T12:37:35Z",
          "updatedAt": "2024-12-24T12:37:35Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@tzaeschke with this one we tried to address your comments in #46 . For me, it can be merged. I think you already had a look in the past, let me know if you agree that we can merge. \r\n\r\nIf something pops up later, we can always address it, but I'd like to start mergint to avoid having too many branches at the same time",
          "createdAt": "2025-02-25T15:57:11Z",
          "updatedAt": "2025-02-25T15:57:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6akRC9",
          "commit": {
            "abbreviatedOid": "e7e81b6"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-04T15:16:22Z",
          "updatedAt": "2025-02-04T15:16:52Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "without any customer -> without any children",
              "createdAt": "2025-02-04T15:16:22Z",
              "updatedAt": "2025-02-04T15:16:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6cVur6",
          "commit": {
            "abbreviatedOid": "0b2a66d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "@jiceatscion I left a few comments, can you have a look? W can then discuss\r\n\r\n@tzaeschke , feel free to also have a look , we are trying to address your remaining points from #46 \r\n",
          "createdAt": "2025-02-18T09:31:55Z",
          "updatedAt": "2025-02-21T18:51:47Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nA secure and reliable routing architecture has to be designed specifically to avoid circular dependencies during network initialization. One goal is that the SCION network can start up even after large outages or attacks, in addition to avoiding cascades of outages caused by fragile interdependencies. This section lists the concepts SCION uses to prevent circular dependencies.\r\n```",
              "createdAt": "2025-02-18T09:31:56Z",
              "updatedAt": "2025-02-21T18:51:47Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nPCBs contain inter-domain topology and authentication information, and can also include additional metadata that helps with path management and selection. The beaconing process itself is divided into routing processes on two levels, where *inter-ISD* or core beaconing is based on the (selective) sending of PCBs without a defined direction, and *intra-ISD* beaconing on top-to-bottom propagation.\r\n```",
              "createdAt": "2025-02-18T09:52:17Z",
              "updatedAt": "2025-02-21T18:51:47Z"
            },
            {
              "originalPosition": 5,
              "body": "How about we call this something like \"PKI-network circular dependencies\" and then do some changes in the bullet points below as I propose?\r\n\r\nAlso, Til commented: \r\n> Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n ",
              "createdAt": "2025-02-18T09:54:09Z",
              "updatedAt": "2025-02-21T18:51:47Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nPartitioning occurs when a network splits into two because of link failures.  Partitioning of the global SCION inter-domain network is much less likely to happen, thanks to its path awareness that exposes multiple paths between SCION ASes. Even during failures there is no special failure mode required as SCION-enabled ASes can always switch to already known paths that use other links.\r\n```\r\n",
              "createdAt": "2025-02-18T10:01:19Z",
              "updatedAt": "2025-02-21T18:51:47Z"
            },
            {
              "originalPosition": 15,
              "body": "Til mentioned: \r\n> However, I am not sure how anything in the list explains anything about circular dependencies?\r\n\r\nI think this paragraph needs some work:\r\n\r\n- [ ] `In order to participate in this process, an AS only needs to be aware of its direct neighbors. ` Is it true? AFAIK an AS needs to be aware of it neighbors AND have an AS path to a core AS, so that it can receive beacons. We also say that in `7.1.  Manipulation of the Beaconing Process by a Core Adversary`\r\n- [ ] `a single path segment already enables intra-ISD communication` ok but how does this help with circular dependencies or bootstrapping? Also, to achieve any to any intra-ISD communication, you need an up and down segment\r\n- [x] `Availability of certificates` here we could mention that this avoids circular dependencies between the PKI and certificates (this is important, as it distinguishes SCION from RPKI). I alredy added some wording on this.",
              "createdAt": "2025-02-21T17:57:12Z",
              "updatedAt": "2025-02-21T18:51:47Z"
            },
            {
              "originalPosition": 25,
              "body": "I think referencing this section would address Til's comment: \r\n> Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the propagation interval and the origination interval.\r\nAs I understand, with propagation interval being set to e.g. 10Minutes, this adds up to 5hops1/210min= 25minutes for 5 hops.\r\n\r\n```suggestion\r\nRecovering from a partitioned network is also seamless as only coarse time synchronization between the partitions is required to resume normal operation and move forward with updates of the cryptographic material. [](#clock-inaccuracy) further describes the impact of time synchronization and path discovery time.\r\n```\r\n\r\nAlso, we don't set an upper bound to propagation interval. Shall we?",
              "createdAt": "2025-02-21T18:09:43Z",
              "updatedAt": "2025-02-24T12:47:38Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nOn its way, a PCB accumulates cryptographically protected path and forwarding information per traversed AS. At every AS, metadata as well as information about the AS's ingress and egress interfaces is added to the PCB. The full PCB message format is described in [](#pcbs). PCBs are used to construct path segments. ASes register them to make them available to other ASes, as described in [](#path-segment-reg).\r\n```",
              "createdAt": "2025-02-21T18:26:57Z",
              "updatedAt": "2025-02-21T18:51:48Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nFor the purpose of validation, a timestamp is considered \"future\" if it is later than the current time at the point of validation plus an allowance for differences between the validator's and originator's clock. As an allowance, it is recommended to use the granularity of the hopfield expiration time (that is 337.5 seconds, see [](#hopfield)).\r\n```",
              "createdAt": "2025-02-21T18:29:57Z",
              "updatedAt": "2025-02-21T18:51:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dKdo1",
          "commit": {
            "abbreviatedOid": "91dfbde"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T11:23:03Z",
          "updatedAt": "2025-02-24T11:38:34Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Explaining bootstraping flows is always hard...\r\nThe statement about knowing only immediate neighbors is absolutely true.\r\nThe path to a core AS comes from beaconing; which is enabled by having connectivity with only the immediate parent and children ASes. One-hop paths can be crafted without any prior communication. If beaconing works, then all ASes learn paths to core ASes; which they can then query to obtain segments to construct all other paths.",
              "createdAt": "2025-02-24T11:23:03Z",
              "updatedAt": "2025-02-24T11:38:34Z"
            },
            {
              "originalPosition": 25,
              "body": "Did you refer to the same clock-inaccuracy sectoin twice in a row, in your suggestion? ",
              "createdAt": "2025-02-24T11:29:06Z",
              "updatedAt": "2025-02-24T11:38:34Z"
            },
            {
              "originalPosition": 5,
              "body": "Do you mean to replace the title \"Bootstrapping\" with \"PKI-network circular dependency\"? Why? Certificates aren't the only objects involved in the bootstrapping process. Also I suggest avoiding the phrase \"circular dependencies\" in section titles. It gives the impression that it's a feature. The feature is the opposite: the ability to bootstrap (or \"cold-start\" if that's the term we prefer).\r\n",
              "createdAt": "2025-02-24T11:35:00Z",
              "updatedAt": "2025-02-24T11:38:34Z"
            },
            {
              "originalPosition": 25,
              "body": "As for propagation intervals; no I don't think so. Do I need to double check? Should we have a limit to reduce healing time? It is true that paths may take a long time to become known. That's a problem if they break often.",
              "createdAt": "2025-02-24T11:37:58Z",
              "updatedAt": "2025-02-24T11:38:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dLPcF",
          "commit": {
            "abbreviatedOid": "e7e81b6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T12:43:27Z",
          "updatedAt": "2025-02-24T12:43:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "ok let's call it cold-start or bootstrapping (whichever we use in the rest of the text). I think right now it is both.. ",
              "createdAt": "2025-02-24T12:43:27Z",
              "updatedAt": "2025-02-24T12:43:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dMLCd",
          "commit": {
            "abbreviatedOid": "9ac8aee"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T14:07:56Z",
          "updatedAt": "2025-02-24T14:35:54Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Last sentence, remove duplicate space: \r\n`reach the core ASes of their ISD ____ and register reciprocal segments` ",
              "createdAt": "2025-02-24T14:07:57Z",
              "updatedAt": "2025-02-24T14:35:54Z"
            },
            {
              "originalPosition": 5,
              "body": "To clarify, my suggestion was to either use only one term (not both) or, otherwise explicitly state that they mean the name thing.\r\nJust using them both without saying that they are the same is probably confusing. I think the least confusing thing would be to have only one term. This may also come up with reviewers.",
              "createdAt": "2025-02-24T14:17:15Z",
              "updatedAt": "2025-02-24T14:35:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dX7iB",
          "commit": {
            "abbreviatedOid": "e7e81b6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T09:30:28Z",
          "updatedAt": "2025-02-25T09:30:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Indeed, I meant that we choose one and stick to it everywhere. Which one? Let me analyze current drafts: \r\n\r\nIn the current draft version, these are the uses: \r\nBootstrap\r\n* Bootstrapping ability (this chapter)\r\n* To bootstrap the initial communication with a neighboring beacon service,\r\n* the following bootstrapping strategies apply:\r\n* In the changelog (irrelevant)\r\n\r\n\r\n\r\nCold start: \r\n* Interesting metrics for scalability and speed of path discovery are the time until all discoverable path segments have been discovered after a \"**cold start**\", and the time until new link is usable. \r\n* On a **cold start** of the network, path segments to each AS are discovered within a numbe\r\n* On a **cold start** of the network, full connectivity is obtained after a number of propagation steps\r\n\r\nPlus:\r\n*  In the PKI draft we talk about bootstrapping of trust\r\n* In the DP we talk about one-hop path types  \"The OneHopPath path type (PathType=2) is currently used to bootstrap\" \r\n\r\nBootstrap wins, i will change instances of cold start",
              "createdAt": "2025-02-25T09:30:28Z",
              "updatedAt": "2025-02-25T09:31:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dYGHW",
          "commit": {
            "abbreviatedOid": "e7e81b6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T09:40:39Z",
          "updatedAt": "2025-02-25T09:40:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Done, resolving",
              "createdAt": "2025-02-25T09:40:39Z",
              "updatedAt": "2025-02-25T09:40:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dZT_x",
          "commit": {
            "abbreviatedOid": "f5c64ab"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T11:12:10Z",
          "updatedAt": "2025-02-25T11:12:10Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "@jiceatscion do you think this point is relevant to bootstrapping? I don't feel it is that much, so I think it could be removed:\r\n```suggestion\r\n```",
              "createdAt": "2025-02-25T11:12:10Z",
              "updatedAt": "2025-02-25T11:12:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dZUf7",
          "commit": {
            "abbreviatedOid": "f5c64ab"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T11:13:02Z",
          "updatedAt": "2025-02-25T11:13:03Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "@jiceatscion how are certificates requested? Right now we reference the PKI draft, but I could not find where requesting certs is described. Could we add a better and more precise reference?\r\n\r\nI tried to search in the CP and PKI, and in many places it says that the relaying party can request certificates, but then I did not find any spec of such request.. Should it be somewhere in the gRPC API? I could not find it",
              "createdAt": "2025-02-25T11:13:02Z",
              "updatedAt": "2025-02-25T11:21:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dZaKa",
          "commit": {
            "abbreviatedOid": "f5c64ab"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T11:23:25Z",
          "updatedAt": "2025-02-25T11:23:25Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I guess this might be what I am referring to: https://docs.scion.org/en/latest/cryptography/interactions.html",
              "createdAt": "2025-02-25T11:23:25Z",
              "updatedAt": "2025-02-25T11:23:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dcW2e",
          "commit": {
            "abbreviatedOid": "f5c64ab"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:12:31Z",
          "updatedAt": "2025-02-25T15:12:32Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Far as I know, what you want is here: https://github.com/scionproto/scion/blob/abd39afe0a83199aca5ad59d6cc4cc383c89d4cf/proto/control_plane/v1/cppki.proto#L55\r\nI do not know if we described the full pki rpc API anywhere. I wasn't much involved in the cppki draft.\r\n",
              "createdAt": "2025-02-25T15:12:31Z",
              "updatedAt": "2025-02-25T15:12:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dcX4e",
          "commit": {
            "abbreviatedOid": "f5c64ab"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:13:54Z",
          "updatedAt": "2025-02-25T15:13:54Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Indeed, https://docs.scion.org/en/latest/cryptography/interactions.html#messages seems to be as much doc as we have.\r\n",
              "createdAt": "2025-02-25T15:13:54Z",
              "updatedAt": "2025-02-25T15:13:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dc7AC",
          "commit": {
            "abbreviatedOid": "f5c64ab"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:53:56Z",
          "updatedAt": "2025-02-25T15:53:56Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "https://github.com/scionassociation/scion-cp_I-D/issues/96 ",
              "createdAt": "2025-02-25T15:53:56Z",
              "updatedAt": "2025-02-25T15:53:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dc8uu",
          "commit": {
            "abbreviatedOid": "f2bd5e8"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T15:55:24Z",
          "updatedAt": "2025-02-25T15:55:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6dlCBQ",
          "commit": {
            "abbreviatedOid": "f2bd5e8"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-26T09:18:56Z",
          "updatedAt": "2025-02-26T09:18:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOJx2-rs6GKnaC",
      "title": "Intro wording",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/81",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-24T12:33:33Z",
      "updatedAt": "2024-12-24T12:34:10Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1e63d9984d5ca94f84c4a134e20cb7b4dc8bd0cf",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "this-is-not-a-standard",
      "headRefOid": "44d3c69e33205f52228f4c3a0f897e09780dc0b8",
      "closedAt": "2024-12-24T12:34:10Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 82,
      "id": "PR_kwDOJx2-rs6GKoBf",
      "title": "update intro wording",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/82",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-24T12:36:12Z",
      "updatedAt": "2024-12-24T12:36:43Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1e63d9984d5ca94f84c4a134e20cb7b4dc8bd0cf",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "intro-nic",
      "headRefOid": "3fa3ea2e90acf5c2feaadcb222b821050da42376",
      "closedAt": "2024-12-24T12:36:40Z",
      "mergedAt": "2024-12-24T12:36:40Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "e081b945f998fbec64cdf255f6728007473c7a5d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 84,
      "id": "PR_kwDOJx2-rs6H2Kxd",
      "title": "This is not a standard",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/84",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #83 ",
      "createdAt": "2025-01-15T12:48:32Z",
      "updatedAt": "2025-03-01T12:17:19Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "e081b945f998fbec64cdf255f6728007473c7a5d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "this-is-not-a-standard",
      "headRefOid": "2bcfb3210392ead72d8820908cbce583c99e0de2",
      "closedAt": "2025-02-04T09:43:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "How do you feel about the abstract? I'm not entirely fond of the current text, perhaps it could be shortened.. something like: \r\n\r\n> This document describes the Control Plane of the path-aware, inter-domain network architecture SCION (Scalability, Control, and Isolation On Next-generation networks). One of the basic characteristics of SCION is that it gives path control to SCION-capable endpoints that can choose between multiple path options, enabling the optimization of network paths. \r\nThe Control Plane is responsible for securely discovering these paths and making them available to the endpoints. This document elucidates the mechanisms of path exploration through beaconing, path registration, and lookup, and introduces SCION's routing concepts, providing a comprehensive understanding of the control plane's role in establishing and managing path segments, that are used by the data plane for forwarding.\r\n\r\n",
          "createdAt": "2025-01-18T21:45:29Z",
          "updatedAt": "2025-01-18T21:50:16Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "New abstract should mention: \r\n* Key function (secure path aware routing)\r\n* Relation to other components (paths are used for forwarding by data plane)",
          "createdAt": "2025-01-21T16:09:56Z",
          "updatedAt": "2025-01-21T16:09:56Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Duplicate of #85 ",
          "createdAt": "2025-02-04T09:43:17Z",
          "updatedAt": "2025-02-04T09:43:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 85,
      "id": "PR_kwDOJx2-rs6I-vSM",
      "title": "Revised abstract",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/85",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-01-25T13:28:31Z",
      "updatedAt": "2025-02-04T12:27:58Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "e081b945f998fbec64cdf255f6728007473c7a5d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "revised_abstract",
      "headRefOid": "d5c6ed1e4362ba329977fac0f18c96e157b29238",
      "closedAt": "2025-02-04T12:27:58Z",
      "mergedAt": "2025-02-04T12:27:58Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "bbbf1dd7b429dce911f5aa85c55298b1e1141f42"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6ag0tn",
          "commit": {
            "abbreviatedOid": "7b12bde"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "@knmeynell What do you think about this version? I removed the sentence about path policies as we don't really describe them",
          "createdAt": "2025-02-04T09:53:23Z",
          "updatedAt": "2025-02-04T09:54:09Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nThe SCION Control Plane creates and securely disseminates path segments between SCION Autonomous Systems (AS) which can then be combined into forwarding paths to transmit packets in the data plane. This document describes mechanisms of path exploration through beaconing and path registration. In addition, it describes how  Endpoints construct end-to-end paths from a set of possible path segments through a path lookup process.\r\n```",
              "createdAt": "2025-02-04T09:53:23Z",
              "updatedAt": "2025-02-04T09:53:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 86,
      "id": "PR_kwDOJx2-rs6JxHyy",
      "title": "Update scripts",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/86",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-02T18:22:00Z",
      "updatedAt": "2025-02-02T18:23:40Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "e081b945f998fbec64cdf255f6728007473c7a5d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "update",
      "headRefOid": "2bcfb3210392ead72d8820908cbce583c99e0de2",
      "closedAt": "2025-02-02T18:23:37Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 87,
      "id": "PR_kwDOJx2-rs6J9Eez",
      "title": "Update actions",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/87",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-04T08:27:53Z",
      "updatedAt": "2025-02-04T08:29:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "e081b945f998fbec64cdf255f6728007473c7a5d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "update-actions",
      "headRefOid": "59800e59a05da0a7febfe4c0a1c1b7bd67cdcd66",
      "closedAt": "2025-02-04T08:29:52Z",
      "mergedAt": "2025-02-04T08:29:52Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "671bab3389dbe9c8ac68d6c383f57dcf6044dcb2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 91,
      "id": "PR_kwDOJx2-rs6KP5x7",
      "title": "Small clarifications: at least one core AS, unique interface IDs",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/91",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses some points in #89 ",
      "createdAt": "2025-02-06T09:21:21Z",
      "updatedAt": "2025-02-21T12:33:33Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "Security-Updates",
      "baseRefOid": "c8649cf353f04af730725dfb7e5d1ae6eb536201",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "revised_abstract",
      "headRefOid": "c758041d7179607dcc9d74ee122bc71cd242727b",
      "closedAt": "2025-02-21T12:33:31Z",
      "mergedAt": "2025-02-21T12:33:31Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "55e13b456a17daf5cd4cf796b74f88b36025dc6c"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "How does this relate to #83 ? ",
          "createdAt": "2025-02-18T09:22:21Z",
          "updatedAt": "2025-02-18T09:22:21Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 92,
      "id": "PR_kwDOJx2-rs6KQBjR",
      "title": "Security considerations: clarify assumptions and security properties",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/92",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #89 \r\nDraft [diff to main](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/Security-Updates/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-02-06T09:37:15Z",
      "updatedAt": "2025-03-01T12:17:21Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d0182d28fb0e84c56d43aaa021d29a77907b9e0d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Security-Updates",
      "headRefOid": "e3632637246a42b76482ff30c9ed453eb4323dc3",
      "closedAt": "2025-03-01T12:10:38Z",
      "mergedAt": "2025-03-01T12:10:38Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "1d410d9eb6c262126d41ca1fd60c8c4346d4ad83"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6c88M7",
          "commit": {
            "abbreviatedOid": "1ce235a"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I did some rewording, and I'd like to hear back about loop avoidance and on general feedback from @dgalan7 before merging. ",
          "createdAt": "2025-02-21T14:33:54Z",
          "updatedAt": "2025-02-21T14:58:23Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "To be discussed with @dgalan7 (in email thread). I don't think we need this assumption",
              "createdAt": "2025-02-21T14:33:54Z",
              "updatedAt": "2025-02-21T14:58:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6c9hQy",
          "commit": {
            "abbreviatedOid": "0173f75"
          },
          "author": "dgalan7",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T15:18:00Z",
          "updatedAt": "2025-02-21T15:18:01Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "What a coincidence, I just received this comment's notification as I sent you an email. The email explains why this assumption isn't necessary for loop avoidance - rather, it ensures connectivity by allowing each AS to find a progressively higher-tier ASes until reaching tier 1. We can continue this discussion here or by email.",
              "createdAt": "2025-02-21T15:18:01Z",
              "updatedAt": "2025-02-21T15:18:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6c-L4h",
          "commit": {
            "abbreviatedOid": "0173f75"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T16:08:27Z",
          "updatedAt": "2025-02-21T16:08:28Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Absolutely a coincidence, I was writing you an email about this at the very same time, but you were faster. Thank you, your email clarified this. I'll leave the text there (albeit a bit corrected):\r\n\r\n> 3. Parent-Child links form a unidirectional hierarchical topology without cyclic relationships.\r\n",
              "createdAt": "2025-02-21T16:08:28Z",
              "updatedAt": "2025-02-21T16:10:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6c-0VL",
          "commit": {
            "abbreviatedOid": "0173f75"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T17:01:23Z",
          "updatedAt": "2025-02-21T17:01:23Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I'm still not convinced on this, I will chime in the email thread ",
              "createdAt": "2025-02-21T17:01:23Z",
              "updatedAt": "2025-02-21T17:01:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6c_sts",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T18:43:35Z",
          "updatedAt": "2025-02-21T18:43:35Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "We need to review this assumption. See @tzaeschke 's [comment](https://github.com/scionassociation/scion-cp_I-D/issues/46#issuecomment-2634412040) in another issue ",
              "createdAt": "2025-02-21T18:43:35Z",
              "updatedAt": "2025-02-21T18:43:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6c_tf4",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T18:44:55Z",
          "updatedAt": "2025-02-21T18:44:56Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Maybe like this: \r\n```suggestion\r\n2. ISDs are not partitioned, so that each AS can reach every other AS within its ISD.\r\n```",
              "createdAt": "2025-02-21T18:44:56Z",
              "updatedAt": "2025-02-21T18:44:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dL0KK",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T13:36:29Z",
          "updatedAt": "2025-02-24T13:50:14Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "kinds _of_ threats",
              "createdAt": "2025-02-24T13:36:29Z",
              "updatedAt": "2025-02-24T13:50:14Z"
            },
            {
              "originalPosition": 70,
              "body": "I am not sure this is true. PCB forwarding is subject to strict deterministic constraints/limits. I think there are definitely valid _potential_ segments that will never be actualized...? \r\n\r\nAlso, I find the terminology slightly confusing. Usually a \"path\" is the result of stitching up to 3 segments together. Here, it seems that a \"path\" is something more abstract, i.e. the precursor of one or more segments....?",
              "createdAt": "2025-02-24T13:44:11Z",
              "updatedAt": "2025-02-24T13:50:14Z"
            },
            {
              "originalPosition": 67,
              "body": "I think the sentence is a bit confusing/unclear to me.\r\nI assume there is a split is as follows?\r\n\r\n```\r\nFor every honest segment registered in any AS:\r\n  - its sequence of AS entries corresponds to a continuous path in the network of inter-domain links\r\n  - the inter-domain network topology remains unchanged since the segment was first generated.\r\n```\r\nMaybe insert a comma or semicolon after \"inter-domain links\"?",
              "createdAt": "2025-02-24T13:47:41Z",
              "updatedAt": "2025-02-24T13:50:14Z"
            },
            {
              "originalPosition": 80,
              "body": "`ETH Zurich _and_ _the_ SCION Association`?",
              "createdAt": "2025-02-24T13:48:26Z",
              "updatedAt": "2025-02-24T13:50:14Z"
            },
            {
              "originalPosition": 58,
              "body": "Just out of curiosity, so the plan is to disallow partitioned ISDs?",
              "createdAt": "2025-02-24T13:49:34Z",
              "updatedAt": "2025-02-24T13:50:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dXhYZ",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T09:02:53Z",
          "updatedAt": "2025-02-25T09:02:53Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "No, these are assumptions that @dgalan7 suggested, as they use them within their formal model",
              "createdAt": "2025-02-25T09:02:53Z",
              "updatedAt": "2025-02-25T09:02:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dXoGg",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T09:12:13Z",
          "updatedAt": "2025-02-25T09:12:14Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "> I am not sure this is true. PCB forwarding is subject to strict deterministic constraints/limits. I think there are definitely valid _potential_ segments that will never be actualized...?\r\n\r\nWhich property are you referring to? Path Discoverability?  If so, do you mean that some paths may never be discovered (e.g. due to limits in the number of propagated PCBs?  I think the keyword here is _where all traversed ASes permit forwarding _\r\n\r\n> Also, I find the terminology slightly confusing. Usually a \"path\" is the result of stitching up to 3 segments together. Here, it seems that a \"path\" is something more abstract, i.e. the precursor of one or more segments....? \r\n\r\nI updated wording to follow the terminology in the draft (\"path segment\", \"forwarding path\"). Is it better?\r\n\r\n",
              "createdAt": "2025-02-25T09:12:13Z",
              "updatedAt": "2025-02-25T09:18:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dXxfA",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T09:22:38Z",
          "updatedAt": "2025-02-25T09:22:39Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Adopted your suggestion",
              "createdAt": "2025-02-25T09:22:39Z",
              "updatedAt": "2025-02-25T09:22:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dYOxP",
          "commit": {
            "abbreviatedOid": "fc60e17"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T09:51:10Z",
          "updatedAt": "2025-02-25T09:51:10Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Apologies if I don't quite understand. If the assumptions do not match the actual specified system, why are we discussing them in the RFC?\r\n- Are they indicative of future changes to the spec?\r\n- Are they recommendations for users? E.g. \"if you want a certain security property, do not partition your ISD\"?\r\n\r\nIt may be worth clarifying this to any readers, explicitly stating that the assumptions do not apply to the system (unless you put additional restrictions on the system such as not partitioning your ISD). Otherwise readers may get really confused...? \r\n\r\nAlso, is it a valid attack vector if someone somehow moves their AS outside of the ISD, effectively creating a partition?\r\n\r\nAgain, apologies if I miss the point here...",
              "createdAt": "2025-02-25T09:51:10Z",
              "updatedAt": "2025-02-25T09:51:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dY3kB",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T10:30:30Z",
          "updatedAt": "2025-02-25T10:30:30Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Yes, I tried to attach the comment to \"path discoverability\" apparently that didn't work.\r\n>  I think the keyword here is _where all traversed ASes permit forwarding _\r\n\r\nThe problem is that ASes forward only 5 segments per round. Yes, they may be multiple rounds, but at some point the segments expire. Once segments expire, they should forward them again (assuming they are superior to other segments which may have not been forwarded yet). With an expiration time of, say, 1 hour and forwarding every 60 seconds, we get a maximum of 60*5 = 300 segments. If we have more than 300 segments, then we will never forward all of them. \r\n\r\nIf we permitted forwarding _all_ segments, that may overload the network (the number of paths growths exponentially). So we cannot physically forward all segments because that would be an attack in itself.\r\n\r\nIf \"permit\" is more liberal here then previously specified, maybe rephrase to \"where all traversed ASes permit _unlimited_ forwarding\"?\r\nOtherwise I think a reader would interpreted \"permit\" as specified in the section \"Selection of PCBs to Propagate\".\r\nAgain, similar to the point I made earlier, I am not sure why we list assumptions here that, as I understand, do not apply to the specified system. It may help to have an more explicit statement that explains that some assumptions do not apply and why we list them anyway...?\r\nI feel I am missing something important here.\r\n\r\n> I updated wording to follow the terminology in the draft (\"path segment\", \"forwarding path\"). Is it better?\r\n\r\nThanks, yes :)",
              "createdAt": "2025-02-25T10:30:30Z",
              "updatedAt": "2025-02-25T10:30:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dZqsq",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T11:48:34Z",
          "updatedAt": "2025-02-25T11:48:34Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Sorry, I just realized that this is a \"property\" not an \"assumption\". I think my argument still holds though.",
              "createdAt": "2025-02-25T11:48:34Z",
              "updatedAt": "2025-02-25T11:48:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dZseu",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T11:50:49Z",
          "updatedAt": "2025-02-25T11:50:49Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "I just talked to the team here, and apparently consensus is that ISD should indeed be disallowed.\r\nIf that is the case, then the assumption would be correct, but the spec may need updating, I don't think it says anywhere that ISD partitions are not allowed?",
              "createdAt": "2025-02-25T11:50:49Z",
              "updatedAt": "2025-02-25T11:50:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6db0Et",
          "commit": {
            "abbreviatedOid": "0173f75"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T14:33:45Z",
          "updatedAt": "2025-02-25T14:33:45Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "@dgalan7 let me know what you think about what I wrote in the email thread",
              "createdAt": "2025-02-25T14:33:45Z",
              "updatedAt": "2025-02-25T14:33:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dcrrV",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:37:30Z",
          "updatedAt": "2025-02-25T15:37:31Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "> Apologies if I don't quite understand. If the assumptions do not match the actual specified system, why are we discussing them in the RFC?\r\n\r\n Because, based on the review we received by the formal methods group, they clearly recommend clarify assumptions and security properties, I forwarded you what we received. \r\n \r\n How about we reword the assumptions section in general?  We now have: \r\n ```\r\nThe following assumptions relate to these security considerations. It is assumed that:\r\n\r\n1. Every ISD contains at least one core AS.\r\n2. ISDs are not internally partitioned, so that each AS can reach every other AS within its ISD.\r\n3. Parent-Child links form a unidirectional hierarchical topology without cyclic relationships.\r\n4. An AS is described as 'honest' if its private keys are unknown to the attacker and it uses a unique interface identifier for each link. An honest path is one that only traverses honest ASes. A honest segment is the one created by an honest AS.\r\n```\r\n\r\nI think for these assumptions: \r\n\r\n1. We don't need it as we already say in the draft that an ISD MUST contain a core AS. \r\n2. We could reword it, saying that for the security properties to hold, an ISD SHOULD not be internally partitioned. \r\n3. I don't think we need this one. The beaconing algorithm stops re-propagating beacons if there is a loop, handling this and making the topology acyclic. Therefore, every AS then finds its way to the core through the acyclic graph.  I tried hard to think of an example where a loop would isolate an AS, and I couldn\u2019t. (Unless I\u2019m missing something)\r\n4. THis is not really an assumption, rather a definition of how we sue \"honest\"\r\n\r\nBased on my thought above, we could rewrite the assumption paragraph like this: \r\n\r\n> For the following security properties to hold, ISDs should not be internally partitioned, so that each AS can reach every other AS within its ISD. In addition,  an AS is described as 'honest' if its private keys are unknown to the attacker and if it uses a unique interface identifier for each link. An honest path is one that only traverses honest ASes. A honest segment is the one created by an honest AS.\r\n\r\n@tzaeschke What do you think? THis way we are also not too prescriptive about wether an ISD should be partitioned or not.\r\n\r\n \r\n ",
              "createdAt": "2025-02-25T15:37:30Z",
              "updatedAt": "2025-02-25T15:37:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dc2iO",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:50:19Z",
          "updatedAt": "2025-02-25T15:50:19Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "> If we permitted forwarding all segments, that may overload the network (the number of paths growths exponentially). So we cannot physically forward all segments because that would be an attack in itself.\r\n\r\n@tzaeschke you're right, if the number of beacons is limited as we recommend int the draft, I think there might be edge cases where Discoverability is not guaranteed. \r\n\r\nI think we have two options: \r\n* as you suggest, mention \"where all traversed ASes permit unlimited forwarding\"\r\n* We remove the property\r\n\r\n@dgalan7 what do you think?  How do you model this?",
              "createdAt": "2025-02-25T15:50:19Z",
              "updatedAt": "2025-02-25T15:50:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dlUyJ",
          "commit": {
            "abbreviatedOid": "fc60e17"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T09:41:01Z",
          "updatedAt": "2025-02-26T09:41:02Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Yes, I think that sounds good.\r\nI have one more nitpick though: I assume for the security properties to hold, ISDs **must not** (or even MUST NOT) be internally partitioned? Usually assumptions either must hold or they don't matter?\r\nMaybe @dgalan7 can comment on this?",
              "createdAt": "2025-02-26T09:41:01Z",
              "updatedAt": "2025-02-26T09:41:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dmuE1",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "dgalan7",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T11:40:42Z",
          "updatedAt": "2025-02-26T11:40:42Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "From my email:\r\n\r\n> Some time ago we had a technical discussion with Adrian Perrig, and we agreed that real SCION deployments would probably want to disallow partitioned ISDs altogether, regardless of our model and properties. We have noted this assumption to remind you in case it is missing. If however the consensus is that partitioned ISDs are to be allowed in the real world, it looks sensible to choose a \"should not\" (or perhaps even a \"SHOULD NOT\") instead and explicitly link it to the properties, as you suggest. Specifically, proving the Connectivity property needs this assumption.",
              "createdAt": "2025-02-26T11:40:42Z",
              "updatedAt": "2025-02-26T11:40:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dmvzi",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "dgalan7",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T11:43:18Z",
          "updatedAt": "2025-02-26T11:43:18Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "From my email:\r\n\r\n> We are aware of the limits, including the quantity limit in beacon stores, the quantity limit on selection sizes (best PCB set size), and the time limits due to fixed propagation/registration periods. So far, none of these limits are present in our model, and as Tilmann (@tzaeschke) notes, the properties would hold when considering an unlimited context with no limits. We plan to model limits as future work, especially since we agree with Adrian Perrig that they can become attack vectors. For this Internet-Draft, I guess the best that can be done is to either fix specific numbers as limit recommendations\u00a0(like you are already doing) or to abstractly say that limits should not be unreasonably strict.",
              "createdAt": "2025-02-26T11:43:18Z",
              "updatedAt": "2025-02-26T11:43:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6doa4O",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:03:17Z",
          "updatedAt": "2025-02-26T14:03:17Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "@dgalan7 Great, I updated the text to use SHOULD NOT.\r\n\r\n> I have one more nitpick though: I assume for the security properties to hold, ISDs must not (or even MUST NOT) be internally partitioned? Usually assumptions either must hold or they don't matter?\r\n\r\n@tzaeschke to address your concern, how about we add some wording on the impact of partitioning? I'm thinking something like: \r\n\"For such properties to hold, ISDs SHOULD NOT be internally partitioned, so that each AS can reach every other AS within its ISD. **In case an AS gets partitioned from its ISD, if it is non-core, then it won't be able to reach other ASes within the ISD. If it is core, it may reach other ASes while transiting via other ISDs if permitted by its policies. In such case, transiting via another ISD may potentially allow external agents to influence the internal connectivity of an ISD.** \r\n\r\nThis was a quick and dirty wording, I'd need to think a bit more about it\r\n",
              "createdAt": "2025-02-26T14:03:17Z",
              "updatedAt": "2025-02-26T14:03:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6doma9",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:16:03Z",
          "updatedAt": "2025-02-26T14:16:04Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "> the properties would hold when considering an unlimited context with no limits.\r\n\r\nWe recommend limits (and have to, as the goal of this draft is to document existing deployments, where there are limits). Because of that, I think we should remove this property. Do you see other options? \r\n\r\n ",
              "createdAt": "2025-02-26T14:16:04Z",
              "updatedAt": "2025-02-26T14:16:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dqe9E",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "dgalan7",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T16:45:10Z",
          "updatedAt": "2025-02-26T16:45:11Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "The risk of removing this property is that there could be a mistake in the protocol's description that makes it impossible to discover some links under some situations (even when limits and policies would otherwise allow it), and there would be nothing in this I-D strongly stating that this is unintended behavior. Depending on how acceptable that is, it could be removed or rephrased to something that is weaker, but hints that in principle the protocol should not \"miss\" links with the limits or the policies explicitly causing this behavior.",
              "createdAt": "2025-02-26T16:45:11Z",
              "updatedAt": "2025-02-26T16:46:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d1GBD",
          "commit": {
            "abbreviatedOid": "0173f75"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:21:21Z",
          "updatedAt": "2025-02-27T14:21:21Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "As discussed in the email, \r\n> The assumption that business relationships form an acyclic graph is not needed. \r\n\r\nResolving as I removed assumption 3 already.",
              "createdAt": "2025-02-27T14:21:21Z",
              "updatedAt": "2025-02-27T14:21:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d1JD-",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:24:40Z",
          "updatedAt": "2025-02-27T14:24:40Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "From the email thread, from Daniel:\r\n\r\n> Furthermore, we suggest removing the previous assumption that every ISD should not be internally partitioned. We replace both with this:\r\n>\r\n> To guarantee that every ISD is internally connected (each AS reaches all other ISD members):\r\n1a. Cores of  the ISD can reach each other without leaving the ISD, i.e., for every pair of cores in an ISD there is a physical sequence of links that only traverses ISD members.\r\n> 2. For every non-core AS in the ISD, there is at least one sequence of customer-to-provider links going \"up\" to some core.\r\n>\r\n>To guarantee connectivity in all the world (all the considered network):\r\n1b. All cores can reach each other with some physical sequence of links.\r\n> 2. (Same as before)\r\n>\r\n> We consider several combinations that may appear in the Internet-Draft and their combinations:\r\n> - If (1a) and (2) are required, then every ISD will be internally connected, but it will not be possible for ISDs to be \"partitioned\" in the sense that some path escapes the ISD and then re-enters it later. We understand that this is too strict for current SCION.\r\n> - If all (1a), (1b) and (2) are required, then all the network will be connected, every ISD will be internally connected, and it will be forbidden to have paths escaping ISDs and re-entering them later. This is also too strict for current SCION.\r\n> - If (1b) and (2) are required, then all the network will be connected, but there will be no guarantee of internal connectivity for ISDs. Consequently, ISD members will be allowed to (and may need to) use paths that escape their ISD and re-enter it later. To the best of our understanding, this seems to be what aligns the best with the intended control plane behavior.\r\n> - Having (1a) or (1b) without (2) seems unlikely to provide any guarantees, so we do not advise these combinations.\r\n>\r\n> A possible way of framing this in the Internet-Draft could be to say something similar to \"To ensure that the properties hold in all the network, it should be the case that (1b) and (2)\". Optionally, \"Furthermore, to ensure the properties in the context of a single ISD, it should also be the case that (1a)\". As discussed in the PRs, this is possibly best to be left as recommendations that informatively guide concerned stakeholders into voluntary steps that lead to stronger notions of correctness and security.\"\r\n",
              "createdAt": "2025-02-27T14:24:40Z",
              "updatedAt": "2025-02-27T14:24:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d19O4",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T15:22:08Z",
          "updatedAt": "2025-02-27T15:22:08Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "I added this wording, based on what @dgalan7 suggested: \r\n\r\n> To ensure that the properties hold across the overall SCION network, all core ASes should be able to reach each other with some sequence of core links, and all non-core ASes should have at least one path up to a core AS. Furthermore, to ensure that the properties hold within a single ISD, all cores ASes of the ISD should be able to reach each other without leaving the ISD, i.e., for every pair of cores in an ISD there is a sequence of SCION links that only traverses ISD members.\r\nA core AS may reach other core ASes in the same ISD via other ISDs. This may be permitted, depending on the ISD's policies.  \r\n\r\n@dgalan7 @tzaeschke what do you think? I hope we are converging :) ",
              "createdAt": "2025-02-27T15:22:08Z",
              "updatedAt": "2025-02-27T15:22:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d3mSF",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T17:44:44Z",
          "updatedAt": "2025-02-27T17:44:44Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "> The risk of removing this property is that there could be a mistake in the protocol's description that makes it impossible to discover some links under some situations \r\n\r\nin the draft we already recommend limits in section \"2.3.1.1.  Storing and Selecting Candidate PCBs\u201d.  I think the best approach is to not have this property in the security considerations, and rather add some wording on the tradeoffs in 2.3.1.1, when we talk about PCB set size.\r\n",
              "createdAt": "2025-02-27T17:44:44Z",
              "updatedAt": "2025-02-27T17:44:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d4A_h",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T18:28:55Z",
          "updatedAt": "2025-02-27T18:28:55Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "@dgalan7 @tzaeschke how do you feel about the current wording I added: \r\n\r\n> Note that the PCBs set size should not be too low, in order to make sure that beaconing can discover a wide amount of paths. Values above are RECOMMENDED maxima which represent a tradeoff between scalability and amount of paths discovered. In current practice the intra-ISD set size is typically 20.",
              "createdAt": "2025-02-27T18:28:55Z",
              "updatedAt": "2025-02-27T18:28:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d93Xc",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T09:37:17Z",
          "updatedAt": "2025-02-28T09:37:18Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Propose\r\n_Note that the PCBs set size should not be too low in order to ensure that beaconing can discover a variety [you could alternative say 'large number'] of paths. The values above are the RECOMMENDED maximum which represent a tradeoff between scalability and the number of paths discovered. In current practice the intra-ISD set size is typically 20._\r\n",
              "createdAt": "2025-02-28T09:37:17Z",
              "updatedAt": "2025-02-28T09:37:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d-R6D",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T10:22:59Z",
          "updatedAt": "2025-02-28T10:22:59Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "LGTM",
              "createdAt": "2025-02-28T10:22:59Z",
              "updatedAt": "2025-02-28T10:22:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6eGGyK",
          "commit": {
            "abbreviatedOid": "5021865"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-01T12:10:02Z",
          "updatedAt": "2025-03-01T12:10:02Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I will now merge, as we are approaching the deadline. We can touch on this later on if needed.",
              "createdAt": "2025-03-01T12:10:02Z",
              "updatedAt": "2025-03-01T12:10:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6eGGyj",
          "commit": {
            "abbreviatedOid": "e363263"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-01T12:10:12Z",
          "updatedAt": "2025-03-01T12:10:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 93,
      "id": "PR_kwDOJx2-rs6Lk0cQ",
      "title": "Intro: precise wording (feedback D. Galan)",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/93",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #88 ",
      "createdAt": "2025-02-18T10:48:38Z",
      "updatedAt": "2025-02-21T15:42:09Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "bbbf1dd7b429dce911f5aa85c55298b1e1141f42",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Updated_Intro",
      "headRefOid": "ff659bb5187aa2b17be654c3bad06c43ae632712",
      "closedAt": "2025-02-21T15:42:03Z",
      "mergedAt": "2025-02-21T15:42:03Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "fa046df659041cd77013aa13290d3ef50a6308b5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6c9yWS",
          "commit": {
            "abbreviatedOid": "e9093b5"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-21T15:41:57Z",
          "updatedAt": "2025-02-21T15:41:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 94,
      "id": "PR_kwDOJx2-rs6MDD2W",
      "title": "Path selection policies - clarify text",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/94",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves \r\n- #16\r\n-  #72 \r\n\r\nDraft [diff](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/path_policies/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-02-21T13:10:36Z",
      "updatedAt": "2025-02-28T10:16:53Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "808112aa6ff111a491a4aa8616977d31a6106e0e",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "path_policies",
      "headRefOid": "6ca233a2bbcf92c84f6a375425debd67c765adfa",
      "closedAt": "2025-02-28T10:16:53Z",
      "mergedAt": "2025-02-28T10:16:52Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "f1bdf4a5190572de774aa82d3dc8fa2cd0cb3da6"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@knmeynell could you review the text? \r\n@jiceatscion could you also do that, especially the section on disjointness? \r\n\r\nI also started reorganizing this section: I removed the example picture and related text as I think they did not add much value. Opinions?  \r\n\r\nAlso, I think the section organization is a bit weird, right now we have: \r\n```\r\n 2.3.  Propagation of PCBs\r\n       2.3.1.  Selection of PCBs to Propagate\r\n           2.3.1.1.  Storing and Selecting Candidate PCBs\r\n           2.3.1.2.  Selection Policy Example\r\n       2.3.2.  Propagation of Selected PCBs\r\n           2.3.2.1.  Reception of PCBs\r\n           2.3.2.2.  Propagation of PCBs in Intra-ISD Beaconing\r\n           2.3.2.3.  Propagation of PCBs in Core Beaconing\r\n```\r\n\r\nI think: \r\n\r\n-  2.3.1.1.  Storing and Selecting Candidate PCBs and   2.3.1.2.  Selection Policy Example should be close\r\n- We could create a \"propagation interval and number of propagated beacons section\"\r\n- etc... \r\n\r\nBut this is quite some work that we may keep for a future version\r\n",
          "createdAt": "2025-02-27T22:22:43Z",
          "updatedAt": "2025-02-27T22:22:43Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @knmeynell could you review the text? @jiceatscion could you also do that, especially the section on disjointness?\r\n> \r\n> I also started reorganizing this section: I removed the example picture and related text as I think they did not add much value. Opinions?\r\n> \r\n> Also, I think the section organization is a bit weird, right now we have:\r\n> \r\n> ```\r\n>  2.3.  Propagation of PCBs\r\n>        2.3.1.  Selection of PCBs to Propagate\r\n>            2.3.1.1.  Storing and Selecting Candidate PCBs\r\n>            2.3.1.2.  Selection Policy Example\r\n>        2.3.2.  Propagation of Selected PCBs\r\n>            2.3.2.1.  Reception of PCBs\r\n>            2.3.2.2.  Propagation of PCBs in Intra-ISD Beaconing\r\n>            2.3.2.3.  Propagation of PCBs in Core Beaconing\r\n> ```\r\n> \r\n> I think:\r\n> \r\n> * 2.3.1.1.  Storing and Selecting Candidate PCBs and   2.3.1.2.  Selection Policy Example should be close\r\n> * We could create a \"propagation interval and number of propagated beacons section\"\r\n> * etc...\r\n> \r\n> But this is quite some work that we may keep for a future version\r\n\r\nI agree the organisation and titles look odd. I think this needs a closer look and we should try to fix before the next version because we might get picked up on it. I can take a look over the weekend...",
          "createdAt": "2025-02-28T06:46:04Z",
          "updatedAt": "2025-02-28T06:46:04Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Let's merge this one once @jiceatscion reviews. Then @knmeynell can do a general reorganization of the text in another PR (tracked in #100 )\r\n",
          "createdAt": "2025-02-28T08:13:59Z",
          "updatedAt": "2025-02-28T08:13:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6d-FaY",
          "commit": {
            "abbreviatedOid": "042f0a6"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T10:00:02Z",
          "updatedAt": "2025-02-28T10:00:03Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "The relative disjointness of two PCBs A and B may be calculated by assigning a disjointness score, calculated as the number of links in A that don't appear in B. The beacon that has the highest disjointness score and is not the shortest path SHOULD be selected. If this is not better than what has already been selected, then the beacon with the shortest path yet to be selected SHOULD be chosen instead. ",
              "createdAt": "2025-02-28T10:00:02Z",
              "updatedAt": "2025-02-28T10:04:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d-GY0",
          "commit": {
            "abbreviatedOid": "042f0a6"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T10:01:49Z",
          "updatedAt": "2025-02-28T10:01:49Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "Path disjointness: Paths can be either AS disjointed or link disjointed. AS disjointed paths have no common upstream/core AS for the current AS, whereas link disjoint paths do not share any AS-to-AS link. AS disjointness allows path diversity in the event that an AS becomes unresponsive, and link disjointness provides resilience in case of link failure. Both criteria can be used depending on the objective of the AS.",
              "createdAt": "2025-02-28T10:01:49Z",
              "updatedAt": "2025-02-28T10:01:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d-L88",
          "commit": {
            "abbreviatedOid": "042f0a6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T10:11:55Z",
          "updatedAt": "2025-02-28T10:11:55Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "```suggestion\r\n- Path disjointness: Paths can be either AS disjointed or link disjointed. AS disjointed paths have no common upstream/core AS for the current AS, whereas link disjoint paths do not share any AS-to-AS link. AS disjointness allows path diversity in the event that an AS becomes unresponsive, and link disjointness provides resilience in case of link failure. Both criteria can be used depending on the objective of the AS.\r\n```",
              "createdAt": "2025-02-28T10:11:55Z",
              "updatedAt": "2025-02-28T10:11:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d-MGp",
          "commit": {
            "abbreviatedOid": "042f0a6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T10:12:11Z",
          "updatedAt": "2025-02-28T10:12:11Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "```suggestion\r\nThe relative disjointness of two PCBs A and B may be calculated by assigning a disjointness score, calculated as the number of links in A that don't appear in B. The beacon that has the highest disjointness score and is not the shortest path SHOULD be selected. If this is not better than what has already been selected, then the beacon with the shortest path yet to be selected SHOULD be chosen instead.\r\n```",
              "createdAt": "2025-02-28T10:12:11Z",
              "updatedAt": "2025-02-28T10:12:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d-OMw",
          "commit": {
            "abbreviatedOid": "6ca233a"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T10:16:00Z",
          "updatedAt": "2025-02-28T10:16:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOJx2-rs6MEhFn",
      "title": "Terminology: PCB wording",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/95",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #88 (one last point)",
      "createdAt": "2025-02-21T16:00:36Z",
      "updatedAt": "2025-02-22T15:05:38Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "fa046df659041cd77013aa13290d3ef50a6308b5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Updated_Intro",
      "headRefOid": "5831b4e22c9350a7ce678d1f96c7814e3d3f2f1c",
      "closedAt": "2025-02-21T17:07:43Z",
      "mergedAt": "2025-02-21T17:07:43Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "f21011278eca93379b66067f33c7feb09b4b67f2"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> Is there something missing after 'step to obtain' under 'Path Resolution'?\r\n\r\nYou probably deleted \"path segments\" by mistake [here](https://github.com/scionassociation/scion-cp_I-D/commit/f4a63823e877c02329adfd905cbc852309c7d112), I added it back already in another PR.",
          "createdAt": "2025-02-21T17:07:21Z",
          "updatedAt": "2025-02-21T17:07:21Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6c-DzE",
          "commit": {
            "abbreviatedOid": "5831b4e"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Yes, this seems like a better wording.",
          "createdAt": "2025-02-21T16:03:05Z",
          "updatedAt": "2025-02-21T16:03:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6c-GM6",
          "commit": {
            "abbreviatedOid": "5831b4e"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-21T16:04:30Z",
          "updatedAt": "2025-02-21T16:04:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6c-IOb",
          "commit": {
            "abbreviatedOid": "5831b4e"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-21T16:05:47Z",
          "updatedAt": "2025-02-21T16:05:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6c-LFr",
          "commit": {
            "abbreviatedOid": "5831b4e"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Is there something missing after 'step to obtain' under 'Path Resolution'?",
          "createdAt": "2025-02-21T16:07:49Z",
          "updatedAt": "2025-02-21T16:07:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6c-Lyt",
          "commit": {
            "abbreviatedOid": "5831b4e"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-21T16:08:23Z",
          "updatedAt": "2025-02-21T16:08:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6dDNb7",
          "commit": {
            "abbreviatedOid": "5831b4e"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks good",
          "createdAt": "2025-02-22T15:05:06Z",
          "updatedAt": "2025-02-22T15:05:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 97,
      "id": "PR_kwDOJx2-rs6Mf9Zv",
      "title": "Explain why there is a next_isd_as in PCBs",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/97",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #6 \r\n\r\n(One two last forgotten point): \r\n- Explain why there is a \"next_isd_as\" field in the signed component of an AS body element (PCB). Refers to section 2.4.2 \"PCB > AS Entry Signed Component\".",
      "createdAt": "2025-02-25T16:20:33Z",
      "updatedAt": "2025-02-26T17:32:38Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f21011278eca93379b66067f33c7feb09b4b67f2",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "next_isd_as",
      "headRefOid": "3bbb7d74fe4febe65e603a6c2e280a68a5724278",
      "closedAt": "2025-02-26T17:32:34Z",
      "mergedAt": "2025-02-26T17:32:34Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "46e84294f813b168ff3d001a9609c95331568373"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6dqS_F",
          "commit": {
            "abbreviatedOid": "3bbb7d7"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Yup. Perfect. I had asked myself that question too. The section referenced does indeed answer the question clearly enough.",
          "createdAt": "2025-02-26T16:26:13Z",
          "updatedAt": "2025-02-26T16:26:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 98,
      "id": "PR_kwDOJx2-rs6Mgmpy",
      "title": "Clarify beaconing ckecks",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/98",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "FIxes #90\r\n\r\nI'm not decided on wether the check on registration and the first check at reception is necessary, as discussed in the issue. @jiceatscion can you help me sort it out? \r\n\r\nAnd @knmeynell can you check the language a bit? Some concepts were not easy to express, and I tried to simplify David's text ",
      "createdAt": "2025-02-25T17:32:21Z",
      "updatedAt": "2025-03-01T12:17:07Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f231559a1d660d08ed63408a78a5bbfd91022280",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "beaconing-checks",
      "headRefOid": "90766084fd45afe116e8d32f3d5fa1f85d1cbb70",
      "closedAt": "2025-03-01T10:09:31Z",
      "mergedAt": "2025-03-01T10:09:31Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "2899475e21455db03ff767c1b0f7a63d0c6f2ddf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6dqdf9",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-26T16:42:48Z",
          "updatedAt": "2025-02-26T16:42:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6dq989",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T17:29:06Z",
          "updatedAt": "2025-02-26T17:29:06Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "As being discussed in #90, @jiceatscion and I are not sure this check is necessary. As JC writes, \r\n> After all the whole segment's validity can be verified independently from how it was obtained, is it not? How does the fact that a segment is only served by its legitimate originator add any guarantee?\r\n\r\nSo this control does not add much. Maybe it could be changed to SHOULD?\r\n\r\n```suggestion\r\n3. The Control Service registers the newly created down segments with the Control Services of the core ASes that originated the corresponding PCBs. This is done by invoking the `SegmentRegistrationService.SegmentsRegistration` remote procedure call (RPC) in the Control Services of the relevant core ASes (see also [](#reg-proto)). The first ISD-AS entry of the path segment SHOULD be equal to the core ISD-AS where the segment is being registered. If not, the core AS SHOULD reject the segment.\r\n```",
              "createdAt": "2025-02-26T17:29:06Z",
              "updatedAt": "2025-02-27T18:04:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6drCxa",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T17:37:31Z",
          "updatedAt": "2025-02-26T17:37:31Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "\"If not, the core AS MUST reject the segment\"  -> \"If not, the core AS SHOULD reject the segment. For consistency?\r\n",
              "createdAt": "2025-02-26T17:37:31Z",
              "updatedAt": "2025-02-26T17:37:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6drC53",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T17:37:46Z",
          "updatedAt": "2025-02-26T17:37:46Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Other than that. LGTM.\r\n",
              "createdAt": "2025-02-26T17:37:46Z",
              "updatedAt": "2025-02-26T17:37:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6dwG3x",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T05:14:04Z",
          "updatedAt": "2025-02-27T05:14:05Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "The language looks pretty good to me and it's understandable.",
              "createdAt": "2025-02-27T05:14:04Z",
              "updatedAt": "2025-02-27T05:14:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d33YG",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T18:15:54Z",
          "updatedAt": "2025-02-27T18:15:54Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Thanks. I asked for an additional opinion on [slack](https://scionproto.slack.com/archives/C8ADA9CEP/p1740679917948679).",
              "createdAt": "2025-02-27T18:15:54Z",
              "updatedAt": "2025-02-27T18:15:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6eGAXo",
          "commit": {
            "abbreviatedOid": "edc275b"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-01T10:03:19Z",
          "updatedAt": "2025-03-01T10:03:19Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "No answer there, I guess I'll leave it as it is..",
              "createdAt": "2025-03-01T10:03:19Z",
              "updatedAt": "2025-03-01T10:03:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 99,
      "id": "PR_kwDOJx2-rs6Mqngs",
      "title": "api: add the trust metrials API",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/99",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes: #96 ",
      "createdAt": "2025-02-26T15:32:20Z",
      "updatedAt": "2025-02-27T22:34:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "46e84294f813b168ff3d001a9609c95331568373",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "pki_api",
      "headRefOid": "12ca4d91d1163a0c494e8c8da089a2cb4e2b2609",
      "closedAt": "2025-02-27T22:34:51Z",
      "mergedAt": "2025-02-27T22:34:51Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "808112aa6ff111a491a4aa8616977d31a6106e0e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6d6CSz",
          "commit": {
            "abbreviatedOid": "f6c071e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-27T22:33:49Z",
          "updatedAt": "2025-02-27T22:33:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 101,
      "id": "PR_kwDOJx2-rs6M7AIi",
      "title": "PCB policies: add wording by Daniel Galan",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/101",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #16 ",
      "createdAt": "2025-02-28T10:50:04Z",
      "updatedAt": "2025-03-01T12:17:12Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f1bdf4a5190572de774aa82d3dc8fa2cd0cb3da6",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "path_policies",
      "headRefOid": "688bbce0ddea659a3b3c2d1800cb6a61f2cd289f",
      "closedAt": "2025-02-28T13:31:37Z",
      "mergedAt": "2025-02-28T13:31:37Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "f231559a1d660d08ed63408a78a5bbfd91022280"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6d-iOW",
          "commit": {
            "abbreviatedOid": "171c220"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T10:53:47Z",
          "updatedAt": "2025-02-28T10:54:04Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "May be replace \"path[s]\" with \"segment[s]\"?\r\nOther than that, LGTM.",
              "createdAt": "2025-02-28T10:53:47Z",
              "updatedAt": "2025-02-28T10:54:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d_0QR",
          "commit": {
            "abbreviatedOid": "171c220"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:29:30Z",
          "updatedAt": "2025-02-28T13:29:30Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nA PCB Selection Policy can be expressed as a stateful filter of segments, i.e., a function which indicates whether to accept or deny a given path. This filter is stateful in that it can be updated each time its AS registers a new segment. Selection may be based on criteria such as:\r\n```",
              "createdAt": "2025-02-28T13:29:30Z",
              "updatedAt": "2025-02-28T13:29:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6d_1TK",
          "commit": {
            "abbreviatedOid": "688bbce"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T13:31:22Z",
          "updatedAt": "2025-02-28T13:31:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 102,
      "id": "PR_kwDOJx2-rs6NBtvf",
      "title": "Beaconing: reorganize paragraph 2.3",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/102",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #100 \r\nDraft [diff](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/beaconing-reorg/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-03-01T10:09:11Z",
      "updatedAt": "2025-03-03T15:52:50Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1d410d9eb6c262126d41ca1fd60c8c4346d4ad83",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "beaconing-reorg",
      "headRefOid": "f8884fdf297844c16a274deebab0e7c0da6e01c3",
      "closedAt": "2025-03-03T15:52:47Z",
      "mergedAt": "2025-03-03T15:52:47Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "e2034b1901abdb3104d286359dfc2b809ba89237"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I changed some paragraph names: \r\n```\r\n     2.3.  Propagation of PCBs \t\t\t\r\n       2.3.1.  Reception of PCBs\r\n       2.3.2.  Storing Candidate PCBs\r\n       2.3.3.  Selection of PCBs to Propagate --> PCB selection policies\r\n\t   + new section: Propagation interval and best PCBs set size\r\n       2.3.4.  Propagation of Selected PCBs\t\r\n   ```\r\n   \r\n   And I moved paragraph `To bootstrap the initial communication ...`. What do you think?",
          "createdAt": "2025-03-01T12:04:43Z",
          "updatedAt": "2025-03-01T12:05:57Z"
        },
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I changed some paragraph names:\r\n> \r\n> ```\r\n>      2.3.  Propagation of PCBs \t\t\t\r\n>        2.3.1.  Reception of PCBs\r\n>        2.3.2.  Storing Candidate PCBs\r\n>        2.3.3.  Selection of PCBs to Propagate --> PCB selection policies\r\n> \t   + new section: Propagation interval and best PCBs set size\r\n>        2.3.4.  Propagation of Selected PCBs\t\r\n> ```\r\n> \r\n> And I moved paragraph `To bootstrap the initial communication ...`. What do you think?\r\n\r\nLooks good to me. ",
          "createdAt": "2025-03-01T22:21:00Z",
          "updatedAt": "2025-03-01T22:21:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6eGBmB",
          "commit": {
            "abbreviatedOid": "464c822"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-01T10:29:56Z",
          "updatedAt": "2025-03-01T10:29:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDOJx2-rs6SEiSS",
      "title": "fix typo",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/106",
      "state": "MERGED",
      "author": "katyatitkova",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"one hop paths\" are called \"one-hop paths\" in the data plane draft and in the section 2.3.5 of this draft.",
      "createdAt": "2025-04-10T09:57:10Z",
      "updatedAt": "2025-04-11T09:09:13Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "603af9f3cda7a77ae0fdf95762b5d8b8cd02992c",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "katyatitkova-patch-1",
      "headRefOid": "3ef02f8115c265d1eaad75ab60afacebde2cf1ed",
      "closedAt": "2025-04-11T09:09:07Z",
      "mergedAt": "2025-04-11T09:09:07Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5b1c3fc677c83f3207637b66308ba91aa7e301ab"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thanks a lot for fixing! ",
          "createdAt": "2025-04-11T09:09:04Z",
          "updatedAt": "2025-04-11T09:09:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6kfUeU",
          "commit": {
            "abbreviatedOid": "3ef02f8"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-11T09:08:47Z",
          "updatedAt": "2025-04-11T09:08:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 108,
      "id": "PR_kwDOJx2-rs6YmBLa",
      "title": "New diagrams - overhaul",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/108",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #104 \r\nAddresses #114\r\nContributes to #113 on links and paths\r\n\r\n[Diff with last submission](https://author-tools.ietf.org/api/iddiff?doc_1=draft-dekater-scion-controlplane&url_2=https://scionassociation.github.io/scion-cp_I-D/New_Diagrams/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-06-02T10:25:52Z",
      "updatedAt": "2025-07-02T14:05:41Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "43795f51c05e4ad8972272c389f48b5afd735bf6",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "New_Diagrams",
      "headRefOid": "9cb829d26c5f020e49e9cf41e181610cb95a3cba",
      "closedAt": "2025-07-02T14:05:41Z",
      "mergedAt": "2025-07-02T14:05:41Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "b8a5fe3f99eda89c355854c92649c589355098fb"
      },
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addresses #104 and #114",
          "createdAt": "2025-06-24T20:45:17Z",
          "updatedAt": "2025-06-24T20:45:17Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@knmeynell  Should we use the same style in figure 1  for link types also in figures 2, 3, 4? \r\n\r\nIn figure 1, we have this for peering links: `< - - - >`\r\n<img width=\"562\" alt=\"Screenshot 2025-06-25 at 13 16 05\" src=\"https://github.com/user-attachments/assets/d8f0e743-e011-4bd2-8367-88f3b86a5ae2\" />\r\n\r\nBut then in figure 2, 3, 4, peering links between V-Y and Y-W are using `#- --#`\r\n<img width=\"737\" alt=\"Screenshot 2025-06-25 at 13 19 08\" src=\"https://github.com/user-attachments/assets/08027108-a08f-479a-9c69-9a867099cbda\" />\r\n\r\n ",
          "createdAt": "2025-06-25T11:19:27Z",
          "updatedAt": "2025-06-25T11:19:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6uqbBA",
          "commit": {
            "abbreviatedOid": "9ab1dd8"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks, I like how you reworked the PCB figures. Some pending/minor things: \r\n\r\n- Also in this ID I think some figures could go away without loosing much (e.g. some of the figures in 2.2)\r\n- There are still some improvements missing from  #104 \r\n- we could specify some figures are not bytes aligned (e.g. fig. 6). Also, should that figure be with all boxes of the same width?\r\n\r\n\r\nFigure 3: coud the AS be vertically centered?\r\n<img width=\"517\" alt=\"Screenshot 2025-06-16 at 00 42 43\" src=\"https://github.com/user-attachments/assets/08d09e8a-5b5d-4fd8-a928-8fb958657677\" />\r\n\r\nFigure 12, 13: \r\n<img width=\"591\" alt=\"Screenshot 2025-06-16 at 00 50 19\" src=\"https://github.com/user-attachments/assets/0c151533-b03d-4529-8779-eac9d7263f43\" />\r\n\r\nFigure 23: the line between AS B and E should be a straight line\r\n<img width=\"582\" alt=\"Screenshot 2025-06-16 at 00 51 53\" src=\"https://github.com/user-attachments/assets/8ea06a5a-c3b9-4e92-83b1-91bba6e01684\" />\r\n\r\nFigure 25:",
          "createdAt": "2025-06-15T22:46:29Z",
          "updatedAt": "2025-06-15T22:56:01Z",
          "comments": [
            {
              "originalPosition": 473,
              "body": "Missing caption.. But IMHO it could go away..",
              "createdAt": "2025-06-15T22:46:29Z",
              "updatedAt": "2025-06-15T22:56:01Z"
            },
            {
              "originalPosition": 1256,
              "body": "```suggestion\r\n   \u2502 \u2502 \u2502 reply (up,[A->B])           \u2502               \u2502               \u2502\r\n```",
              "createdAt": "2025-06-15T22:53:36Z",
              "updatedAt": "2025-06-15T22:56:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6u4PFl",
          "commit": {
            "abbreviatedOid": "9ab1dd8"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-17T02:43:47Z",
          "updatedAt": "2025-06-17T02:43:48Z",
          "comments": [
            {
              "originalPosition": 1256,
              "body": "Fixed typo",
              "createdAt": "2025-06-17T02:43:48Z",
              "updatedAt": "2025-06-17T02:43:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6wvTg9",
          "commit": {
            "abbreviatedOid": "81f4869"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-06-27T07:45:32Z",
          "updatedAt": "2025-06-27T13:28:41Z",
          "comments": [
            {
              "originalPosition": 1410,
              "body": "```suggestion\r\nSCION Data Plane use by the SCION Control Plane {#app-b}\r\n```\r\nThis change does not belong to this PR, I'd handle all in #109 ",
              "createdAt": "2025-06-27T07:45:32Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 17,
              "body": "This likely relates to a point in #113 ",
              "createdAt": "2025-06-27T07:50:15Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 22,
              "body": ">  a child AS MUST NOT carry transit traffic\r\n\r\nDoes it really make sense to use normative language here? This is a result of how the protocol works, not of using MUST NOT\r\n\r\n> which can be used as shortcut in an up-core-down path \r\n\r\nThis is not correct, a peering link can also be used as a shortcut in a up-down path (even if there is no core segment). We should find another wording",
              "createdAt": "2025-06-27T07:52:43Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nSCION paths are always \"valley free\" whereby a child AS does not carry transit traffic from a parent AS to another parent AS. These paths can contain at most one peering link which can be used as shortcut between two path segments containing two peer ASes.\r\n```",
              "createdAt": "2025-06-27T07:53:36Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 5,
              "body": "TODO: review how link is used in all drafts, and see if this proposal works:\r\n\r\n```suggestion\r\nSCION routers and endpoints connect to each other via links. A link refers to a physical or logical connection between two SCION nodes (e.g., router or endpoint). A SCION path between two endpoints traverses one or more links.\r\n```",
              "createdAt": "2025-06-27T08:17:23Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 22,
              "body": "> My point is that rfc2119 talks about using Normative language when the action is important for interoperability. ",
              "createdAt": "2025-06-27T08:23:48Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 431,
              "body": "I see you added `Timestamp` and  `AssocDataLen`. In the protobuf definition, there is also a metadata filed which seems missing. \r\n\r\n```\r\n1255      message Header {\r\n1256          SignatureAlgorithm signature_algorithm = 1;\r\n1257          bytes verification_key_id = 2;\r\n1258          // Optional\r\n1259          google.protobuf.Timestamp timestamp = 3;\r\n1260          // Optional\r\n1261          bytes metadata = 4;\r\n1262          int32 associated_data_length = 5;\r\n1263      }\r\n```",
              "createdAt": "2025-06-27T13:04:00Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 348,
              "body": "```suggestion\r\n### PCB Message Format {#pcb-compos}\r\n\r\nThis section introduces the PCB Message protobuf definitions. For convenience, messages are also graphically represented in figures that are not byte-aligned. \r\n```\r\nI think we should mention somewhere that figures are not byte aligned",
              "createdAt": "2025-06-27T13:14:58Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            },
            {
              "originalPosition": 846,
              "body": "In this figure, also use the same notation for peer and parent/child links",
              "createdAt": "2025-06-27T13:27:06Z",
              "updatedAt": "2025-06-27T13:28:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xJOXn",
          "commit": {
            "abbreviatedOid": "81f4869"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-30T16:51:54Z",
          "updatedAt": "2025-06-30T16:51:54Z",
          "comments": [
            {
              "originalPosition": 431,
              "body": " Now added",
              "createdAt": "2025-06-30T16:51:54Z",
              "updatedAt": "2025-06-30T16:51:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xJQ9d",
          "commit": {
            "abbreviatedOid": "81f4869"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-30T16:54:08Z",
          "updatedAt": "2025-06-30T16:54:08Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I think this is now addressed.",
              "createdAt": "2025-06-30T16:54:08Z",
              "updatedAt": "2025-06-30T16:54:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xjcwN",
          "commit": {
            "abbreviatedOid": "9cb829d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-02T11:56:28Z",
          "updatedAt": "2025-07-02T11:56:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 115,
      "id": "PR_kwDOJx2-rs6aUQGA",
      "title": "Terminology updates and ISD-AS tables move",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/115",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses some of \r\n- #113 (partially)\r\n- #112 \r\n- #120 (partially)",
      "createdAt": "2025-06-13T03:31:42Z",
      "updatedAt": "2025-06-27T16:20:23Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "5b1c3fc677c83f3207637b66308ba91aa7e301ab",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "review-fixes",
      "headRefOid": "319b27555af8f1fd183760d6db98eb4724029df7",
      "closedAt": "2025-06-27T16:19:11Z",
      "mergedAt": "2025-06-27T16:19:11Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "43795f51c05e4ad8972272c389f48b5afd735bf6"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "For the records, draft diff \r\n[Diff_ draft-dekater-scion-controlplane.txt - draft-dekater-scion-controlplane.txt.html.zip](https://github.com/user-attachments/files/20952168/Diff_.draft-dekater-scion-controlplane.txt.-.draft-dekater-scion-controlplane.txt.html.zip)\r\n",
          "createdAt": "2025-06-27T16:20:23Z",
          "updatedAt": "2025-06-27T16:20:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6w01Yi",
          "commit": {
            "abbreviatedOid": "80167a6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I think we can almost merge this one. @kevin can you just look at my two comments here:",
          "createdAt": "2025-06-27T13:41:57Z",
          "updatedAt": "2025-06-27T14:43:38Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Is there a reason for removing the PKI and DP draft references?",
              "createdAt": "2025-06-27T13:41:57Z",
              "updatedAt": "2025-06-27T14:43:38Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n- Leading zeros in each group are omitted (e.g., `0:0:1`)\r\n```",
              "createdAt": "2025-06-27T14:34:32Z",
              "updatedAt": "2025-06-27T14:43:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6w2mJ3",
          "commit": {
            "abbreviatedOid": "b4b41ee"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-27T16:04:22Z",
          "updatedAt": "2025-06-27T16:04:22Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "These drafts are also referred to in the paragraph that follows the component descriptions. The PKI and Data Plane have references where they're introduced, but the Control Plane does not even though it's not explicitly stated that this document describes the Control Plane until a later paragraph. \r\n\r\nI think it's more consistent to describe the components, state the draft being read is describing the Control Plane, but then provide the references to the other components. ",
              "createdAt": "2025-06-27T16:04:22Z",
              "updatedAt": "2025-06-27T16:05:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6w2vdJ",
          "commit": {
            "abbreviatedOid": "319b275"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-27T16:17:10Z",
          "updatedAt": "2025-06-27T16:17:10Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Ok right, the reference is also a few lines below. Let's leave it as you propose. Thhank you for explaining.",
              "createdAt": "2025-06-27T16:17:10Z",
              "updatedAt": "2025-06-27T16:17:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6w2wxk",
          "commit": {
            "abbreviatedOid": "319b275"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-27T16:18:50Z",
          "updatedAt": "2025-06-27T16:18:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "PR_kwDOJx2-rs6cvmxW",
      "title": "Updated SCION AS table",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/123",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "Prio 2"
      ],
      "body": "Added full address ranges and reserved space\r\n\r\nResolves #120 \r\nResolves #112 (mention AS number formatting MUST use decimal for lower ranges) \r\n\r\n[Diff with main](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/SCION_AS_Table/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-06-30T17:57:43Z",
      "updatedAt": "2025-07-04T11:06:56Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "b8a5fe3f99eda89c355854c92649c589355098fb",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "SCION_AS_Table",
      "headRefOid": "76d90e40668d9dad8c5f18051f61cf8e697750e1",
      "closedAt": "2025-07-04T11:06:51Z",
      "mergedAt": "2025-07-04T11:06:51Z",
      "mergedBy": "knmeynell",
      "mergeCommit": {
        "oid": "b2f88a5c26ee585ef0b09630a0835770fc40f802"
      },
      "comments": [
        {
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Except for my opinion about the decimal representation which I posted in the issue, LGTM.\r\n\r\nI agree use of MUST and MAY is somewhat contradictory. I've revised this a bit.",
          "createdAt": "2025-07-03T10:43:14Z",
          "updatedAt": "2025-07-03T10:43:14Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6xhIEZ",
          "commit": {
            "abbreviatedOid": "1720d7b"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "See comments",
          "createdAt": "2025-07-02T08:33:51Z",
          "updatedAt": "2025-07-02T08:42:48Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\n- Leading zeros in each group are omitted, with the exception that one zero MUST be notated if a group is entirely zeros (e.g., `0:0:1`). The `::` zero-compression feature of IPv6 MUST NOT be used.\r\n```",
              "createdAt": "2025-07-02T08:33:51Z",
              "updatedAt": "2025-07-02T08:42:48Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n| `ff00:0:0 - ff00:0:ffff`| 65536      | Reserved for documentation and sample code (analogous to {{RFC5398}}). |\r\n| `ff00:1:0 - ffa9:ffff:ffff`| ~281&nbsp;trillion | Reserved |\r\n| `ffaa:0:0 - ffaa:ff:ffff`| ~16.8&nbsp;million| Reserved for private use (analogous to {{RFC6996}}). These numbers can be used for testing/private deployments. |\r\n```\r\n\r\nI think you are missing one range here",
              "createdAt": "2025-07-02T08:36:47Z",
              "updatedAt": "2025-07-02T08:42:48Z"
            },
            {
              "originalPosition": 16,
              "body": "What is the difference between \"reserved for future use\" and Reserved (e.g. `ffff:ffff:ffff`)?\r\nShall we use \"unallocated\" instead of reserved? Because these spaces are actually unallocated, they are not truly reserved for anything.. ",
              "createdAt": "2025-07-02T08:42:38Z",
              "updatedAt": "2025-07-02T08:42:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xiSyB",
          "commit": {
            "abbreviatedOid": "1720d7b"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T10:07:25Z",
          "updatedAt": "2025-07-02T10:07:25Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "'Reserved for future use' was the terminology used in the ISD table. I've changed in both to 'Unallocated'.",
              "createdAt": "2025-07-02T10:07:25Z",
              "updatedAt": "2025-07-02T10:07:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xiYsc",
          "commit": {
            "abbreviatedOid": "1720d7b"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T10:16:03Z",
          "updatedAt": "2025-07-02T10:16:03Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I've added this.",
              "createdAt": "2025-07-02T10:16:03Z",
              "updatedAt": "2025-07-02T10:16:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xxu4E",
          "commit": {
            "abbreviatedOid": "66a5759"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Fine",
          "createdAt": "2025-07-03T10:18:18Z",
          "updatedAt": "2025-07-03T10:18:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6xx-NJ",
          "commit": {
            "abbreviatedOid": "e271f2f"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Except for my opinion about the decimal representation which I posted in the issue, LGTM.\r\n",
          "createdAt": "2025-07-03T10:39:16Z",
          "updatedAt": "2025-07-03T10:39:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6xyxgJ",
          "commit": {
            "abbreviatedOid": "c33dcbf"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T11:52:51Z",
          "updatedAt": "2025-07-03T11:56:00Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nThe text representation of SCION AS numbers is as follows:\r\n\r\n- SCION AS numbers in the lower 32-bit range MUST be represented as decimal notation when output by implementations. Implementations MAY accept AS numbers in the lower 32-bit range in hexadecimal notation too, but they should convert them to decimal notation (e.g., a program may accept AS number '0:1:f' and convert it to 65551).\r\n- SCION AS numbers in the higher 32-bit range MUST be represented using big-endian hexadecimal notation in 3 groups of 4, in the range `1:0:0` to `ffff:ffff:ffff`. Leading zeros in each group are omitted, with the exception that one zero MUST be notated if a group is entirely zeros (e.g., `1:0:1`). The `::` zero-compression feature of IPv6 MUST NOT be used.\r\n- A range of AS numbers can be shortened with a notation similar to the one used for CIDR IP ranges ({{RFC4632}}). In such case, hexadecimal notation MUST be used. For example, the range of the lowest 32-bit AS numbers (0-4294967295) can be represented as `0:0:0/16`.\r\n```",
              "createdAt": "2025-07-03T11:52:51Z",
              "updatedAt": "2025-07-03T11:56:00Z"
            },
            {
              "originalPosition": 60,
              "body": "@jiceatscion @knmeynell what do you think about this wording? \r\n- I removed the first MUST\r\n- I tried to use the woridng suggested by @jiceatscion ",
              "createdAt": "2025-07-03T11:55:55Z",
              "updatedAt": "2025-07-03T11:56:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xy8nA",
          "commit": {
            "abbreviatedOid": "c33dcbf"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T12:09:18Z",
          "updatedAt": "2025-07-03T12:09:18Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I still disagree with the following phrase:\r\n\"but they should convert them to decimal notation (e.g., a program may accept AS number '0:1:f' and convert it to 65551).\"\r\n\r\nThe problem I see with this is that it does not state at all what the conversion is for and when it may take place. Internally neither string representations are used. Any conversion that takes place is from string to internal (when parsing config or args from humans) and from internal to string (when printing out human readable information or generating config). So, conversions between the two string representations aren't relevant. We must state what is printed and what is parsed. That's it.\r\n",
              "createdAt": "2025-07-03T12:09:18Z",
              "updatedAt": "2025-07-03T12:09:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6xzDWx",
          "commit": {
            "abbreviatedOid": "c33dcbf"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-03T12:19:01Z",
          "updatedAt": "2025-07-03T12:19:01Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "> So, conversions between the two string representations aren't relevant. We must state what is printed and what is parsed. That's it.\r\n\r\n@jiceatscion how about this wording: \r\n> - SCION AS numbers in the lower 32-bit range MUST be printed as decimal by implementations. Implementations MAY parse AS numbers in the lower 32-bit range in hexadecimal notation too (e.g., a program may accept AS number '0:1:f' for AS 65551).",
              "createdAt": "2025-07-03T12:19:01Z",
              "updatedAt": "2025-07-03T12:19:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6x_F2t",
          "commit": {
            "abbreviatedOid": "c33dcbf"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T08:37:11Z",
          "updatedAt": "2025-07-04T08:37:12Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "LGTM",
              "createdAt": "2025-07-04T08:37:12Z",
              "updatedAt": "2025-07-04T08:37:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6yBKCo",
          "commit": {
            "abbreviatedOid": "c9a5878"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-04T10:55:00Z",
          "updatedAt": "2025-07-04T10:55:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "We should use the text representation according to rules above, so higher-range AS numbers in the documentation range MUST be printed in HEX. I replaced it again with `ff00:0:1`\r\n@knmeynell ",
              "createdAt": "2025-07-04T10:55:00Z",
              "updatedAt": "2025-07-04T10:55:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6yBQSb",
          "commit": {
            "abbreviatedOid": "76d90e4"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-04T11:01:00Z",
          "updatedAt": "2025-07-04T11:01:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 124,
      "id": "PR_kwDOJx2-rs6cvyEl",
      "title": "Reword \"unspecified\" interface ID",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/124",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #118\r\n\r\n<br class=\"Apple-interchange-newline\">[diff with main](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/Interface-ID/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-06-30T18:20:07Z",
      "updatedAt": "2025-07-07T13:36:32Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d4d48e7076664469e4dacef247381647c148d2b1",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Interface-ID",
      "headRefOid": "b6cb00c77eb08dec617ca20e84ef348c489d9a6c",
      "closedAt": "2025-07-07T13:36:32Z",
      "mergedAt": "2025-07-07T13:36:32Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "44b04529ed6149320b24da4596e609706307bc86"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6yc7-k",
          "commit": {
            "abbreviatedOid": "b6cb00c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-07T13:36:26Z",
          "updatedAt": "2025-07-07T13:36:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 126,
      "id": "PR_kwDOJx2-rs6dPY0i",
      "title": "nits - Alvaro's Feedback part 2 ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/126",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves \r\n-  #113 \r\nContinues work done in \r\n- https://github.com/scionassociation/scion-cp_I-D/pull/115 \r\n\r\n\r\n[Diff with main](https://author-tools.ietf.org/api/iddiff?url_1=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt&url_2=https://scionassociation.github.io/scion-cp_I-D/Alvaro-feedback/draft-dekater-scion-controlplane.txt)",
      "createdAt": "2025-07-03T10:12:51Z",
      "updatedAt": "2025-07-07T10:14:00Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "b2f88a5c26ee585ef0b09630a0835770fc40f802",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Alvaro-feedback",
      "headRefOid": "027bf0571199bdc6c61423eab0050dd3775222b4",
      "closedAt": "2025-07-07T10:14:00Z",
      "mergedAt": "2025-07-07T10:14:00Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "d4d48e7076664469e4dacef247381647c148d2b1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6xzevU",
          "commit": {
            "abbreviatedOid": "027bf05"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-03T12:55:34Z",
          "updatedAt": "2025-07-07T10:13:53Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nIn order to avoid excessive overhead on the path discovery system in bigger networks, an AS SHOULD only propagate up to a certain number of candidate PCBs with the highest probability of meeting the needs of the endpoints that will perform path construction, in accordance with {{#propagation-interval-size}}.\r\n```",
              "createdAt": "2025-07-03T12:55:34Z",
              "updatedAt": "2025-07-07T10:13:53Z"
            },
            {
              "originalPosition": 43,
              "body": "@knmeynell what do you think about my change? I think we should refer to the best PCB set size section",
              "createdAt": "2025-07-04T15:18:58Z",
              "updatedAt": "2025-07-07T10:13:53Z"
            },
            {
              "originalPosition": 43,
              "body": "Applied similar wording",
              "createdAt": "2025-07-07T09:38:48Z",
              "updatedAt": "2025-07-07T10:13:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 128,
      "id": "PR_kwDOJx2-rs6dyZuN",
      "title": "Changelog",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/128",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-07T15:55:17Z",
      "updatedAt": "2025-07-07T15:58:15Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "44b04529ed6149320b24da4596e609706307bc86",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Interface-ID",
      "headRefOid": "56c05484806dd895c8f60e7c292d0c421c9a700c",
      "closedAt": "2025-07-07T15:58:10Z",
      "mergedAt": "2025-07-07T15:58:10Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "d92a2e3b389896014ef9c927cf2df3350aca2863"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 129,
      "id": "PR_kwDOJx2-rs6dyyxd",
      "title": "Update actions",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/129",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-07T16:33:21Z",
      "updatedAt": "2025-07-07T16:33:41Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d92a2e3b389896014ef9c927cf2df3350aca2863",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "fix-svg-submission",
      "headRefOid": "336aa2bc275d66a29a07c7e36c648cf1b39cfb05",
      "closedAt": "2025-07-07T16:33:41Z",
      "mergedAt": "2025-07-07T16:33:41Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "a1ea042e524931fae1096d84f418ddafc8f539fe"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 130,
      "id": "PR_kwDOJx2-rs6dzfhI",
      "title": "Remove external SVGs and use aasvg for SCMP diagrams",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/130",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-07T18:01:41Z",
      "updatedAt": "2025-07-07T18:10:05Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a1ea042e524931fae1096d84f418ddafc8f539fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "fix-svg-submission",
      "headRefOid": "1c849708cba88d7ae648ca85efbda23f2030f453",
      "closedAt": "2025-07-07T18:10:05Z",
      "mergedAt": "2025-07-07T18:10:05Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "a51ae4adc7338c6b7fd1187bebea0d240a509d2b"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "LGTM, TXT version is the same\r\n\r\n<img width=\"1430\" alt=\"Screenshot 2025-07-07 at 20 02 22\" src=\"https://github.com/user-attachments/assets/733fae9c-e6b3-4118-9133-26925ceea007\" />\r\n\r\nAnd aasvg SCMP does not look too bad..\r\n\r\n<img width=\"1430\" alt=\"Screenshot 2025-07-07 at 20 02 51\" src=\"https://github.com/user-attachments/assets/c9a01849-3745-4bd5-9a26-738eecafae60\" />\r\n",
          "createdAt": "2025-07-07T18:03:21Z",
          "updatedAt": "2025-07-07T18:03:21Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 131,
      "id": "PR_kwDOJx2-rs6eGC-x",
      "title": "MTU - clarifications",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/131",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Contributes to #57\n\n<!-- Reviewable:start -->\n- - -\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/scionassociation/scion-cp_I-D/131)\n<!-- Reviewable:end -->\n",
      "createdAt": "2025-07-09T10:09:24Z",
      "updatedAt": "2025-07-16T10:27:46Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a51ae4adc7338c6b7fd1187bebea0d240a509d2b",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "mtu-clarifications",
      "headRefOid": "6c9745f57c0b73e4ce2f3fe8d26b601f43c66e51",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 132,
      "id": "PR_kwDOJx2-rs6eICGV",
      "title": "security considerations: use normative wording on connectedness",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/132",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #122\n\n<!-- Reviewable:start -->\n- - -\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/scionassociation/scion-cp_I-D/132)\n<!-- Reviewable:end -->\n",
      "createdAt": "2025-07-09T13:22:07Z",
      "updatedAt": "2025-07-16T10:27:46Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a51ae4adc7338c6b7fd1187bebea0d240a509d2b",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "security-considerations",
      "headRefOid": "27faadd37f0fd27884b6673edbf41aaf002f4b23",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 133,
      "id": "PR_kwDOJx2-rs6ffTex",
      "title": "Que?",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/133",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-18T02:13:51Z",
      "updatedAt": "2025-07-18T02:15:59Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a51ae4adc7338c6b7fd1187bebea0d240a509d2b",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Not-sure-what-these-are",
      "headRefOid": "061c7d67688d5a29d1c50f0a8274db97fea5e54d",
      "closedAt": "2025-07-18T02:15:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 134,
      "id": "PR_kwDOJx2-rs6ffcJo",
      "title": "Reworded and clarified PCB Validity",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/134",
      "state": "OPEN",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #117 ",
      "createdAt": "2025-07-18T02:38:03Z",
      "updatedAt": "2025-07-18T02:38:04Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a51ae4adc7338c6b7fd1187bebea0d240a509d2b",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "PCB-Validity",
      "headRefOid": "b477e12eb3700b39032531c15f896d9f7637b660",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}