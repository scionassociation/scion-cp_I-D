{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-10-13T00:22:33.164109+00:00",
  "repo": "scionassociation/scion-cp_I-D",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "Prio 1",
      "description": "",
      "color": "DC0E1A"
    },
    {
      "name": "Prio 2",
      "description": "",
      "color": "FBCA04"
    },
    {
      "name": "Prio 3",
      "description": "",
      "color": "0E8A16"
    },
    {
      "name": "editorial",
      "description": "",
      "color": "9855E2"
    },
    {
      "name": "needs-discussion",
      "description": "",
      "color": "fbca04"
    },
    {
      "name": "design",
      "description": "",
      "color": "1d76db"
    }
  ],
  "issues": [
    {
      "number": 5,
      "id": "I_kwDOJx2-rs57ZNLr",
      "title": "Language: MAC v.s. MAC",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/5",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "We should only use MAC with one meaning, not with two at the same time\r\n\r\n(Moved from https://github.com/scionassociation/standards/issues/98)\r\n",
      "createdAt": "2024-01-08T10:56:49Z",
      "updatedAt": "2024-02-22T16:55:35Z",
      "closedAt": "2024-02-22T16:55:35Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOJx2-rs57Z9-D",
      "title": "Unaddressed Feedback from Reviews",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/6",
      "state": "OPEN",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "Prio 1",
        "Prio 2"
      ],
      "body": "This issues lists all unaddressed feedback from reviews of the Control Plane draft before January 2024. New feedback is in dedicated issues\r\n\r\n(Aggregated from https://github.com/scionassociation/standards/issues/79 and https://github.com/scionassociation/standards/issues/90)\r\n\r\n\r\n**General points:**\r\n- [x] #7 \r\n- [x] Add Security Considerations (see also [RFC 3552](https://www.rfc-editor.org/info/rfc3552.html)) \r\n- [x] Make sure the references are correct: \r\n       - #14 \r\n       - #15 \r\n       - Normative references: Needed for the specification; specification is based on it.\r\n       - Informative references: Provide background/additional information\r\n-  #12 \r\n- [x] What text can be removed? Be concise. Make sure every word that is there must be there. \r\n- [x] ~~If time allows, add related work (not too academical, just overview)~~\r\n- [x] Complete IPR disclosure process with Anapaya. See also: https://github.com/scionassociation/standards/issues/101\r\n- [x] #8\r\n- [x] Improve the definition of \"endpoint\"\r\n- [ ] section 2.1: \"Intra-ISD beaconing creates path segments from core ASes to non-\r\ncore ASes.\" sounds a bit vague. We could rephrase with something like this text, that Matthias wrote for the documentation: \"Every core AS originates PCBs at regular intervals, and sends these to all egress interfaces to connected neighbor ASes. An originated PCB sent to a neighboring core ASes initiates an inter-ISD beacon, ultimately resulting in a core-segment. An originated PCB sent to a child AS initiates the intra-ISD beacon creating an up/down segment.\"\r\n\r\n**ISE Feedback:**\r\n- [x]  #17 \r\n- [x] #21\r\n- [x] **Remind reader about critical terminology** , as we introduce quite a lot of new acronyms.  For some critical ones, we should remind reader what they mean along the document, so reader is reminded. THis especially for: \r\n\u201cISD\u201d should be defined on first use.\r\nSame goes for PCB \r\n- [x] #18\r\n- [x] ~~**Interoperability**: we should add something especially for data and CP. There could even be one separate document for the ISE on the topic.~~ --> TO be handled in separate future documents\r\n- [x] ~~**Deployment**: add what is needed to run SCION, we can leave a reference to scion.org, scion Association~~ --> We are working on a separate draft for PANRG\r\n- [x] #19\r\n- [x] #20\r\n- [x] **Get some third party review**: do I have enough information to build SCION from the draft? Ask someone who is building SCION to check if the drafts are enough to build a SCION implementation.. Do they spot inconsistencies?  Example: they are building a Bluetooth ALG, and the coders realized that there are some small divergencies..\r\n\r\n**Decision TC Standardisation**\r\n- [x]  #9\r\n\r\n**Eliot Lear (ISE IETF):**\r\n- [x] Section 1.3 would benefit from a one or more simple diagrams that demonstrates an ISD, ASes, and the various types of links.  Please keep the diagrams small.  **--> CdK: Added one relatively small figure of an ISD with all link types to section 1.3.**\r\n- [x] I would like you to spend a bit more time on loop detection.  In particular, I would like you to explain how loops are averted within richly connected cores. **--> CdK: Added some additional text about avoiding loops to section 2.3.2.1.**\r\n- [x] Along those same lines, classic routing geeks will look for two words in this draft and not find them: partition and healing. Partition occurs when one network is split into two because of a link failure.  Healing is the process of recovery from partition.\r\n- [x] I find Section 1.5.2.1 confusing.  You seem to be saying that for values greater than 232-1, you should represent them in colon-separated lower-case hex, but then you go on to say, \u201cprograms SHOULD always use the decimal representation for display.\u201d  I would say: pick a way you want things displayed and stick to it. **--> CdK: Adapted the sentence about this in section 1.5.2.1 \"Formatting\" to make it more clear.**\r\n- [x] In Section 1.6, please create normative references for both GRPC and protobufs. **--> CdK: Done**\r\n- [x] I hope this doesn't come as a shock to you, but Figure 2 in Section 2.1.4 is quite busy, and requires a more detail, flow-based explanation.  Please give that some thought. **--> CdK: Done**\r\n- [x] The text below Figure 2 and above Figure 3 could be simplified to say that a PCB consists of one or more path segments at a given time T from the vantage point of a particular AS F.  Also, I think there's an editorial error in that diagram, unless I'm confused.  You label two segments \"path segment 2\" (the 2nd and the last).  I am further confused by the terminology, given the diagram, in that the diagram seems to infer a link-state database. **--> CdK: Done**\r\n- [x] I think for 2.2.1, it helps to show a full example message, or otherwise link to one in the Appendix. **--> CdK: Added an Appendix with a full example of one PCB in Protobuf message format.**  \r\n- [x] Section 2.2.1.4.3 is underspecified.  It must be crystal clear how to sign a message and how to verify it.  Now I think your intent is to have a separate document for that.  If so, leave a forward reference for now. **--> CdK: Added a mathematical formula and a reference to the relevant section in the SCION CP-PKI Internet-Draft.**\r\n\r\n**Juan Garcia-Pardo:**\r\n- [ ] Can one ingress or egress be part of two different links? Refers to section 1.3 \"Introduction > Paths and Links\".\r\n- [ ] Explain why there is a \"next_isd_as\" field in the signed component of an AS body element (PCB). Refers to section 2.4.2 \"PCB > AS Entry Signed Component\".\r\n- [x] Where do the suggested values for set size and propagation time of PCBs in section 2.3.1.1. \"Storing and Selecting Candidate PCBs\" come from? Do they depend on the network topology? Explain. --> This relates to scalability concerns, handled in #8 \r\n\r\n**Roger Lapuh:**\r\n- [x] Add an overview picture to section 2.2.1 \"Paths and Links\". \r\n- [x] Networking is very sensitive to flooding. So reading this as network engineer causes some concerns. In order to remove concerns the flooding terminology should always be supported with a statement along which path flooding is used and how flooding loops are prevented. _CdK: I have replaced the term \"flooded\" with \"sent\"._\r\n- [ ] ~Explain why why 4030 ISDs is enough for public addressing. Refers to section 2.2.3 \"Addressing > ISD Numbers\"\r\nSee~ https://github.com/scionassociation/scion-deployment_I-D/issues/1 \r\n- [x] #22\r\n",
      "createdAt": "2024-01-08T12:56:27Z",
      "updatedAt": "2024-10-09T07:08:07Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOJx2-rs57aARE",
      "title": "Write IANA Considerations Section",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/7",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "nicorusti",
        "jiceatscion"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "See [RFC 8126](https://www.rfc-editor.org/rfc/rfc8126.html)\r\n\r\n(Copied from https://github.com/scionassociation/standards/issues/100)\r\n",
      "createdAt": "2024-01-08T13:01:45Z",
      "updatedAt": "2024-05-16T10:34:52Z",
      "closedAt": "2024-05-16T10:34:51Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For the control plane, there seems to be only two IANA consideration to address:\r\n- Informational: The fact that SCION mirrors the UDP port space into the SCION/UDP port space. \r\n- The control service/discovery SCION/UDP port at 30252 which may need to become a reserved UDP/IP port as a consequence of the first point.\r\n \r\nEverything else is AS-internal so requires no IANA arbitration.\r\n\r\nRegarding port 30252, it is not even clear if that needs to be a reserved SCION/UDP port, given that it needs not be addressed directly but can be reached by way of a service address (and was once a dynamic port). As for port 30252 in to UDP/IP space, it is an AS-internal configuration anyway, so unless port 30252 needs to be reserved in the SCION/UDP space, it doesn't need to be reserved in the UDP/IP space.\r\n\r\nOn the other hand, Service Addresses themselves contain a hard-coded well-known number, so we might need to establish a registry for those. However, that would not be in the CP draft but may-be in the DP draft. Opinions welcome.\r\n\r\n",
          "createdAt": "2024-01-11T14:01:13Z",
          "updatedAt": "2024-01-11T14:01:13Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Update: our internet drafts must not have any IANA actions so, for better or for worse we have to let everything be freely configurable. We might mention that \"Informational: The fact that SCION mirrors the UDP port space into the SCION/UDP port space.\" as a justification for the absence of any IANA action requirement. Otherwise, should we just close this issue?\r\n",
          "createdAt": "2024-02-22T15:14:33Z",
          "updatedAt": "2024-02-22T15:15:01Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Hi @jceatscion in the draft we don't have the service discovery part (there was some discussion about this a while ago, and I think we removed it from the drafts, it might be in the old repo) ",
          "createdAt": "2024-02-23T18:03:59Z",
          "updatedAt": "2024-02-23T18:03:59Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "We discussed this with @jiceatscion and @matzf, port 30252 does not need to be reserved, this is an AS local configuration.",
          "createdAt": "2024-05-16T10:34:51Z",
          "updatedAt": "2024-05-16T10:34:51Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOJx2-rs57aHuA",
      "title": "Add section on scalability and convergence time",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/8",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "matzf"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "Jeff Tantsura at our IETF117 presentation mentioned that it was not clear how SCION does in terms of convergence time. \r\nThen we also got this question from the iSE review: \r\n\r\n> From:\tJoel Halpern\r\n> There appears to be a very fundamental gap in the scaling description.  On the one hand, SCION claims to scale well (presumably to large numbers of participating AS.  There is no discussion of the effect of the number of participants or meshiness on the number of PCBs.  There are very strict limits on the rate at which PCBs are propagated.  But no analysis as to whether the system will ever converge .  Particularly if the number of interfaces between AS becomes large. \r\n\r\nSomething about convergence time and scalability should be added to the draft. We could start from something like this:\r\n> Note that, since there is no convergence phase in SCION, we cannot compare to BGP\u2019s convergence time. SCION path-segments are stable as soon as they are disseminated.\r\n\r\nSource:\r\nhttps://netsec.ethz.ch/publications/papers/2021_conext_deployment.pdf\r\n\r\n(Copied from https://github.com/scionassociation/standards/issues/82)\r\n\r\n> From Roger Lapuh:  Explain why why 4030 ISDs is enough for public addressing. Refers to section 2.2.3 \"Addressing > ISD Numbers\"\r\n\r\n> From Juan Garcia Pardo:  Where do the suggested values for set size and propagation time of PCBs in section 2.3.1.1. \"Storing and Selecting Candidate PCBs\" come from? Do they depend on the network topology? Explain. \r\n",
      "createdAt": "2024-01-08T13:19:15Z",
      "updatedAt": "2024-07-08T15:35:59Z",
      "closedAt": "2024-07-08T15:35:59Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Convergence time: \r\n\r\n- Clarify there is no convergence\r\n- Time to bootstrap \r\n- Time to discover new link\r\n\r\n\r\nScalability: clarify tradeoffs\r\n- Number of ISDs and core ASes\r\n- Propagation intervals\r\n- Number of AS entries\r\n- meshyness of network\r\n\r\nWhat is the cost metric: communication, storage, computation (e.g. signature verification) \r\n",
          "createdAt": "2024-06-13T08:58:47Z",
          "updatedAt": "2024-06-13T08:58:47Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOJx2-rs57aLVE",
      "title": "Adapt Section on SCION AS Numbers",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/9",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "(Moved from https://github.com/scionassociation/standards/issues/91)\r\n\r\nSection 1.5.2 on AS numbering in the Control Plane draft must be changed, as it may cause problems or even a blocking of the draft at the IETF.  See also Eliot Lear's mail from 28.8:\r\n\r\n> There is an issue in Section 1.5.2:\r\n> There will be a conflict if the IETF decides to increase the ASN size.  This may not make it past the IESG in RFC 5742 review.  I just went through this with GNS and would not like to repeat that experience.  Therefore, my suggestion is that you view the ASN field as two separate fields: BASE and and EXTENSION, where if EXTENSION is 0, base must be an IANA-assigned ASN value.\r\n> \r\n\r\nAt the 3rd TC meeting on Tuesday 5 September, it was decided that the SCION AS numbering will not be described in detail in the CP draft. It should be mentioned that the SCION AS numbering is totally independent from the BGP AS numbering. For all other details, refer to a future and/or other draft.   \r\n\r\nFor the problem description and possible future solution, see slide 11-14 of the slide deck for the TC Standardisation meeting on 5.9.23. [TC-Standardisation_3meeting_Sept23.pdf](https://github.com/scionassociation/standards/files/12534358/TC-Standardisation_3meeting_Sept23.pdf)",
      "createdAt": "2024-01-08T13:27:03Z",
      "updatedAt": "2024-02-22T18:20:57Z",
      "closedAt": "2024-02-22T18:20:57Z",
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOJx2-rs6APwCE",
      "title": "Continue improving use of MUST and SHOULD according to rfc2119 and rfc8174",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/12",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "editorial"
      ],
      "body": "Continue work done in #11: \r\n       - MUST: Without this, the protocol will not work\r\n       - SHOULD: Should do this unless you have a very good reason not to\r\n       - MAY: Try to not use \"MAY\", if not needed\r\n      \r\n\r\netc.",
      "createdAt": "2024-02-23T18:42:28Z",
      "updatedAt": "2024-07-08T09:51:55Z",
      "closedAt": "2024-07-08T09:51:55Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Let's fix the: \"Allowed\", review use of MAY, and then resolve this",
          "createdAt": "2024-05-16T09:10:56Z",
          "updatedAt": "2024-05-16T09:10:56Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "While we added words,  we need to look at capitalization of these words, this is still not right in all places:\r\n\r\nFrom rfc8174: \r\n> The words have the meanings specified herein only when they are in all capitals.\"\r\n\r\n\r\nKeywords are:  \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\r\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\r\n   \"OPTIONAL\" ",
          "createdAt": "2024-07-04T10:44:18Z",
          "updatedAt": "2024-07-04T10:45:54Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOJx2-rs6IwwiF",
      "title": "Extend introduction, add overview and remove/edit notes",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/14",
      "state": "CLOSED",
      "author": "elear",
      "authorAssociation": "NONE",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "Prio 1",
        "editorial"
      ],
      "body": ">   \\*Note:\\* It is assumed that readers of this draft are familiar with\r\n   the basic concepts of the SCION next-generation inter-domain network\r\n   architecture.  If not, please find more detailed information in the\r\n   IETF Internet Drafts [I-D.scion-overview], [I-D.scion-components],\r\n   [I-D.scion-dp], and [I-D.scion-cppki], as well as in [CHUAT22],\r\n   especially Chapter 2.  A short description of the SCION basic terms\r\n   and elements can be found in Section 1.1 below.\r\n\r\nthe first two documents are not in my queue and I don't expect them.\r\n\r\n\r\nSame issue in other drafts: \r\n- DP https://github.com/scionassociation/scion-dp_I-D/issues/10\r\n- CPPKI https://github.com/scionassociation/scion-cppki_I-D/issues/29",
      "createdAt": "2024-05-14T05:57:55Z",
      "updatedAt": "2024-07-04T15:54:51Z",
      "closedAt": "2024-07-04T15:54:51Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "- [x] on the ISD definition, change language on jurisdiction (i.e. --> e.g.) ",
          "createdAt": "2024-06-06T08:20:23Z",
          "updatedAt": "2024-07-04T15:54:47Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOJx2-rs6IwxcL",
      "title": "gRPC & service discovery - dangling reference",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/15",
      "state": "CLOSED",
      "author": "elear",
      "authorAssociation": "NONE",
      "assignees": [
        "nicorusti",
        "jiceatscion"
      ],
      "labels": [
        "question",
        "needs-discussion"
      ],
      "body": "\r\n   > \\*Note:\\* The details of how gRPC is mapped to the SCION data plane\r\n   will be described in a separate document.\r\n\r\nWhich document?",
      "createdAt": "2024-05-14T05:59:13Z",
      "updatedAt": "2024-06-04T08:55:04Z",
      "closedAt": "2024-06-04T08:55:04Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "This is referring to the SCION gRPC API. \r\n\r\nP.S.: There is ongoing work to transition to connect, see https://github.com/scionproto/scion/issues/4434 / https://github.com/scionproto/scion/tree/connectrpc (which is incrementally deployable and backwards compatible to  legacy gRPC nodes), [also see IETF 118 Hackathon presentation](https://github.com/IETF-Hackathon/ietf118-project-presentations/blob/main/ietf118-SCION-apps-RPC.pdf)\r\n\r\n@matzf @jiceatscion check status in scionproto and see how this can be described within this draft. We could use some text from [here](https://github.com/scionassociation/standards/blob/f9aeed78d97a1bcc79938fce4b5d140b59273e56/source/control-plane/service-discovery.rst)\r\n\r\nRelates to https://github.com/scionassociation/scion-dp_I-D/issues/13 \r\n\r\n",
          "createdAt": "2024-05-16T10:23:09Z",
          "updatedAt": "2024-06-03T07:48:49Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOJx2-rs6I_TuN",
      "title": "Clarify PCB selection policies and how they meet endpoint's needs ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/16",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf"
      ],
      "labels": [
        "question",
        "needs-discussion"
      ],
      "body": "> From:\tJoel Halpern\r\n> There seems to be a philosophical contradiction in section 2.3.1 (Selection of PCBs to propagate) of the control plane document. Given the philosophy of SCION, the goal should be to propagate PCBs with the highest probability of collectively meeting the needs of the end hosts that will perform path construction.  Of course, this AS doesn't know that.   But the text ignores this distinction.\r\n\r\nTis also relates to [rfc9217 section-2.8](https://www.rfc-editor.org/rfc/rfc9217.html#section-2.8):\r\n```how can the incentives of network operators and end users be aligned to realize the vision of path-aware networking, ...```\r\n",
      "createdAt": "2024-05-15T15:57:30Z",
      "updatedAt": "2024-06-21T16:49:36Z",
      "closedAt": "2024-06-21T16:49:36Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Ideally, we'd like not to mandate or recommend any specific selection policy. PCB selection, overall gives some control to the AS, that can \"limit\" what its endpoint gets. \r\nFor an AS where endpoints are direct customers, selection policies can be driven by what was bought by customer (e.g. premium paths or not). \r\nFor a transit AS, this gets more complicated.",
          "createdAt": "2024-05-16T10:46:52Z",
          "updatedAt": "2024-05-17T07:42:46Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Maybe giving what we have in the OS as an example could help? \r\nhttps://docs.scion.org/en/latest/dev/design/BeaconService.html#beacon-selection \r\n",
          "createdAt": "2024-05-31T14:53:55Z",
          "updatedAt": "2024-05-31T14:53:55Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOJx2-rs6I_apu",
      "title": "Clarifications about AS interfaces and peering",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/17",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf",
        "jiceatscion"
      ],
      "labels": [
        "question"
      ],
      "body": "> From:\tJoel Halpern \r\n> There is no description of how an A control service knows the existence of the many AS interfaces, whether they are core, up, down, or peering interfaces, and what AS they go to.\r\n\r\n> There is also no information about how the needed properties of peering adjacencies are made available to the control service.\r\n\r\n> Also, somewhere (not sure if it is a data plane or control plane mechanism), there needs to be a mechanism to translate neighbor interface identifiers to underlay addresses.\r\n\r\nMost if this is pre-configured by the AS, in the OS implementation in the [topology file](https://docs.scion.org/en/latest/manuals/common.html#topology-json), we should indeed add something about this to the draft.\r\n\r\n\r\nAlso, Eliot commented about  peering ASe: We use the expression in the introduction. We say that peering links can cross ISDs. We need to define what is a peering AS (especially WRT to case outside an ISD). Important to make it clear that peering is possible across ISDs. \r\n ",
      "createdAt": "2024-05-15T16:10:06Z",
      "updatedAt": "2024-06-13T08:41:56Z",
      "closedAt": "2024-06-13T08:41:56Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I tried to address all three points by I probably failed at least one. PTAL.\r\n\r\n",
          "createdAt": "2024-05-28T16:46:59Z",
          "updatedAt": "2024-05-28T16:47:53Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I think this is addressed",
          "createdAt": "2024-06-05T08:37:02Z",
          "updatedAt": "2024-06-05T08:37:02Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOJx2-rs6JFOrJ",
      "title": "Clarify time synchronization dependency",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/18",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "question"
      ],
      "body": "What are the time synchronization dependencies between routers? Do you assume NTP? What happens if clocks drift?  Any dependencies must be listed. Maybe we could even have a section about dependencies. It is important as SCION is a such fundamentalc component that we must clearly list dependencies.. \r\n\r\n- [x] CLarify  routers requires syncronized time for path segments expiration (depending on lifetime on path segments, between 6m and one day, with 6m granularity).\r\n- [x] There is a tolerance value for CP certificate verification. In SCIONLab this had to be extended where NTPs did not work. \r\n- [x] Add a reference to where lifetimes are specified (could be the DP draft)\r\n- [x] Check if DP draft also needs to be updated\r\n- [x] ~Certificate validation for gRPC calls: what is the tolerance and where is it specified~",
      "createdAt": "2024-05-16T09:26:22Z",
      "updatedAt": "2024-06-19T20:32:19Z",
      "closedAt": "2024-06-19T20:32:19Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressed the question of clock drift in the dataplane with: https://github.com/scionassociation/scion-dp_I-D/pull/19",
          "createdAt": "2024-05-24T15:19:30Z",
          "updatedAt": "2024-05-24T15:19:30Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also copied the formula to interpret expTime from the DP draft.",
          "createdAt": "2024-05-24T17:25:03Z",
          "updatedAt": "2024-05-24T17:25:03Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that the time-tolerance for certificates is no-longer needed nor applied: Updated the cp draft to clarify that segments are not authenticated by certificates valid \"now\", but by certificates valid for the same period as the segment. Therefore current time during validation plays no role. Possibly a time offset between an AS's certificate originator and that of its core control service could play a role, but I think it's safe to assume that, being in the same AS, they can have the same time source. gRPC connections are quic/TLS connections, authenticated with the same AS certs. Subject to the same time check. No tolerance. None needed. Clarified that in the draft.\r\n",
          "createdAt": "2024-05-27T12:58:04Z",
          "updatedAt": "2024-05-27T15:30:54Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Finally closing this after both CP & DP are updated. Thanks a lot @jiceatscion !",
          "createdAt": "2024-06-19T20:32:19Z",
          "updatedAt": "2024-06-19T20:32:19Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOJx2-rs6JFS5N",
      "title": "Add context to bullet points in 2.1.2 (Extending a PCB) ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/19",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": " 2.1.2: in the bullet point where we have references, we should expand this sentences and add some short context (5/6 words) before the pointer to the other section\r\n ```\r\n   *  For the specification of one PCB, see Section 2.2\r\n\r\n   *  For more details on selecting PCBs, see Section 2.3.1\r\n\r\n   *  For more details on propagating PCBs, see Section 2.3.2\r\n ```\r\n\r\nFrom discussion with Eliot (28.08.23)",
      "createdAt": "2024-05-16T09:34:23Z",
      "updatedAt": "2024-07-26T23:02:23Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDOJx2-rs6JFU0C",
      "title": "Manageability: what must an AS keep track of (paths, links, certificates, \u2026) and reference to deployment",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/20",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti",
        "knmeynell"
      ],
      "labels": [
        "enhancement",
        "Prio 2"
      ],
      "body": "Manageability: small discussion of things that must be tracked in order to maintain service: PCB entries on devices, paths, links, certificates, \u2026\r\n\r\n- [ ] Check if this is not clear from the draft and if some text has to be adapted\r\n\r\nThis input comes from Eliot. \r\n\r\n- [ ] short paragraph in the appendix (and pointer to SCIONLab)\r\n- [ ] Mention it in changelog\r\n- [ ] add in other drafts\r\n",
      "createdAt": "2024-05-16T09:38:07Z",
      "updatedAt": "2024-10-08T09:11:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Meeting Eliot Oct 2024: \r\n\r\n> Show fully flashed out config of how to have SCION nodes, a device in the middle, they did this with M-BONE. And the 6 bone to play with IPv6. If you have someone who wants to build an implementation, how can they test that it works and that they can interoperate. \r\nWhat do you have to do if you want to want to add a GW. Show a reference to what you can do (guide how to participate) e.g. to SCIONLab, not docs.scion.org. Goal; meet interop requirement. No Anapaya docs (but could be). Beginning as vendor implementation, intent is to offer to community for further improvement and potential standardization later on.\r\n",
          "createdAt": "2024-10-08T09:06:50Z",
          "updatedAt": "2024-10-08T09:06:50Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOJx2-rs6JFXal",
      "title": "Add a section \u201cLife of a routing advertisement\u201d ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/21",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "Add a section \u201cLife of a routing advertisement\u201d summarizing the steps for routing,  from a initial state, to exploration, registration (a numbered list of steps). It could be something similar to what is in our 117 slides. This will give the draft an overall structure that shows: Here is the process, here is an example, here it is the details.",
      "createdAt": "2024-05-16T09:43:10Z",
      "updatedAt": "2024-05-16T10:55:18Z",
      "closedAt": "2024-05-16T10:55:17Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "This was already added in 1.4.  Routing, issue is obsolete. ",
          "createdAt": "2024-05-16T10:55:17Z",
          "updatedAt": "2024-05-16T10:55:17Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOJx2-rs6JFfLE",
      "title": "Clarify path reversal for symmetric routing",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/22",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "question"
      ],
      "body": " think in the provider world it is expected that traffic between two endpoints uses bidirectionally the same path symmetrically. As each AS can select its own path to other AS's, it looks like SCION is not symmetrical. Maybe a comment around that could help.\r\n \r\n  @nicorusti: a sentence to clarify this could be added in 1.6. at bullet point path reversal.",
      "createdAt": "2024-05-16T09:55:40Z",
      "updatedAt": "2024-07-04T15:52:23Z",
      "closedAt": "2024-07-04T15:52:23Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOJx2-rs6JR5P1",
      "title": "Clarify selection of MAC algorithm",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/23",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf"
      ],
      "labels": [
        "question",
        "Prio 2"
      ],
      "body": "> From Joel Halpern\r\n> I may have misread the text, but the description of the hop authentication algorithm seems to say \"use an algorithm that is consistent across the AS.  The problem with that answer is that an implementor needs to implement a specific algorithm.  I think there at least needs to be a mandatory to implement algorithm, so implementors can interoperate.\r\n\r\nMACs for hop fields are created and then verified always within an AS. This means that each AS can use a different MAC algorithm, while interoperating with other ASes. We mention this in the data plane draft: \r\n ```  only the control service and routers of the AS need\r\n   to agree on keys, algorithm, and input for the MAC.  However, note\r\n   that we do not provide nor specify any mechanism to coordinate AS-\r\n   specific choices between the routers and the control services of the\r\n   AS.\r\n```\r\n Two points should be clarified: \r\n- [x] make it clearer also in the control plane draft that MAC algorithm is AS specific\r\n- [x] Clarify vendor interoperability _within an AS_: e.g. mention one mandatory algorithm within an AS \r\n\r\n   \r\n\r\nIssue in DP: https://github.com/scionassociation/scion-dp_I-D/issues/7  \r\n\r\n",
      "createdAt": "2024-05-17T16:38:24Z",
      "updatedAt": "2024-06-21T16:38:38Z",
      "closedAt": "2024-06-21T16:38:38Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@matzf I was looking into Joel's emails, he provided some more hints: \r\n\r\n> <jmh>Yes, I get that each AS can in principle use a different algorithm.  Now look at it from the point of view of an implementor.  What algorithm shall I implement?  I am expecting to sell to multiple operators.  I am expecting to need to interoperate with solutions from other vendors.  I have no problem with allowing a range of choices.  But I need something that ensures interoperability.  The usual answer is to say that all implementations must implement and support X, and that operators can use anything they like that their devices support as long as all devices in the AS use the same thing. </jmh>\r\n\r\nRight, this depends on the MAC algorithm. Safely truncating requires certain MAC algorithms, e.g. ones that have properties of a pseudorandom function. We should clarify this.\r\n\r\n> <jmh>If it depends upon the MAC that is used, then you need to tell operators enough to make an appropriate choice of MAC.  Still seems that XORing together th three \"xhorts\" from the MAC would always be stronger.  But I am not a security expert. </jmh> ",
          "createdAt": "2024-06-04T10:39:09Z",
          "updatedAt": "2024-06-04T10:39:09Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I think this is resolved by #34 ",
          "createdAt": "2024-06-21T16:38:38Z",
          "updatedAt": "2024-06-21T16:38:38Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOJx2-rs6KWhZE",
      "title": "Private AS range typo",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/26",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": "There is a typo here, this range should be `ffaa:0:0/24`,  same as in the [scionproto wiki](https://github.com/scionproto/scion/wiki/ISD-and-AS-numbering)\r\n```\r\n    +-------------------+-------------+-------------------------------+\r\n    | ff00:0:0/24       | ~16.8 mill. | Reserved for private use      |\r\n    |                   |             | (analogous to [RFC6996]).     |\r\n    |                   |             | These numbers can be used for |\r\n    |                   |             | testing/private deployments.  |\r\n    +-------------------+-------------+-------------------------------+\r\n```\r\n\r\n\r\n\r\nIntroduced in this initial commit https://github.com/scionassociation/scion-cp_I-D/commit/d427570b5b9d0ed0f7155e895bb87e185dec9688",
      "createdAt": "2024-05-28T14:01:17Z",
      "updatedAt": "2024-05-30T09:14:56Z",
      "closedAt": "2024-05-30T09:14:56Z",
      "comments": []
    },
    {
      "number": 28,
      "id": "I_kwDOJx2-rs6KWwVP",
      "title": "High availability language",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/28",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": "This is a bit vague: \r\n```\r\nIn addition, the control services\r\n   are designed to be deployed on replicated instances so that requests\r\n   can be balanced.\r\n```\r\n\r\n@shitz proposes \r\n\"In addition, control services should be implemented in a distributed and replicated manner so that requests can be balanced and a single instance failure does not result in a total failure of the control plane of a SCION AS.\"",
      "createdAt": "2024-05-28T14:25:20Z",
      "updatedAt": "2024-06-21T16:53:07Z",
      "closedAt": "2024-06-21T16:53:07Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "This was handled in #27 ",
          "createdAt": "2024-06-21T16:53:07Z",
          "updatedAt": "2024-06-21T16:53:07Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOJx2-rs6KdvU1",
      "title": "Add component overview",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/30",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "knmeynell"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-29T11:13:20Z",
      "updatedAt": "2024-06-03T07:10:44Z",
      "closedAt": "2024-06-03T07:10:44Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Duplicate of #14",
          "createdAt": "2024-06-03T07:10:44Z",
          "updatedAt": "2024-06-03T07:10:44Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "I_kwDOJx2-rs6LVtmw",
      "title": "Language for PCB propagation ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/36",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "nicorusti"
      ],
      "labels": [
        "editorial"
      ],
      "body": ">  As core beaconing is based on _flooding_ PCBs,\r\n\r\nIs there a better wording? \r\n\r\n> As core beaconing is based on propagating PCBs to all AS neighbors,\r\n\r\n",
      "createdAt": "2024-06-06T08:55:53Z",
      "updatedAt": "2024-06-06T12:06:35Z",
      "closedAt": "2024-06-06T12:06:35Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "I_kwDOJx2-rs6MeGq8",
      "title": "Normative/informative references",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/40",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": " Make sure the references are righttly placed according to [guidelines](https://datatracker.ietf.org/doc/statement-iesg-iesg-statement-normative-and-informative-references-20060419/#:~:text=Normative%20references%20specify%20documents%20that,it%20only%20provides%20additional%20information): \r\n- Normative references: Needed for the specification; specification is based on it.\r\n- Informative references: Provide background/additional information\r\n\r\n\r\nPotential changes: \r\n- [ ] I-D.scion-cppki should be normative \r\n- [ ] Several RFCs might be informative\r\n- [x] Check if other drafts affected\r\n\r\nDP https://github.com/scionassociation/scion-dp_I-D/issues/25 \r\nPKI: https://github.com/scionassociation/scion-cppki_I-D/issues/32",
      "createdAt": "2024-06-17T08:16:14Z",
      "updatedAt": "2024-06-21T16:09:07Z",
      "closedAt": "2024-06-21T16:09:07Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "```\r\n7.1.  Normative References\r\n\r\n   [I-D.scion-cp]\r\n              de Kater, C., Rustignoli, N., and S. Hitz, \"SCION Control\r\n              Plane\", 2024, <https://datatracker.ietf.org/doc/draft-\r\n              dekater-scion-controlplane/>.\r\n              \r\n```",
          "createdAt": "2024-06-21T15:44:14Z",
          "updatedAt": "2024-06-21T15:44:14Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "FIxed with #38 ",
          "createdAt": "2024-06-21T16:09:07Z",
          "updatedAt": "2024-06-21T16:09:07Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOJx2-rs6OtERN",
      "title": "Clarify origination v.s. propagation interval",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/45",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "Prio 3",
        "needs-discussion"
      ],
      "body": "We currently only mention propagation interval in the draft. However, there is a separate origination interval in the implementation. \r\n\r\n\r\nAs reported by @tzaeschke  in https://github.com/scionassociation/scion-cp_I-D/pull/42#issuecomment-2211084556 : \r\n\r\n> The notes contain several references to \"beacon origination interval\", i.e. the interval at which new beacons are created. I couldn't find any description of this interval, maybe I overlooked it? Is it the same as the propagation interval? \r\n> I couldn't find a discussion of beacon origination interval (or the RegistrationInterval), see \"[DefaultOriginationInterval](https://github.com/scionproto/scion/blob/a1ed6246ecd6beae9c82544032de4f9fecab1058/control/config/config.go#L37)\" (or the DefaultRegistrationInterval) in the code.\r\n\r\n> ### Partition and Healing\r\n> Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the propagation interval and the origination interval.\r\n\r\n> ### Path Discovery Time and Scalability {#scalability} \r\n> Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n \r\n \r\n Does this distinction make sense? We might distinguish between interval for core beaconing and intra-ISD beaconing",
      "createdAt": "2024-07-07T19:07:10Z",
      "updatedAt": "2024-09-24T15:08:48Z",
      "closedAt": "2024-09-24T15:08:48Z",
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In my opinion, the distinction between origination interval and propagation interval is not necessary for the draft. The term \"propagation interval\" might not be entirely apropos for beacon origination, but the concepts are identical. I'd suggest to use \"propagation interval\" exclusively in the draft, or alternatively replace it with a more generic term (e.g. \"announcement interval\" or \"PCB creation interval\").\r\n\r\nFor what it's worth, I think the distinction of origination and propagation interval is not even useful in the implementation. If anything, we'd want to separately configure a frequency for core and non-core beaconing, but the configuration does allow to make this distinction. \r\nIn the draft, I think this also not necessary. I think the description is abstract enough to allow different values for this interval in different contexts.\r\n\r\n\r\n----\r\n\r\n> Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the propagation interval and the origination interval.\r\n\r\nQuoting the current text from that section:\r\n\r\n> Recovering (also called healing) from a partitioned network is also seamless, as only coarse time synchronization between the partitions is required to resume normal operation and move forward with updates of the cryptographic material.\r\n\r\nMy reading was that it means that the control plane can just resume with path discovery once the broken links have been recovered. That doesn't mean that it won't take some time to actually build the paths from that point on, just that nothing special needs to be done.\r\nIt's a bit vague, and perhaps also not very illuminating, but to me it seems that this doesn't _have to_ discuss the time until paths are found.",
          "createdAt": "2024-07-08T14:54:39Z",
          "updatedAt": "2024-07-08T14:54:39Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Also, for the records, these are the values in the prod network (as [confirmed](https://scionproto.slack.com/archives/C8ADA9CEP/p1720446254828389?thread_ts=1720431398.661119&cid=C8ADA9CEP) by @oncilla)\r\n```toml\r\n[beaconing]\r\norigination_interval = \"30s\"\r\npropagation_interval = \"30s\"\r\nregistration_interval = \"5s\"\r\n```",
          "createdAt": "2024-07-08T15:01:16Z",
          "updatedAt": "2024-07-08T15:01:16Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I agree with @matzf that there is no editing action needed on the draft because of this issue ",
          "createdAt": "2024-09-24T15:08:48Z",
          "updatedAt": "2024-09-24T15:08:48Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOJx2-rs6OtOg6",
      "title": "Clarifications in introduction and beaconing",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/46",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "Prio 3"
      ],
      "body": "Copied over from feeedbac received by @tzaeschke  in https://github.com/scionassociation/scion-cp_I-D/pull/42#issuecomment-2211084556\r\n\r\n\r\n# Introduction\r\n## Avoiding Circular Dependencies and Partitioning\r\n- Does this section (title) make sense as it is? The two topics (circular dependencies and partitioning) appear unrelated. Partitioning is discussed in a separate subsection\r\n- Also, this section claims to contain a list that explains how circular dependencies are avoided.\r\n  However, I am not sure how anything in the list explains anything about circular dependencies?\r\n\r\n### Partition and Healing\r\n- `ASes could always switch to otherwise unused links`. \r\n\r\n  - What are `unused` links? `Unused` indicates that they are not in the \"Best PCB\" set. \r\n  If that is the case, then we cannot simply \"switch\" to use them, we first need to have them discovered by beacons. This takes time, see `propagation interval` (unless PCB are forwarded immediately) and beacon `origination interval`.\r\n  - Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the `propagation interval` and the `origination interval`.\r\n  As I understand, with propagation interval being set to e.g. 10Minutes, this adds up to 5hops*1/2*10min= 25minutes for 5 hops.\r\n\r\n# Path Exploration or Beaconing {#beaconing}\r\n## Introduction and Overview\r\n\r\n- `Intra-ISD beaconing`: Isn't this incomplete? How are DOWN segments created? I think leaf ASes need to propagate paths back to the COREs? -> Link to #intra-reg ?\r\n- `Inter-ISD beaconing`: Similarily, I think there is a step where CORE beacons share their path DB with other CORE ASes in the same ISD?\r\n\r\n### Extending a PCB\r\n- `selects the best combinations`: Maybe link to a section that explains how this works? And what \"best\" means?\r\n\r\n## Path-Segment Construction Beacons\r\n### PCB Validity\r\n- `For the purpose of validation, a timestamp is considered \"future\" if it is later than the current time at the point of validation plus the minimum expiration time of a hop field (337.5 seconds, see ).`\r\nMaybe add an explanation why we add the minimum expiration time here?\r\nShouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n\r\n\r\n\r\n\r\n## Propagation of PCBs {#path-prop}\r\n### Selection of PCBs to Propagate {#selection}\r\n#### Storing and Selecting Candidate PCBs\r\n\r\n- `temporary storage`: Maybe clarify what \"temporary\" means. \r\n  - How long are PCBs stored? \r\n  - Under what circumstances are they removed, e.g. when they expire? \r\n  - Or possibly replaced with a new version? What if the new version has an earlier expiration date?\r\n\r\n\r\n- `At each propagation event, each AS selects a set of the best PCBs from the candidates in the beacon store`\r\n\r\n\r\n- `The best PCBs set size SHOULD be at most \"50\" (PCBs) for intra-ISD beaconing and at most \"5\" (PCBs) for core beaconing.`\r\n  - I found this a bit confusing: the \"50\" appears to be the total number of beacons forwarded for non-core ASes, whereas the \"5\" refers to the number of \r\n    PCBs _per_ remote CORE AS. Maybe clarify this?\r\n\r\n- `Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].`\r\n  - Is this true? It appears to conflict with many other parts of the document that talk about propagation intervals in the contect of cold-start.\r\n  - Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n  - Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively\r\n    forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths? \r\n  - What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths\r\n    coming in all the time that need to be forwarded immediately, or not?\r\n    \r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2024-07-07T21:02:16Z",
      "updatedAt": "2024-10-08T09:02:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">  Shouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n\r\nThat's exactly what it is, we just picked a generous value for the allowed inaccuracies. Picking a value that already had a meaning in SCION seemed _less_ arbitrary than making up another arbitrary value. There doesn't seem to be a non-arbitrary choice.",
          "createdAt": "2024-07-08T15:08:19Z",
          "updatedAt": "2024-07-08T15:08:19Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "In the early skeleton of the deployment draft, we also got this content by @juagargi : \r\n\r\n> ## Beaconing Scalability\r\n> \r\n> The current beaconing system creates a large amount of beaconing traffic because every node multiplies the beacons by forwarding them to multiple other ASs. This is currently handled by rate-limiting identical beacons (with identical paths) to only be forwarded every some fixed propagation interval.  With larger networks, the beaconing traffic is expected to grow \u201csubstantially\u201d.\r\n> \r\n> * Risk: beaconing traffic grows with network size, especially with multiple links between pairs of ASes.\r\n>   * Large amount of beacon traffic.\r\n>   * Large amount of state on beacon servers.\r\n>   * Considerable amount of state on control services to store segments, and considerable data traffic for serving segments.\r\n> * The beacon interval in the SSFN has been considerably reduced to deal with beacon traffic. (?)\r\n>   * This affects the propagation time of newly available routes. [To be verified]\r\n>   * This can affect convergence time.\r\n\r\n@juagargi I have some concerns regarding this text: \r\n> >  The beacon interval in the SSFN has been considerably reduced to deal with beacon traffic. (?)\r\n\r\nBeacon traffic increases if the interval is reduced. Also, Dominik today mentioned they use 30s in general. We can perhaps clarify this and integrate this in the next release of the CP draft. If there are more researchy parts to this, we can add it to the research questions draft. \r\n\r\n\r\nI am moving this to here, as with #42 we added a section about beaconing scalability, and I feel this would belong there more than to the open research questions. \r\n",
          "createdAt": "2024-07-08T20:14:54Z",
          "updatedAt": "2024-07-08T20:14:54Z"
        },
        {
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "body": "> > Shouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n> \r\n> That's exactly what it is, we just picked a generous value for the allowed inaccuracies. Picking a value that already had a meaning in SCION seemed _less_ arbitrary than making up another arbitrary value. There doesn't seem to be a non-arbitrary choice.\r\n\r\nI'm not sure I can follow this argument. If we want an \"arbitrary\" value, we could just say so. Picking the minimum hopfield expiration time requires not only more text + a (pointless) reference, I also found it really confusing, thinking I was lacking some obvious understanding why the minimum hopfield expiration is relevant here. Also, the value is not really arbitrary, it depends on what the acceptable/expected clock deviation is. Maybe we can just write that?\r\nI don't really see the benefit of picking a time interval that is defined somewhere else in the document in an unrelated context.",
          "createdAt": "2024-07-09T14:41:36Z",
          "updatedAt": "2024-07-09T14:41:36Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "I_kwDOJx2-rs6O0I68",
      "title": "Clarify beaconing fast retry at bootstrapping",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/48",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "matzf",
        "jiceatscion"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "In #42 we discussed about  propagation interval in case of \"bootstrapping\"/\"cold-start\". Following clarifications in this [slack discussion](https://scionproto.slack.com/archives/C8ADA9CEP/p1720431398661119), it turns out that: \r\n> There is a fast recovery where we attempt to beacon a lot more frequently until we have beaconed successfully over the given interface\r\n\r\nThis is implemented in [here](https://github.com/scionproto/scion/blob/a1ed6246ecd6beae9c82544032de4f9fecab1058/control/beaconing/propagator.go#L324) in scionproto. There was just one note in the draft that got removed in #42. We should re-add this, together with some clarifications, especially in the _Effects of Clock Inaccuracy_ and _Path Discovery Time and Scalability_ sections.\r\n\r\nSome points to be addressed were reported by @tzaeschke [here](https://github.com/scionassociation/scion-cp_I-D/pull/42#issuecomment-2211084556): \r\n\r\n> ### Storing and Selecting Candidate PCBs\r\n>- `Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].`\r\n>   - Is this true? It appears to conflict with many other parts of the document that talk about propagation intervals in the contect of cold-start.\r\n>   - Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n>   - Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively\r\n>     forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths? \r\n>   - What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths\r\n    coming in all the time that need to be forwarded immediately, or not?\r\n    \r\n> ### Effects of Clock Inaccuracy\r\n> - `PCBs are propagated at a configurable interval (typically, one minute).`\r\n>   - Unless they are new, then the interval is ignored, see \"immediate cold-start PCB forwarding\".\r\n>   - Maybe rephrase: \"(typically, one minute)\" ---> \"immediately for new beacons, minimum 5secs for intra-ISD, minimum one minute for inter-ISD\"?\r\n\r\n> ### Path Discovery Time and Scalability {#scalability}\r\n> - `Generally, the time until a specific PCB is built depends on its length and the propagation interval.`? \r\n>   - I think in the context of \"cold boot\u00a8, the propagation delay is \"0\", see \"immediate cold-start PCB forwarding\".\r\n>- `PCB arrives at a random point in time during the interval and is buffered before potentially being propagated`\r\n>  - see \"immediate cold-start PCB forwarding\"\r\n>  - Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n\r\n>### Intra-ISD Beaconing\r\n\r\n>- `Otherwise, child ASes at distance D below the new link, learn of the new link after D further propagation steps`\r\n>   - New path: \"immediate cold-start PCB forwarding\"\r\n    \r\n\r\n>### Inter-ISD Beaconing\r\n\r\n>- `On a cold start of the network, [...]. With a 5 second propagation period [...]`\r\n>   - Above it says that bootstrapping results in immediatede forwarding, see \"immediate cold-start PCB forwarding\".\r\n\r\n>- `When a new link is added to the network, it will be available to connect two ASes at distances from the link D1 and D2 from the link, respectively, after a mean time (D1+D2)*T/2.`\r\n>  - Also: see previous point about \"immediate cold-start PCB forwarding\"",
      "createdAt": "2024-07-08T16:09:42Z",
      "updatedAt": "2024-07-18T21:23:26Z",
      "closedAt": "2024-07-18T21:23:26Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Handled in #49 ",
          "createdAt": "2024-07-18T21:23:26Z",
          "updatedAt": "2024-07-18T21:23:26Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "I_kwDOJx2-rs6O67LK",
      "title": "Anapaya review",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/50",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "shitz"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "Following the first wave of ISE feedback, we did quite some work, especially on the control plane draft:\r\n\r\nPlease review (sorted by urgency): \r\n- #63 \r\n- 2.3.3.  Effects of Clock Inaccuracy\r\n-  2.4.  Path Discovery Time and Scalability\r\n-  5.  Security Considerations\r\n- Control Service gRPC API (appendix)\r\n\r\n\r\nOther pointers:\r\n- [Changelog](https://github.com/scionassociation/scion-cp_I-D/releases/tag/draft-dekater-scion-controlplane-04)\r\n- [Datatracker diff v-03 to main](https://author-tools.ietf.org/api/iddiff?doc_1=draft-dekater-scion-controlplane-03&url_2=https://scionassociation.github.io/scion-cp_I-D/draft-dekater-scion-controlplane.txt) \r\n\r\n@shitz @oncilla @sgmonroy could one of you have a look at the overall changes and provide some feedback? If you feel, you can  directly open a PR.  We are planning to have a new submission when datatracker reopens\u00a0on 21.07, before our panrg session to address #48 , and it would be great if we could also incorporate some of your feedback.\r\n\r\n  \r\n\r\n",
      "createdAt": "2024-07-09T10:31:37Z",
      "updatedAt": "2024-10-08T12:44:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "oncilla",
          "authorAssociation": "NONE",
          "body": "> The expiration of a SCION AS certificate typically ranges from\t\r\n \t   3h to 5 years.\r\n \t   \r\n \r\nWhere does this number come from. Most typically it is 3days, and in some very special cases we have 5 days.\r\nI have never seen 5 years outside of some private ISDs\r\n\r\n\r\n",
          "createdAt": "2024-10-07T16:28:19Z",
          "updatedAt": "2024-10-07T16:28:19Z"
        },
        {
          "author": "oncilla",
          "authorAssociation": "NONE",
          "body": ">  Once\t\r\n \t   this number grows above the maximum recommended best PCBs set size of\t\r\n \t   50, \r\n \t   \r\nWhere does this number come from? \r\nDefault is 20. AFAIK:\r\nhttps://github.com/scionproto/scion/blob/aa917bb458d6675efc55b4a23fda2c694094553e/control/beacon/policy.go#L43\r\n\r\n\r\n",
          "createdAt": "2024-10-07T16:38:19Z",
          "updatedAt": "2024-10-07T16:38:19Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "> > The expiration of a SCION AS certificate typically ranges from\r\n> > 3h to 5 years.\r\n> \r\n> Where does this number come from. Most typically it is 3days, and in some very special cases we have 5 days. I have never seen 5 years outside of some private ISDs\r\n\r\nThis comes from https://github.com/scionassociation/scion-cp_I-D/commit/297e8d2c828228e22542cd27c6b708f29586a440  @jiceatscion do you have more background?\r\n\r\n@oncilla you're right, in the PKI draft we write `The RECOMMENDED maximum validity period of a CP AS certificate is: 3 days.` I don't think, however, we set an upper bound to the validity. \r\n\r\nI see two action items: \r\n\r\n- [ ] Correct CP draft to say \"3h to 5 _days_\".\r\n- [ ] Shall we set an upper bound for validity in the PKI draft? Or alternatively say that validity may be up to 5 days instead of 3? ",
          "createdAt": "2024-10-08T07:51:36Z",
          "updatedAt": "2024-10-08T07:51:36Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "The comes from the first version of the draft: https://github.com/scionassociation/scion-cp_I-D/commit/b652927759ca8f6c8767cc9e3ef44a71b0702f23\r\n\r\n> > Once\r\n> > this number grows above the maximum recommended best PCBs set size of\r\n> > 50,\r\n> \r\n> Where does this number come from? Default is 20. AFAIK: https://github.com/scionproto/scion/blob/aa917bb458d6675efc55b4a23fda2c694094553e/control/beacon/policy.go#L43\r\n\r\nIt comes from the initial version of the draft: \r\nhttps://github.com/scionassociation/scion-cp_I-D/commit/b652927759ca8f6c8767cc9e3ef44a71b0702f23\r\nI could not find where this comes from \r\n\r\n@jiceatscion I'd skim through #46 that has some considerations from ETH on beaconing ",
          "createdAt": "2024-10-08T08:12:11Z",
          "updatedAt": "2024-10-08T09:04:44Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > Once\r\n> > this number grows above the maximum recommended best PCBs set size of\r\n> > 50,\r\n> \r\n> Where does this number come from? Default is 20. AFAIK: https://github.com/scionproto/scion/blob/aa917bb458d6675efc55b4a23fda2c694094553e/control/beacon/policy.go#L43\r\n\r\nThese numbers aren't described as recommended values, but as recommended maxima. It came from some back-of-the-envelope calculations made by Matthias and used as worst-case examples in the scalability/Intra-ISD Beaconing section.\r\n\r\nThe code says the default is 20, but then, that isn't a recommended value, just a mechanical place holder: it is 20 even for a core AS (if I managed to follow the code), which, wouldn't be such a good idea, would it?\r\n\r\nI'll try and clarify that notion in the text.\r\n",
          "createdAt": "2024-10-08T11:41:53Z",
          "updatedAt": "2024-10-08T12:28:56Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > The expiration of a SCION AS certificate typically ranges from\r\n> > 3h to 5 years.\r\n> \r\n> Where does this number come from. Most typically it is 3days, and in some very special cases we have 5 days. I have never seen 5 years outside of some private ISDs\r\n\r\nI have no recollection. In all likeliness I was looking for the maximum range ever used and someone must have mentioned the existence the 5y case. If that is such an outlier, I can change the text to emphasize what the reasonable range is.",
          "createdAt": "2024-10-08T12:39:16Z",
          "updatedAt": "2024-10-08T12:39:16Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > > The expiration of a SCION AS certificate typically ranges from\r\n> > > 3h to 5 years.\r\n> > \r\n> > \r\n> > Where does this number come from. Most typically it is 3days, and in some very special cases we have 5 days. I have never seen 5 years outside of some private ISDs\r\n> \r\n> This comes from [297e8d2](https://github.com/scionassociation/scion-cp_I-D/commit/297e8d2c828228e22542cd27c6b708f29586a440) @jiceatscion do you have more background?\r\n> \r\n> @oncilla you're right, in the PKI draft we write `The RECOMMENDED maximum validity period of a CP AS certificate is: 3 days.` I don't think, however, we set an upper bound to the validity.\r\n> \r\n> I see two action items:\r\n> \r\n>     * [ ]  Correct CP draft to say \"3h to 5 _days_\".\r\n> \r\n>     * [ ]  Shall we set an upper bound for validity in the PKI draft? Or alternatively say that validity may be up to 5 days instead of 3?\r\n\r\nAs usual, I can take a Jesuitic approach and make a distinction between common and recommended. That way we leave the pki draft and its recommendation of 3 days alone. In the cp draft I will made the same recommendation and mention 5 days as an outlier. Let's forget the 5y.\r\n",
          "createdAt": "2024-10-08T12:44:35Z",
          "updatedAt": "2024-10-08T12:44:35Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOJx2-rs6QF1Ae",
      "title": "Wormhole attack: mention proof of transit as a defense",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/52",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-18T21:24:58Z",
      "updatedAt": "2024-07-21T00:59:45Z",
      "closedAt": "2024-07-21T00:59:44Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "False alarm, we already discuss this in the data plane section `5.2.1.  Modification of the Path Header`",
          "createdAt": "2024-07-21T00:59:44Z",
          "updatedAt": "2024-07-21T00:59:44Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOJx2-rs6Qjl2o",
      "title": "MTU clarifications",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/57",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "enhancement",
        "Prio 1"
      ],
      "body": "> Feedback Harald Alvestrand\r\n> The description of SCION refers to using UDP/IP as the internal substrate inside an AS, and as a framing protocol on inter-AS links. This means that the Internet MTU of 1500 bytes (1200 for IPv6) will be in effect.\r\nPath hops take 12 bytes + a couple of \u201csegment headers\u201d of 16 bytes - which means that a 10-hop, 3-segment path will take 168 bytes for the routing information. This is enough to reduce the MTU significantly, and the MTU will be unpredictable and maybe variable, since the path for a given packet may change dynamically.\r\n(The packet format, like UDP\u2019s, permits 68K-byte packets. However, fragmentation is A Thing.)\r\n\r\nAlso, I find this text is not clear: \r\n```\r\n mtu: The size of the maximum transmission unit (MTU) within the\r\n      current AS's network.\r\n```\r\nShoudln't this be the minimum MTU among alll intra-domain links in the AS (so the maximum supported MTU for intra-domain forwarding)? Maybe we can find a better wording\r\n\r\nRelated issues: \r\n* DP draft: https://github.com/scionassociation/scion-dp_I-D/issues/39\r\n* Implementations: https://github.com/scionproto/scion/issues/2608 ",
      "createdAt": "2024-07-23T13:38:45Z",
      "updatedAt": "2024-10-04T12:24:39Z",
      "closedAt": "2024-10-04T12:24:38Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Regarding MTUs in the control plane, I would suggest the following:\r\n\r\nI would add a section 3.4.  Paths MTU, saying something like this. Here, I am creating new material. My only reference is the scion daemon which makes exactly these assumptions:\r\n\r\n> Paths represent a sequence of ASes and inter-AS links; each with possibly different MTUs. As a result, a path has an effective MTU which is the least of the MTUs of each link and ASes it traverses. The relevant MTUs for calculating a path's effective MTU are available from the segments used in its construction:\r\n> \r\n> - The MTU of the first and last ASes (represented by the mtu field of the corresponding AS Entries)\r\n> - The MTU of each inter-AS link or peering link (indicated by the ingress_mtu field of each hop or the peer_mtu field of each Peer Entry used)\r\n> - The MTU of any intra-AS network traversed if the ingress and egress interfaces of a hop exist on two different border routers\r\n> \r\n> Regarding the later point: A scion host using a path segment has no means of knowing whether a given hop implies traversing the corresponding AS' internal network or not, and the control service does not reduce the hop's MTU when that is the case. As a result, a scion host building a path must assume that all hops are constrained by the AS's internal network MTU.\r\n>\r\n> This could be optimized if the control service was required to make the hop's ingress_mtu field no greater than the MTU of the AS in case of a hop crossing the internal network. However existing implementations have not historically done this.\r\n\r\nIn section 2.2.1.4.2 AS Entry Signed Body, describe the mtu field as follows:\r\n\r\n> The maximum transmission unit (MTU) that is supported by all hosts within the AS being described. This is set by the control service adding the entry to the beacon. How the control service obtains this information is implementation dependent. Current practice is do make it a configuration item.\r\n\r\nIn section 2.2.1.5 Hop Entry, describe the ingress_mtu field as follows:\r\n\r\n> Specifies the maximum transmission unit (MTU) of the ingress interface (in beaconing direction) of the hop being described. Packets traveling through the associated inter-AS link in either direction cannot exceed this size (not including the L2 header). As a result, no path segment constructed from the containing beacon can have an MTU greater than this. How the control service obtains the MTU of an inter-AS link is implementation depend. It may be discovered or configured. Current practice to make it a configuration item.\r\n\r\n\r\nIn section 2.2.1.7 Peer Entry, describe the peer_mtu field as follows:\r\n> Specifies the maximum transmission unit (MTU) of the peering link being described. Packets traveling through this link in either direction cannot exceed this size (not including the L2 header). As a result, no path segment constructed from the containing beacon can have an MTU greater than this. How the control service obtains the MTU of an inter-AS link is implementation depend. It may be discovered or configured. Current practice to make it a configuration item.\r\n",
          "createdAt": "2024-09-18T10:06:58Z",
          "updatedAt": "2024-09-18T14:35:50Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Great description, feel free to open a PR, and then I'd just do a bit of a wording pass. \r\n\r\nIN section  3.4. Paths MTU maybe you could add references to the various MTU fields (in  2.2.1.4.2 AS Entry Signed Body,  2.2.1.5 Hop Entry,  2.2.1.7 Peer Entry)\r\n\r\n> the control service does not reduce the hop's MTU when that is the case. As a result, a scion host building a path must assume that all hops are constrained by the AS's internal network MTU. \r\n\r\nIn this section, I'd refer to to current implementations rather than control service.\r\n\r\n> not including the L2 header \r\n\r\nL2 --> Underlay/lower layer protocol\r\n\r\n",
          "createdAt": "2024-09-19T15:57:21Z",
          "updatedAt": "2024-09-19T15:57:31Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> L2 --> Underlay/lower layer protocol\r\n\r\nHmm, yes. We need to be clearer with this. The SCION network layer cannot know if any link on the path has a UDP/IP encapsulation, so the MTU described in segments should measure the payload of the encapsulated packet if encapsulated. => for raw L2: real L2 MTU; for V4 underlay: real L2 MTU - 28; for v6 underlay: real  L2 MTU - 48\r\n\r\nI'll try and clarify this concisely. Making a PR now.\r\n",
          "createdAt": "2024-09-20T09:00:58Z",
          "updatedAt": "2024-09-20T09:01:09Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOJx2-rs6RBb0Z",
      "title": "General review - remove forward references",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/58",
      "state": "OPEN",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 2",
        "editorial"
      ],
      "body": "Twin issues: \r\n- https://github.com/scionassociation/scion-dp_I-D/issues/45\r\n- https://github.com/scionassociation/scion-cppki_I-D/issues/36\r\n\r\n\r\n- [x] @knmeynell update terminology and de-hyphenate as in https://github.com/scionassociation/scion-dp_I-D/pull/51\r\n- [ ] @nicorusti general re-read through the draft",
      "createdAt": "2024-07-26T22:50:16Z",
      "updatedAt": "2024-10-11T13:49:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 61,
      "id": "I_kwDOJx2-rs6V3vv2",
      "title": "beaconing: the grpc protobufs are described, but not the errors",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/61",
      "state": "CLOSED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [],
      "body": "Eventhough the Beacon() call does not admit any response, it can still return errors.\r\nA grpc call signatue is (in Go syntax) \"func Call(request) Response, error\". So we need to describe error.\r\nWe should probably check other APIs for the same oversight.\r\n",
      "createdAt": "2024-09-09T16:38:09Z",
      "updatedAt": "2024-09-19T17:33:24Z",
      "closedAt": "2024-09-19T17:33:24Z",
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Current text: \r\n```\r\n2.3.2.4.  Propagation of PCBs in Protobuf Message Format\r\n\r\n   The last step of the above described core and intra-ISD propagation\r\n   procedures is implemented as follows in Protobuf message format:\r\n\r\n      service SegmentCreationService {\r\n          rpc Beacon(BeaconRequest) returns (BeaconResponse) {}\r\n      }\r\n\r\n      message BeaconRequest {\r\n          PathSegment segment = 1;\r\n      }\r\n\r\n      message BeaconResponse {}\r\n\r\n   The propagation procedure includes the following elements:\r\n\r\n   *  SegmentCreationService: Specifies the service via which the\r\n      extended PCB is propagated to the control service of the\r\n      neighboring AS.\r\n\r\n      -  Beacon: Specifies the method that calls the control service at\r\n         the neighboring AS in order to propagate the extended PCB.\r\n\r\n   *  BeaconRequest: Specifies the request message sent by the Beacon\r\n      method to the control service of the neighboring AS.  It contains\r\n      the following element:\r\n\r\n      -  PathSegment: Specifies the path segment to propagate to the\r\n         neighboring AS.  For more information on the Protobuf message\r\n         type PathSegment, see Section 2.2.1.1.\r\n\r\n   *  BeaconResponse: Specifies the response message from the\r\n      neighboring AS.\r\n```\r\n\r\n\r\n\r\n>   BeaconResponse: Specifies the response message from the\r\n      neighboring AS. \r\n\r\nWe could say a bit more than this",
          "createdAt": "2024-09-10T09:43:59Z",
          "updatedAt": "2024-09-10T09:44:38Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOJx2-rs6Y19go",
      "title": "Add changelog in appendix",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/64",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "knmeynell"
      ],
      "labels": [
        "Prio 1"
      ],
      "body": "",
      "createdAt": "2024-10-03T14:56:20Z",
      "updatedAt": "2024-10-11T14:43:40Z",
      "closedAt": "2024-10-11T14:43:40Z",
      "comments": []
    },
    {
      "number": 67,
      "id": "I_kwDOJx2-rs6Y82gT",
      "title": "gRPC API - remove duplicated definitions in appendix",
      "url": "https://github.com/scionassociation/scion-cp_I-D/issues/67",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [
        "jiceatscion"
      ],
      "labels": [
        "Prio 2"
      ],
      "body": "With #24 we introduced a description of the gRPC CP API in the appendix.  However, with this, some definitions are duplicated. For example, `ASEntrySignedBody` is defined in both `2.2.1.4.2.  AS Entry Signed Body` and in the appendix. \r\n \r\nTODO: \r\n- [x] evaluate wether we leave the gRPC API descriptions all in the appendix or in various paragraphs --> we leave them in both places\r\n- [ ] ~some gRPC definitions are duplicated, duplicates should be removed (preferably, leave them in the respective chapters rather than in appendix). A non-exhaustive list:~\r\n  - `SegmentType`\r\n  - `SegmentsRegistrationRequest`\r\n  - `SegmentCreationService`\r\n  - `BeaconRequest`\r\n  - `BeaconResponse`\r\n  - `PathSegment`\r\n  - `SegmentInformation`\r\n  - `ASEntry`\r\n  - `ASEntrySignedBody`\r\n  - `HopEntry`\r\n  - `PeerEntry`\r\n  - `HopField`\r\n  - `SignedMessage`\r\n  - `Header`\r\n  - `HeaderAndBodyInternal`\r\n  - `VerificationKeyID`\r\n- [x] make sure there are proper cross-references to the respective gRPC requests For example: \r\n  - `SegmentsRequest` right now it is not clear which requests are used for path lookups by endpoints, e.g. we should mention that an endpoint sends a `SegmentsRequest` to its path server.\r\n  - `SegmentsResponse`\r\n  - `SignatureAlgorithm`\r\n- [x] We sometimes call the API descritpions in the text \"on Code-Level\", we should use a better wording (e.g. gRPC API)\r\n- [x] check descriptions and typos  (e.g. `// This API is exposed by the control services of core ASes expose this on the SCION dataplane and also by all`",
      "createdAt": "2024-10-04T10:58:56Z",
      "updatedAt": "2024-10-08T08:29:56Z",
      "closedAt": "2024-10-08T08:29:56Z",
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am not sure we should de-duplicated the APIs between text and index. The APIs in the text are for explanation purposes while the appendix is for reference. The appendix is there to make sure that we document the whole API. If we de-duplicate, then what do we name the appendix: \"Those bits and pieces that we haven't mentioned somewhere in the document already\"? That's not nice to future users of the spec.",
          "createdAt": "2024-10-04T11:38:47Z",
          "updatedAt": "2024-10-04T11:38:47Z"
        },
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I tried my best. Probably missed a spot or two.\r\nThere weren't many opportunities to reference the appendix. Most places had enough documentation in-line.\r\nI couldn't remember if there was anything missing from the appendix. Was there?",
          "createdAt": "2024-10-04T16:59:58Z",
          "updatedAt": "2024-10-04T16:59:58Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJx2-rs5YmfhB",
      "title": "Cdk addressing feedback",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/1",
      "state": "MERGED",
      "author": "cdekater",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-23T13:57:12Z",
      "updatedAt": "2023-08-23T14:04:21Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d5cc2c4cfa275a0fef6a1d0c601c88cd7f379a40",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk_addressing-feedback",
      "headRefOid": "38e5e307f15a9371a4b7a9ca14cd9071a942424f",
      "closedAt": "2023-08-23T14:04:21Z",
      "mergedAt": "2023-08-23T14:04:21Z",
      "mergedBy": "cdekater",
      "mergeCommit": {
        "oid": "c4dc53e6651bc781cc36aa4e0a0dd6ad894045b3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJx2-rs5Ymx-Q",
      "title": "Final corrections",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/2",
      "state": "MERGED",
      "author": "cdekater",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-23T14:41:29Z",
      "updatedAt": "2024-05-28T14:02:31Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "c4dc53e6651bc781cc36aa4e0a0dd6ad894045b3",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk_addressing-feedback",
      "headRefOid": "d42375418c49f53429755b7f79aa0654438e1d2c",
      "closedAt": "2023-08-23T14:41:39Z",
      "mergedAt": "2023-08-23T14:41:39Z",
      "mergedBy": "cdekater",
      "mergeCommit": {
        "oid": "530f3f0cd218685a12eb4df72024f252446b07d7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOJx2-rs5hbWZZ",
      "title": "Update Security Considerations and IANA Section",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/3",
      "state": "MERGED",
      "author": "cdekater",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-07T14:11:45Z",
      "updatedAt": "2024-02-23T18:00:34Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "5bef5e20fe1ac7147d271afc1aec46e1d2ce98a9",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk-security-considerations-cp",
      "headRefOid": "dfb3675b91e6bcf78ded6bd54eb2863850884c8c",
      "closedAt": "2024-02-23T18:00:27Z",
      "mergedAt": "2024-02-23T18:00:27Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "cdd780068b10d3a42eacf4bcbf092bcfd518ed40"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5phCfW",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "The \"customer\" term is really confusing. I would prefer it changed. Everything else is just my two cents.",
          "createdAt": "2023-12-07T14:18:44Z",
          "updatedAt": "2023-12-07T14:59:29Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "What's \"AS M\" in \"for a malicious AS M\"? Oh, I get it. It's a name for the hypothetical AS that is malicious. The phrasing doesn't make it too obvious.\r\n\r\nI would suggest a few things:\r\n* In security circles, the good guys trying to communicate are typically called A (for Alice), and B (for Bob), while the villain is C (for Charlie).\r\n* May be start with. In what follows, we postulate two legitimate ASes, A (operated by Alice) and B (operated by Bob), and a malicious AS C, operated by Charlie.\r\n\r\nThat might make it easier to describe motivations and methods.\r\n",
              "createdAt": "2023-12-07T14:18:44Z",
              "updatedAt": "2023-12-07T14:59:29Z"
            },
            {
              "originalPosition": 61,
              "body": "I think the first attack might deserve a little more explanation:\r\n* How could charlie block the Alice-Bob connection?\r\n* Why would the traffic be re-directed to Charlie, without Charlie being already in a privileged position?\r\n* Why is it that we can't prevent it?\r\nI personally do not have the answers.\r\n",
              "createdAt": "2023-12-07T14:31:05Z",
              "updatedAt": "2023-12-07T14:59:29Z"
            },
            {
              "originalPosition": 90,
              "body": "In what follows, I think that by \"customer\" you mean \"consumer [of BCPs]\" right? \"Customer\" is confusing; it implies a commercial relationship, which doesn't seem to apply here. Or does it?",
              "createdAt": "2023-12-07T14:53:50Z",
              "updatedAt": "2023-12-07T14:59:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5p6kWF",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T08:57:46Z",
          "updatedAt": "2023-12-12T14:56:37Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": ".... and injecting its own ~~hop fields~~ _AS entry_ into the PCB toward downstream ASes.",
              "createdAt": "2023-12-12T08:57:46Z",
              "updatedAt": "2023-12-12T14:56:37Z"
            },
            {
              "originalPosition": 61,
              "body": "> The second attack is detectable by downstream ASes, because a PCB disseminated by AS A towards AS B contains an identifier for the egress interface from AS A to AS B, protected by A's signature\r\n\r\nI think the interface identifier is not what is relevant here. The \"next ISD AS\" field in the AS Entry is the thing that will allow a verifier to detect that something is wrong.",
              "createdAt": "2023-12-12T09:45:13Z",
              "updatedAt": "2023-12-12T14:56:37Z"
            },
            {
              "originalPosition": 58,
              "body": "It's not really clear what the attack here is and why such a modified PCB would be attractive.",
              "createdAt": "2023-12-12T09:46:07Z",
              "updatedAt": "2023-12-12T14:56:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhOT0",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T14:58:46Z",
          "updatedAt": "2023-12-18T14:58:47Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "@jiceatscion, thank you for your suggestion!\r\nI have removed the M for malicious, and also rephrased the text a bit. Hope it is more clear now. ",
              "createdAt": "2023-12-18T14:58:46Z",
              "updatedAt": "2023-12-18T14:58:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhRH_",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:02:11Z",
          "updatedAt": "2023-12-18T15:02:11Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "@jiceatscion, I think you have a fair point. But unfortunately, I also have no answers. I took it from the SCION book, and given the fact that there was no explanation there, I thought it was obvious for all people with an IT background...   ",
              "createdAt": "2023-12-18T15:02:11Z",
              "updatedAt": "2023-12-18T15:02:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhRm7",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:03:13Z",
          "updatedAt": "2023-12-18T15:03:14Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "@jiceatscion, thanks. I have removed \"customer\" everywhere and replaced it with downstream ASes.  ",
              "createdAt": "2023-12-18T15:03:13Z",
              "updatedAt": "2023-12-18T15:03:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhSm2",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:05:02Z",
          "updatedAt": "2023-12-18T15:05:02Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "@matzf: thanks for the correction/feedback!\r\nRegarding \"attractive\": I have replaced it with \"alternative\". ",
              "createdAt": "2023-12-18T15:05:02Z",
              "updatedAt": "2023-12-18T15:05:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qhS8F",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T15:05:40Z",
          "updatedAt": "2023-12-18T15:05:40Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "@matzf: good point, thanks! I have changed the text accordingly. ",
              "createdAt": "2023-12-18T15:05:40Z",
              "updatedAt": "2023-12-18T15:05:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qqzBK",
          "commit": {
            "abbreviatedOid": "8e08e0f"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-19T19:42:11Z",
          "updatedAt": "2023-12-19T19:42:11Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nThis document has no IANA actions.\r\n\r\nThe ISD and SCION AS number are SCION-specific numbers. They are currently allocated by Anapaya Systems, a provider of SCION-based networking software and solutions. This task is currently being transitioned  from Anapaya to the SCION Association.\r\n```\r\nBesides that, I'd add a reference to: https://docs.anapaya.net/en/latest/resources/isd-as-assignments \r\nAs we (Association) take over the task, we will update this to our page. \r\n",
              "createdAt": "2023-12-19T19:42:11Z",
              "updatedAt": "2023-12-19T19:42:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qq0CK",
          "commit": {
            "abbreviatedOid": "8e08e0f"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-19T19:45:15Z",
          "updatedAt": "2023-12-19T19:45:15Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Also, I would delete from section 1.5.1 this text: \r\n``` \r\nA suitable mechanism to globally coordinate the assignation of ISD\r\n   numbers does not yet exist.  However, we hope that in the future an\r\n   organization such as ICANN or a regional Internet registry (e.g.,\r\n   RIPE NCC) will take on the responsibility of assigning ISD and AS\r\n   numbers.\r\n   ```\r\n   This is because the mechanism exists and it is Anapaya.. To get to have internet registries, we need the IANA section, which needs an IETF publication... So I'd just omit this text .\r\n   \r\n   Also, I'd add the same reference to Anapaya's page also there. \r\n   ",
              "createdAt": "2023-12-19T19:45:15Z",
              "updatedAt": "2023-12-19T19:45:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5qwGfp",
          "commit": {
            "abbreviatedOid": "8e08e0f"
          },
          "author": "cdekater",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T14:20:58Z",
          "updatedAt": "2023-12-20T14:20:58Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "@nicorusti: Thank you for your feedback. I have changed this draft, and also the other two drafts, accordingly.\r\nBest\r\nCorine",
              "createdAt": "2023-12-20T14:20:58Z",
              "updatedAt": "2023-12-20T14:20:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5sWGUL",
          "commit": {
            "abbreviatedOid": "5f59666"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "My comments have been sufficiently addressed for now.",
          "createdAt": "2024-01-12T09:09:32Z",
          "updatedAt": "2024-02-22T18:24:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5srdSP",
          "commit": {
            "abbreviatedOid": "2f4ecf5"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T13:15:54Z",
          "updatedAt": "2024-01-16T13:15:54Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "```suggestion\r\nMany thanks go to William Boye (Swiss National Bank), Matthias Frei (SCION Association), Kevin Meynell (SCION Association), Juan A. Garcia Prado (ETH Zurich), and Roger Lapuh (Extreme Networks) for reviewing this document. We are also very grateful to Adrian Perrig (ETH Zurich), for providing guidance and feedback about each aspect of SCION. Finally, we are indebted to the SCION development teams of Anapaya and ETH Zurich, for their practical knowledge and for the documentation about the SCION Control Plane, as well as to the authors of [CHUAT22] - the book is an important source of input and inspiration for this draft.\r\n```",
              "createdAt": "2024-01-16T13:15:54Z",
              "updatedAt": "2024-01-16T13:15:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5s_ihM",
          "commit": {
            "abbreviatedOid": "2f4ecf5"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T02:31:27Z",
          "updatedAt": "2024-01-18T02:31:27Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "I'm not sure 'frustrate' is the right term here, but I need to understand the context better. ",
              "createdAt": "2024-01-18T02:31:27Z",
              "updatedAt": "2024-01-18T02:31:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5s_jA8",
          "commit": {
            "abbreviatedOid": "2f4ecf5"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T02:33:18Z",
          "updatedAt": "2024-01-18T03:17:51Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nThe first kind of risk to the beaconing process in the control plane comes from an adversarial entity that controls one or all core ASes in an ISD (e.g., a government). One possible attack would be when this entity stops the core AS(es) from propagating PCBs, thus frustrating the discovery of new paths. In this case, downstream ASes will notice that PCBs are no longer being propagated, but all previously discovered (and still valid) paths are still usable for data-plane forwarding until they expire.\r\n```",
              "createdAt": "2024-01-18T02:33:18Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nAnother possible attack of this adversarial entity could be to shut down the control services, by compelling core and non-core ASes to stop replying to path requests, or only return a subset of all available paths. If this attack were used in conjunction with blackholing, where traffic is redirected to a non-existent resource, senders in the ISD would have difficulty getting traffic out of the ISD. In SCION, however, existing paths can continue to be used in the data plane as long as the traversed ASes allow the forwarding.\r\n```",
              "createdAt": "2024-01-18T02:35:23Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 110,
              "body": "```suggestion\r\n- The adversary could intercept and disseminate a PCB on its way from a specific AS A to the neighboring AS B, and inject its own AS entry into the PCB toward downstream ASes. The goal is to offer AS B an alternative up-segment that traverses the adversary's own AS to the core.\r\n```",
              "createdAt": "2024-01-18T02:37:18Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n- The adversary could modify the hop fields of an already existing path, in order to insert its own AS in the path.\r\n```",
              "createdAt": "2024-01-18T02:38:15Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nThe first type of attack generally cannot be prevented, but SCION is able to mitigate the other two types of attack.\r\n\r\nThe second type of attack is detectable by downstream ASes, because a PCB disseminated by AS A towards AS B contains the \"Next ISD AS\" field in the entry of AS A, pointing to AS B, and protected by A's signature. This will cause verification of the manipulated inbound PCBs to fail, as the adversary's PCBs cannot contain A's correct signature.\r\n\r\nThe third type of attack is made impossible by the hop field's MAC, which protects the hop field's integrity and chains it with the previous hop fields on the path.\r\n```",
              "createdAt": "2024-01-18T02:40:16Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nPath selection is one of the main benefits of SCION compared to the current Internet, where hosts have no control over the forwarding paths that their packets traverse. However, with the benefits of path selection comes the risk of endpoints selecting non-optimal paths. This section discusses some mechanisms with which an adversary can attempt to trick endpoints downstream (in the direction of beaconing) into choosing non-optimal paths. The goal of such attacks is to make paths that are controlled by the adversary more attractive than other available paths.\r\n```",
              "createdAt": "2024-01-18T02:43:26Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 150,
              "body": "```suggestion\r\nIn general, the number of PCBs that an adversary can announce this way scales exponentially with the number of consecutive ASes the adversary controls. However, this also decreases their chance of being chosen by a downstream AS for PCB dissemination or by an endpoint for path construction, as these relatively long paths have to compete with other, shorter paths. Furthermore, both endpoints and downstream ASes can detect poorer quality paths in the data plane and switch to better paths.\r\n```",
              "createdAt": "2024-01-18T02:57:14Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 156,
              "body": "```suggestion\r\nWithout specific prevention mechanisms, these so-called wormhole attacks are unavoidable in routing. The current implementation of SCION does not yet provide wormhole prevention mechanisms.\r\n```",
              "createdAt": "2024-01-18T02:57:55Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            },
            {
              "originalPosition": 162,
              "body": "```suggestion\r\nTo defend against this kind of wormhole attacks, it is necessary to be able to detect these attacks. The current implementation of SCION is not yet able to do this.\r\n```",
              "createdAt": "2024-01-18T02:58:35Z",
              "updatedAt": "2024-01-18T03:17:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xIfzV",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T12:57:42Z",
          "updatedAt": "2024-02-23T12:57:42Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "This is coming from section 7.4.1 Path Hijacking through Interposition. These attacks requires the adversary to be on-path (which is a very strong assumption).  I clarified this in the text and reworded. Also the last attach could not be prevented, but the different path would be immediately visible to endpoints.",
              "createdAt": "2024-02-23T12:57:42Z",
              "updatedAt": "2024-02-23T12:57:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xIqm4",
          "commit": {
            "abbreviatedOid": "d5b826d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T13:17:45Z",
          "updatedAt": "2024-02-23T13:17:46Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Metadata is generally contained in PCB extensions. Such extensions that express path properties are not described in this draft, as far as I know they are also not widely used in productive implementations. \r\nI'll therefore remove this section, as I feel it does not apply to the content of the draft. ",
              "createdAt": "2024-02-23T13:17:45Z",
              "updatedAt": "2024-02-23T13:17:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xJU8n",
          "commit": {
            "abbreviatedOid": "42a5d09"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T14:40:34Z",
          "updatedAt": "2024-02-23T14:40:34Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "This part about shutting down the control service of an AS is more of a kill-switch than an attack, and it requires access or control over an AS. This cannot be performed remotely. \r\nI'd therefore remove this paragraph",
              "createdAt": "2024-02-23T14:40:34Z",
              "updatedAt": "2024-02-23T14:40:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xJdPv",
          "commit": {
            "abbreviatedOid": "3e768ad"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T14:54:35Z",
          "updatedAt": "2024-02-23T14:54:35Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "This seems to me just a special case of \"Path Hijacking through Interposition\"  described in the paragraph above. I'd leave it for now, but perhaps it could be merged to the paragraph above in the long term.\r\n",
              "createdAt": "2024-02-23T14:54:35Z",
              "updatedAt": "2024-02-23T14:54:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOJx2-rs5jdeyR",
      "title": "Disambiguate the use of \"MAC\".",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/4",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses: https://github.com/scionassociation/standards/issues/98\r\nFixes #5 ",
      "createdAt": "2024-01-08T10:33:57Z",
      "updatedAt": "2024-02-22T16:55:37Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "41a1ec696545909a3b1bff38af8af3a19d0628c4",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "fix_MAC",
      "headRefOid": "c9937d970ee8e565129b8b9e4fcb2e85d556c572",
      "closedAt": "2024-02-22T16:55:34Z",
      "mergedAt": "2024-02-22T16:55:34Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "65f3a7186d96a7a39b1bb5627a713e0674b630b2"
      },
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks! Time to remove the 2-approval rule?",
          "createdAt": "2024-02-22T15:06:49Z",
          "updatedAt": "2024-02-22T15:06:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xBAyg",
          "commit": {
            "abbreviatedOid": "c9937d9"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM \r\n",
          "createdAt": "2024-02-22T15:02:46Z",
          "updatedAt": "2024-02-22T15:02:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOJx2-rs5jkC0K",
      "title": "Declare SCION AS numbers independant from BGP ASNs.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/10",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is my proposal to address the scion/BGP AS number objection.\r\n\r\nFixes #9 ",
      "createdAt": "2024-01-09T10:36:18Z",
      "updatedAt": "2024-02-22T18:20:59Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "41a1ec696545909a3b1bff38af8af3a19d0628c4",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "AS_num",
      "headRefOid": "39fbe9c3bfd94195b70b4652188102043a085417",
      "closedAt": "2024-02-22T18:20:56Z",
      "mergedAt": "2024-02-22T18:20:56Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5bef5e20fe1ac7147d271afc1aec46e1d2ce98a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xC7u1",
          "commit": {
            "abbreviatedOid": "39fbe9c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I edited a bit of wording, it overall looks good to me. ",
          "createdAt": "2024-02-22T18:20:28Z",
          "updatedAt": "2024-02-22T18:20:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOJx2-rs5j1VQk",
      "title": "Improve references classification and uses of MUST and SHOULD",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/11",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There's still some more MUST required IMHO.\r\n",
      "createdAt": "2024-01-11T16:38:55Z",
      "updatedAt": "2024-05-17T09:40:16Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "cdd780068b10d3a42eacf4bcbf092bcfd518ed40",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Normative_refs_terms",
      "headRefOid": "6041f1a1f255486346f6309f72f5dc4ab96677dd",
      "closedAt": "2024-02-23T18:43:23Z",
      "mergedAt": "2024-02-23T18:43:23Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "9ff5f72e47343502fba72129ec79d4f5e46a44b6"
      },
      "comments": [
        {
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As far as I remember, I went through every instance of must may should and their negatives. The should that I left in lowercase were likely intentional: layman use of the word for phrasing as opposed to normative, or sufficiently optional to not deserve an uppercase \"should\". But my opinion is just that, of course.\r\n\r\n",
          "createdAt": "2024-02-26T09:34:27Z",
          "updatedAt": "2024-02-26T09:34:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xLENk",
          "commit": {
            "abbreviatedOid": "6041f1a"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Hi JC, IN see that you left several should etc in lowercase. Was this intentional, based on [rfc8174](https://datatracker.ietf.org/doc/html/rfc8174)?\r\n\r\nI agree with you that some more work on these terms might be needed, I openet #12  to track this, as I'll merge this one to submit a new version to datatracker ",
          "createdAt": "2024-02-23T18:43:01Z",
          "updatedAt": "2024-02-23T18:43:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOJx2-rs5oBktS",
      "title": "Security considerations - DoS",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/13",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-27T10:18:47Z",
      "updatedAt": "2024-05-17T09:40:14Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "9ff5f72e47343502fba72129ec79d4f5e46a44b6",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cdk-security-considerations-cp",
      "headRefOid": "ebaa0373a7d916e8fd82865abff954dc582ef3dc",
      "closedAt": "2024-03-04T15:23:53Z",
      "mergedAt": "2024-03-04T15:23:53Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "@knmeynell if you can have a wording pass, can you go through the whole security considerations section? (lines 1475-1565)?",
          "createdAt": "2024-03-01T11:02:52Z",
          "updatedAt": "2024-03-01T11:02:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5xiB5t",
          "commit": {
            "abbreviatedOid": "c90b1b9"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T20:27:24Z",
          "updatedAt": "2024-02-27T20:27:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Suggestion:\r\n\r\n---\r\n\r\n[...] e.g. filtering, geo-blocking or using cookies.\r\n\r\nRPC methods that are available to endpoints in the local AS are strictly separate from methods available to from other ASes. Specifically, expensive recursive path segment and trust material lookups are thus shielded from abuse by unauthorized entities.\r\nFor RPC methods exposed to other ASes, the control service implementation minimizes its attack surface by rejecting illegitimate callers based on ISD/AS, path type and length and any other available data points as soon as possible, i.e. immediately after determining the request type. For example:\r\n- `SegmentCreationService.Beacon` can only be called by direct neighbors and thus calls from peers with a path length greater than one can immediately be discarded. \r\n- `SegmentRegistrationService.SegmentsRegistration` can only be called from within the same ISD, thus the source address must match the local ISD and the number of path segments must be 1.\r\n",
              "createdAt": "2024-02-27T20:27:24Z",
              "updatedAt": "2024-02-27T20:27:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5xo4Ny",
          "commit": {
            "abbreviatedOid": "c90b1b9"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T15:16:32Z",
          "updatedAt": "2024-02-28T15:16:33Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Awesome, that is exactly what I was looking for. I introduced your points. I just slightly changed the wording of the first part  a bit (e.g. on local AS), but the concept should be unchanged.  ",
              "createdAt": "2024-02-28T15:16:33Z",
              "updatedAt": "2024-02-28T15:16:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDOJx2-rs5wW4yN",
      "title": "Add tentative description of CS API.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/24",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Documents connectRPC as the RPC protocol instead of the old gRPC/HTTP2/QUIC stack. Document service resolution minimally.\r\n\r\nFixes #15\r\n",
      "createdAt": "2024-05-23T16:45:12Z",
      "updatedAt": "2024-06-04T19:52:01Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "grpc_api_described",
      "headRefOid": "573335ff67a69ede6b39860864e201ea37aaff90",
      "closedAt": "2024-06-04T08:55:03Z",
      "mergedAt": "2024-06-04T08:55:03Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "66253684fc5e9ae56ad10f7cc1677016b0df7a27"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thanks a lot and sorry for my late review. LGTM, I Just fixed a reference and a word in #35 ",
          "createdAt": "2024-06-04T19:51:01Z",
          "updatedAt": "2024-06-04T19:52:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58AqRM",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-27T09:58:27Z",
          "updatedAt": "2024-05-27T12:13:04Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Tangential: I saw this note:\r\n```\r\n**Note:** The SCION open-source implementation makes use of Protobuf (Protocol Buffers), a free and open-source cross-platform data format developed by Google and used to serialize structured data. The messages and remote procedure calls described below are in \"proto3\" language. For more information on Protobuf, see the official [\"Protocol Buffers Documentation\"](https://protobuf.dev/).\r\n```\r\n\r\nThis looks a bit out of place where it currently is and I think it's redundant with the information in the \"## Communication protocol\" section. I'd suggest to remove it (or integrate anything that could still be relevant into the Communication Protocol section).",
              "createdAt": "2024-05-27T09:58:27Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 16,
              "body": "definitino -> definition",
              "createdAt": "2024-05-27T09:59:34Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 14,
              "body": "Personally, I would only describe the connect RPC approach and leave out the complication that there is an ongoing transition. Optimistically, this will be complete once this document is published. We know that it works, we know how to do the transition with forwards and backwards and sideways compatibility etc and I think it's fair to assume that a future reader of the document will not have any interest in our current sub-optimal implementation.\r\n\r\n@nicorusti?",
              "createdAt": "2024-05-27T10:07:29Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 16,
              "body": "There are still some detail about how QUIC connections are established missing here.\r\nMy suggestion would be to add an Appendix B with this information, something like \"Data plane considerations for control plane\".\r\n\r\n- the paths:\r\n  - Client side of QUIC connection determines path, server uses reverse path.\r\n  - neighbor-to-neighbor ASes use one-hop paths that are always available to control plane nodes. This is used for all path discovery.\r\n  - path segment registration uses the path being registered.\r\n  - path lookup is incremental (not sure if this is already described somewhere else); use any known up-segment to lookup core segments to destination ISD. Then use any up-core paths to lookup down segments in destination ISD.\r\n    For this type of requests, typically many paths will be available to choose from. Basic implementation can pick random path and simply retry on faults. Better would be to keep track of path properties like experienced latency, loss rate, etc and pick \r\n  - None of these are binding, CS can arbitrarily pick any available path.\r\n- Service address resultion: even though I'd like this to go away, I'm not optimistic about finding a consensus for an alternative approach for this and implementing it quickly. I think we should include how this currently works:\r\n  - document the message types from `svc_resolution.proto`.\r\n  - the service resolution protocol:\r\n     - send service resolution request ; single UDP pkt with `ServiceResolutionRequest{}`  destination port 0, dst host SVC_CS. Note request is an empty protobuf message, so this is an empty datagram.\r\n     - whoever is SVC_CS in destination AS (resolved by ingress router, see service addresses in dataplane draft) sends single UDP pkt reply to source ISD-AS,address:port of the request with `ServiceResolutionResponse{}` body, that contains a host addresses + UDP port for the transport type \"QUIC\".\r\n  - initiate QUIC connection to address in `response.transports[\"QUIC\"]`.\r\n- TLS certificates for QUIC: for all the RPCs described here, self signed dummy certificates can be used, as we do _not_ check the server (or client) certificates; the messages transported over the RPCs are individually authenticated and we do not need a secure channel.\r\n  - Side note: in practice, we use CP-PKI AS certificates, just because we can, and because we use it to establish a secure channel for experimental extensions that _do_ benefit from a secure channel (i.e. for DRKey, but perhaps we shouldn't mention this).",
              "createdAt": "2024-05-27T11:51:38Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 163,
              "body": "Remove this line; it doesn't do anything and should long have been deleted.",
              "createdAt": "2024-05-27T11:57:03Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 125,
              "body": "Maybe try phrase this to clarify that this is the API exposed to other ASes, i.e. to other control services.",
              "createdAt": "2024-05-27T12:04:26Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 225,
              "body": "The `SignedMessage` message type and its internal details were previously included here, I think we need it. We can either add it back directly into the same code block, or we can create a separate block with just these helper types.\r\nWe need:\r\n- SignedMessage \r\n- HeaderAndBodyInternal\r\n- Header\r\n- VerificationKeyID\r\n- SignatureAlgorithm (previously missing).",
              "createdAt": "2024-05-27T12:11:38Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            },
            {
              "originalPosition": 141,
              "body": "Maybe add a comment to hint that this LookupService is only exposed on control services of core ASes?",
              "createdAt": "2024-05-27T12:12:48Z",
              "updatedAt": "2024-05-27T12:13:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58IrUD",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:29:03Z",
          "updatedAt": "2024-05-28T12:29:03Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "I wasn't aware of that. Looking into the code, I can see that non-core servers are different (they are forwarding servers - presumably forwarding to core servers). But the API is the exact same, so if we need to make a distinction, this might not be the most relevant spot. Do we have to mandate that non-core servers know nothing?",
              "createdAt": "2024-05-28T12:29:03Z",
              "updatedAt": "2024-05-28T12:29:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8LC",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:18Z",
          "updatedAt": "2024-05-28T12:58:18Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "gone",
              "createdAt": "2024-05-28T12:58:18Z",
              "updatedAt": "2024-05-28T12:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8MS",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:20Z",
          "updatedAt": "2024-05-28T12:58:20Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "done",
              "createdAt": "2024-05-28T12:58:20Z",
              "updatedAt": "2024-05-28T12:58:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8N3",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:22Z",
          "updatedAt": "2024-05-28T12:58:22Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "done",
              "createdAt": "2024-05-28T12:58:22Z",
              "updatedAt": "2024-05-28T12:58:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8QK",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:25Z",
          "updatedAt": "2024-05-28T12:58:25Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Did my best without writing a whole new chapter.\r\n",
              "createdAt": "2024-05-28T12:58:25Z",
              "updatedAt": "2024-05-28T12:58:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8Vm",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:34Z",
          "updatedAt": "2024-05-28T12:58:34Z",
          "comments": [
            {
              "originalPosition": 163,
              "body": "gone",
              "createdAt": "2024-05-28T12:58:34Z",
              "updatedAt": "2024-05-28T12:58:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8Yp",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:38Z",
          "updatedAt": "2024-05-28T12:58:38Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "done",
              "createdAt": "2024-05-28T12:58:38Z",
              "updatedAt": "2024-05-28T12:58:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58I8ex",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T12:58:48Z",
          "updatedAt": "2024-05-28T12:58:48Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "done\r\n",
              "createdAt": "2024-05-28T12:58:48Z",
              "updatedAt": "2024-05-28T12:58:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58b2Y7",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-30T08:52:12Z",
          "updatedAt": "2024-05-30T08:52:12Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "> But the API is the exact same, so if we need to make a distinction, this might not be the most relevant spot\r\n\r\nAs far as I remember, for the non-core ASes the Segment Lookup API is only exposed on the AS-internal TCP gRPC server. It doesn't exist in the inter-AS SCION/QUIC gRPC service. (See https://github.com/scionproto/scion/blob/9d52e2f8d2211427707dfe5b4028158759ebddeb/control/cmd/control/main.go#L366C1-L371C1; the SegmentLookupService is only available on the QUIC server in core ASes)",
              "createdAt": "2024-05-30T08:52:12Z",
              "updatedAt": "2024-05-30T08:52:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58dq63",
          "commit": {
            "abbreviatedOid": "468675c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-30T12:31:37Z",
          "updatedAt": "2024-05-30T12:31:37Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "done\r\n",
              "createdAt": "2024-05-30T12:31:37Z",
              "updatedAt": "2024-05-30T12:31:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580pk5",
          "commit": {
            "abbreviatedOid": "573335f"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-03T15:17:10Z",
          "updatedAt": "2024-06-03T15:17:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOJx2-rs5we-iv",
      "title": "Address clock drift.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/25",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is almost identical to what I [added to the DP draft](https://github.com/scionassociation/scion-dp_I-D/pull/19). I also fixed a weird sentence about the routers dropping packets with expired hops.\r\n\r\nThe reviewers attention is kindly directed to section 2.2.3.\r\n\r\nAddresses #18 ",
      "createdAt": "2024-05-24T16:05:35Z",
      "updatedAt": "2024-06-05T15:02:05Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "66253684fc5e9ae56ad10f7cc1677016b0df7a27",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "clock_drift",
      "headRefOid": "3f0e73de94f2002ec0197c9c0ef1d52c5e3f48af",
      "closedAt": "2024-06-05T15:02:00Z",
      "mergedAt": "2024-06-05T15:02:00Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "60418e3460510480b9560bcaaf601a4ef2031c90"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58nyMh",
          "commit": {
            "abbreviatedOid": "e4df3eb"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Hi @jiceatscion there are a few things worth addressing, the biggest one regards the new section on clock drift. Let's perhaps discuss this directly after you take a look at my comments. ",
          "createdAt": "2024-05-31T13:12:11Z",
          "updatedAt": "2024-05-31T16:12:22Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Neighbor-based path discovery: Path discovery in SCION is performed by the beaconing mechanism. In order to participate in this process, an AS only needs to be aware of its direct neighbors. As long as no path segments are available, communicating with the neighboring ASes is possible with the one-hop path type, which does not rely on any path information. SCION uses these *one-hop paths* to propagate PCBs to neighboring ASes to which no forwarding path is available yet. The One-Hop Path Type is described in more detail in {{I-D.scion-dp}}.\r\n```",
              "createdAt": "2024-05-31T13:12:42Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n```\r\nIs there any reason why you added these newlines? \r\nApparently they don't change anything in the final draft, see \r\nhttps://author-tools.ietf.org/iddiff?url1=draft-dekater-scion-controlplane-03&url2=https://scionassociation.github.io/scion-cp_I-D/clock_drift/draft-dekater-scion-controlplane.txt&difftype=--html",
              "createdAt": "2024-05-31T13:15:18Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 78,
              "body": "What happens if an AS receives a future PCB that is invalid? Must it be dropped? This should be clearer in the text, A suggestion including some word smithing (assuming it MUST be dropped): \r\n```suggestion\r\n- `timestamp`: The 32-bit timestamp indicates the creation time of this PCB. It is set by the originating core AS. The expiration time of each hop field in the PCB is computed relative to this timestamp. The timestamp is encoded as the number of seconds elapsed since the POSIX Epoch (1970-01-01 00:00:00 UTC).\r\n```\r\n\r\n> The expiration time of the corresponding path segment\r\n\r\nAlso, shouldn't expiration time in a PCB refer to hop fields and not to the path segment, or am I confused?\r\n",
              "createdAt": "2024-05-31T13:43:48Z",
              "updatedAt": "2024-06-03T11:55:27Z"
            },
            {
              "originalPosition": 111,
              "body": "I'd remove the reference to expired hop fields in the data plane, and keep this info in the DP draft directly.\r\n```suggestion\r\n- `exp_time`: The 8-bit encoded expiration time of the hop field, indicating its validity. This field expresses a duration in seconds according to the formula: `duration = (1 + exp_time) * (24*60*60/256)`. The minimum duration is therefore 337.5 s. This duration is relative to the PCB creation timestamp set in the PCB's segment information component (see also [](#seginfo)). By combining these two values, an AS can compute the absolute expiration time of the hop field.\r\n```",
              "createdAt": "2024-05-31T14:01:16Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n- `mac`: The message authentication code (MAC) used in the data plane to verify the hop field. {{I-D.scion-dp}} provides a detailed description of the computation of the MAC and the verification of the hop field.\r\n```",
              "createdAt": "2024-05-31T14:06:49Z",
              "updatedAt": "2024-06-03T12:00:48Z"
            },
            {
              "originalPosition": 132,
              "body": "I'd remove this section from here and put it later. How about we put it in  section `Reception of PCBs`? or after `Path-Segment Registration on Code-Level`? \r\n\r\nAlso, I'd  separate text for each one of the drafts. Here, I'd mention only text that is specific to the control plane, and I'd put it somewhere else. \r\n\r\n> Routers along a packet's path verify the validity of hop fields by comparing the current time with a hop's expiration time.\r\nThis expiration time is calculated as described in [](#hopfield) on the basis of the segment's timestamp. That timestamp is assigned by the host that originates the segment. A fast clock at origination or a slow clock at a router will yield a lengthened time-to-live; possibly an origination time in the future. A slow clock at origination or a fast clock at a router will yield a shortened time to live; possibly an expiration time in the past.\r\n> By default, segments are propagated once a minute. A segment is registered by the last AS of that segment, therefore up to N minutes after origination, where N is the length of the segment. As a result, a segment must have a life time of at least N minutes to be of any use. N being the length of the segment. On the other hand, a very recent segment, which clocks offset could make appear from the future, ages by 1 minute per hop before being used, thereby reducing the impact of clock drift in that respect.\r\n\r\nThis feels more like a discussion about propagation interval, it is something that is missing on the draft, but I don't think it strictly relates to clock drift.\r\nIn the CP it is not routers, but the control service who is validating  hop field validity in PCBs. I think this section is not about clock drift, more about how propagation interval and HF expiration time interplay. I think this paragraph could go where we say `- The *propagation interval* SHOULD be at least \"5\" (seconds) for intra-ISD beaconing and at least \"60\" (seconds) for core beaconing.`\r\n\r\n\r\n> The unit of a segment's time-to-live is 5 minutes and 37 seconds (and 500 ms), or the equivalent of 5 hops. Given the above constraints, it is unreasonable to create a segment with a short time-to-live, while each additional time-to-live unit adds more than 5 minutes. As a result, a clock drift of up to 1 minute can be safely neglected.\r\nThe control service and its clients authenticate each-other according to their respective AS's certificate. Path segments are authenticated based on the certificates of the ASes that they refer to. The time validity of a certificate is affected by the offset between verifier and originator clocks. The expiration of a SCION AS certificate typically ranges from 3h to 5 years. As a result, a time offset measured in minutes is immaterial.\r\nEach administrator of a SCION router or core control service is responsible for maintaining sufficient clock accuracy. No particular method is assumed by this specification.\r\n\r\nI'd reword this section to say that the maximum clock drift between any two ASes is in the range of the \r\nmin(`exp_time`) - sum(propagation intervals along a path) where min(`exp_time`) is 337.5s. \r\nIt would be also nice to say something more about propagation intervals in the section described above. Is there a maximum propagation interval somewhere? If not, shall we explain what are the tradeoffs and why we recommend min 5 and 60s (and why this value should not be too high)? ",
              "createdAt": "2024-05-31T14:24:54Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 92,
              "body": "I'd simplify wording on certificate a bit, as the key pair belongs to the same cert (or could you use a different certificate to verify the AS entry?) \r\n\r\n\r\n```suggestion\r\nEach AS entry MUST be signed with the AS certificate's private key K<sub>i</sub>. The certificate MUST have a validity period fully containing that of the segment being verified; regardless of current time. The signature Sig<sub>i</sub> of an AS entry ASE<sub>i</sub> is computed over the AS entry's signed component. This is the input for the computation of the signature:\r\n```\r\n\r\n> validity period fully containing that of the segment being verified; regardless of current time.\r\n\r\nI find thus wording confusing. Shouldn't the validity of the cert be > than the longest expiration time among alll hop fields included in the AS entry? I'd also not mention \"regardless of current time\"\r\n",
              "createdAt": "2024-05-31T14:41:17Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 172,
              "body": " I slightly reworded the existing text to make clear that, when receiving a PCB, the CS must validate it. ",
              "createdAt": "2024-05-31T15:34:55Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            },
            {
              "originalPosition": 78,
              "body": "Also, please try to reuse the terminology already in use in the draft. For Hop fields, we use \"expiration time\", not \"time to live\"",
              "createdAt": "2024-05-31T15:51:54Z",
              "updatedAt": "2024-05-31T16:12:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580bNv",
          "commit": {
            "abbreviatedOid": "615582c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T14:54:35Z",
          "updatedAt": "2024-06-03T14:56:22Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "> By combining these two values, an AS can compute the absolute expiration time of the hop field.\r\n\r\nNit: _anyone_ can compute the expiration time, not only \"an AS\". E.g. endpoints might have to do this to check if a path is still usable.",
              "createdAt": "2024-06-03T14:54:35Z",
              "updatedAt": "2024-06-03T14:56:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580_Jo",
          "commit": {
            "abbreviatedOid": "615582c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T15:47:53Z",
          "updatedAt": "2024-06-03T15:47:53Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "as we discussed. I added a PCB validity section and moved, and simplify, the clock accuracy section.",
              "createdAt": "2024-06-03T15:47:53Z",
              "updatedAt": "2024-06-03T15:47:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs586xlX",
          "commit": {
            "abbreviatedOid": "615582c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-04T08:59:51Z",
          "updatedAt": "2024-06-04T08:59:51Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "done.\r\n",
              "createdAt": "2024-06-04T08:59:51Z",
              "updatedAt": "2024-06-04T08:59:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5861AB",
          "commit": {
            "abbreviatedOid": "49b9d77"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-04T09:05:56Z",
          "updatedAt": "2024-06-04T09:05:56Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "I rewrote/moved based on these comments and our subsequent discussions. I leaned in the direction of less: the reader needs to be aware of the forces at play but can draw their own conclusions. They are fairly obvious but highly dependent on use case and policies. If we try to give advice we end-up with a complete administrator's manual. Not what we want here.\r\n\r\nTentatively resolving now.\r\n",
              "createdAt": "2024-06-04T09:05:56Z",
              "updatedAt": "2024-06-04T09:05:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59I3zD",
          "commit": {
            "abbreviatedOid": "49b9d77"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:58:38Z",
          "updatedAt": "2024-06-05T14:58:38Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "Thanks a lot, looks good now! ",
              "createdAt": "2024-06-05T14:58:38Z",
              "updatedAt": "2024-06-05T14:58:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59I5xY",
          "commit": {
            "abbreviatedOid": "3f0e73d"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks a lot for restructuring the paragraph, looks good! ",
          "createdAt": "2024-06-05T15:01:42Z",
          "updatedAt": "2024-06-05T15:01:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOJx2-rs5wxX4_",
      "title": "Fix private AS range typo, replicated CP - language clarification",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/27",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Set of changes addressing:\r\n- #26 \r\n",
      "createdAt": "2024-05-28T14:07:49Z",
      "updatedAt": "2024-06-03T07:15:24Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "editorial",
      "headRefOid": "498247739e1a066a9911bd55b6cd7d6b4013c928",
      "closedAt": "2024-05-30T09:14:48Z",
      "mergedAt": "2024-05-30T09:14:48Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "c16dda05c7b2808a7c6c7b50719a1bb96a20ac2c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58Kdm3",
          "commit": {
            "abbreviatedOid": "4982477"
          },
          "author": "shitz",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-28T15:08:11Z",
          "updatedAt": "2024-05-28T15:08:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOJx2-rs5wygww",
      "title": "Add some explanation regarding interface configuration.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/29",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Explanations include a clarification (hopefully) of what a peering link is.\r\n\r\nAddresses #17 \r\n\r\nSimilar PR for DP draft: https://github.com/scionassociation/scion-dp_I-D/pull/21 \r\n",
      "createdAt": "2024-05-28T16:44:32Z",
      "updatedAt": "2024-06-03T15:53:51Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "3eaea5e79fce293c359d66a1e66ca681ec2c90db",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "interface_config",
      "headRefOid": "df96a1cb2dde59296e0d20514bf283c9f08d2b6a",
      "closedAt": "2024-06-03T15:53:37Z",
      "mergedAt": "2024-06-03T15:53:37Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "7af3379e03c1a053b250daded414bbf2465cf9af"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs58SYKD",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T11:57:26Z",
          "updatedAt": "2024-05-29T11:57:27Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n**Peering Link**: A link between two SCION border routers of different ASes, where at least one of the two ASes is not core. Two peering ASes may be in different ISDs. A peering link can be seen as a short-cut on a normal path. Peering link information is added to segment information during the beaconing process and used to shorten paths while assembling them from segments.\r\n```",
              "createdAt": "2024-05-29T11:57:26Z",
              "updatedAt": "2024-05-29T11:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58S9HO",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T13:00:48Z",
          "updatedAt": "2024-05-29T13:00:48Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "This is already in #25 \r\n```suggestion\r\n```",
              "createdAt": "2024-05-29T13:00:48Z",
              "updatedAt": "2024-05-29T13:00:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58S9Pl",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T13:01:02Z",
          "updatedAt": "2024-05-29T13:01:02Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-29T13:01:02Z",
              "updatedAt": "2024-05-29T13:01:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UBxl",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:39:03Z",
          "updatedAt": "2024-05-29T14:39:04Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "I did remove the merge marker though.\r\n",
              "createdAt": "2024-05-29T14:39:04Z",
              "updatedAt": "2024-05-29T14:39:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UEGM",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:42:36Z",
          "updatedAt": "2024-05-29T14:42:36Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Weird, github deleted my comment when I marked the issue resolved....\r\nI was saying that the repetition is intentional. The original question concerned both data plane and control plane and I do not want to dilute the explanation by classifying bits and pieces into each document. Better to have the whole story in both drafts.\r\n",
              "createdAt": "2024-05-29T14:42:36Z",
              "updatedAt": "2024-05-29T14:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UFcZ",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:44:32Z",
          "updatedAt": "2024-05-29T14:44:33Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Oh, wait...you mean the change is in two PRs on the CP draft.\r\nArgg. I hate git.\r\nOk, I'll sort it out.\r\n",
              "createdAt": "2024-05-29T14:44:33Z",
              "updatedAt": "2024-05-29T14:44:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58UMzS",
          "commit": {
            "abbreviatedOid": "a7568ba"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:55:52Z",
          "updatedAt": "2024-05-29T14:55:52Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Sorted.\r\n",
              "createdAt": "2024-05-29T14:55:52Z",
              "updatedAt": "2024-05-29T14:55:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58TO3M",
          "commit": {
            "abbreviatedOid": "478cf27"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "I restructured the configuration section a bit, a few more changes are still proposed",
          "createdAt": "2024-05-29T13:27:48Z",
          "updatedAt": "2024-05-29T16:56:55Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nA path segment MUST either start at a core AS, end at a core AS, or both start and end at a core AS. A single path segment MUST NOT start and end at a non-core AS. A path between two non-core ASes may be created by combining multiple path segments. If two of the ASes on path share a peering link, this can be used as a shortcut. For more information on SCION and peering links, see [](#beaconing).\r\n```",
              "createdAt": "2024-05-29T13:27:48Z",
              "updatedAt": "2024-05-29T16:56:55Z"
            },
            {
              "originalPosition": 14,
              "body": ">  necessarily traversing one or more core-ASes.\r\n\r\nThis is not true, there is a case where an up and down segment can be joined without going via the core:\r\n<img width=\"105\" alt=\"Screenshot 2024-05-29 at 15 28 36\" src=\"https://github.com/scionassociation/scion-cp_I-D/assets/11498717/a87a950c-9abb-4f9f-9372-603df4b860a1\">\r\n\r\nI propose that we just remove this line and I merged all in the line above.\r\n```suggestion\r\n```",
              "createdAt": "2024-05-29T13:29:29Z",
              "updatedAt": "2024-05-29T16:56:55Z"
            },
            {
              "originalPosition": 48,
              "body": "@matzf could you double check that the list is correct?",
              "createdAt": "2024-05-29T16:56:25Z",
              "updatedAt": "2024-05-29T16:56:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58V1t6",
          "commit": {
            "abbreviatedOid": "1dc381f"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T18:16:32Z",
          "updatedAt": "2024-05-29T18:20:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "That seems very redundant. I am not against mentioning the shortcut again, but how about a bit more concision:\r\n\r\n\"A path segment MUST either start at a core AS, or end at a core AS, or both. A path between two non-core ASes may be created by combining multiple path segments. If two of the ASes on path share a peering link, this can be used as a shortcut. For more information on SCION and peering links, see [](#beaconing).\"\r\n",
              "createdAt": "2024-05-29T18:16:32Z",
              "updatedAt": "2024-05-29T18:20:46Z"
            },
            {
              "originalPosition": 14,
              "body": "Right, I was missing that. Will fix. In fact I am no longer sure we need to mention the removal of core-AS from the middle at all, since not having any core ASes on the path is nothing special, as you correctly point out. It happens even in the absence of peering links.\r\n",
              "createdAt": "2024-05-29T18:20:41Z",
              "updatedAt": "2024-05-29T18:20:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58brmM",
          "commit": {
            "abbreviatedOid": "9745ab3"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-30T08:34:38Z",
          "updatedAt": "2024-05-30T08:34:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n**Peering Link**: A specific type of link between two SCION border routers of different ASes, which may also be in different ISDs. A peering link can be seen as a short-cut on a normal path. Peering link information is added to segment information during the beaconing process and used to shorten paths while assembling them from segments.\r\n```",
              "createdAt": "2024-05-30T08:34:38Z",
              "updatedAt": "2024-05-30T08:34:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs58xkGR",
          "commit": {
            "abbreviatedOid": "478cf27"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T09:56:40Z",
          "updatedAt": "2024-06-03T09:56:41Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "I removed the underlay addresses from the list. Also used the same intro paragraph as in the DP draft.\r\n",
              "createdAt": "2024-06-03T09:56:40Z",
              "updatedAt": "2024-06-03T09:56:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580Yav",
          "commit": {
            "abbreviatedOid": "478cf27"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-03T14:50:07Z",
          "updatedAt": "2024-06-03T14:50:07Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": ":+1: ",
              "createdAt": "2024-06-03T14:50:07Z",
              "updatedAt": "2024-06-03T14:50:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs580Y6M",
          "commit": {
            "abbreviatedOid": "df96a1c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-03T14:50:57Z",
          "updatedAt": "2024-06-03T14:50:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs581B5S",
          "commit": {
            "abbreviatedOid": "df96a1c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-03T15:52:50Z",
          "updatedAt": "2024-06-03T15:52:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOJx2-rs5xRKNJ",
      "title": "Introduce motivation for link types, explain restrictions for peering links",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/32",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Contributes to #17 (by virtue of avoiding the phrase \"peering AS\").\r\n",
      "createdAt": "2024-06-03T08:50:43Z",
      "updatedAt": "2024-06-07T07:14:12Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "motivate-link-types",
      "headRefOid": "d563c934c2e297e812f499bbb2540fc52749035e",
      "closedAt": "2024-06-07T07:14:03Z",
      "mergedAt": "2024-06-07T07:14:03Z",
      "mergedBy": "matzf",
      "mergeCommit": {
        "oid": "4a0cc23314c8a1dcb94e97090d3f1df21fc10266"
      },
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed, this is overlapping with #29. \r\n#29 should be merged first,  then I'll take another look on how to unify the two changes.",
          "createdAt": "2024-06-03T08:53:00Z",
          "updatedAt": "2024-06-03T08:53:00Z"
        },
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed, removed the glossary entry; it was good, but if we have a glossary entry for peering link, it seemed like we should probably have one for core and parent/child links as well.",
          "createdAt": "2024-06-06T16:00:38Z",
          "updatedAt": "2024-06-06T16:00:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs586Zrm",
          "commit": {
            "abbreviatedOid": "2bcdc00"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-04T08:25:39Z",
          "updatedAt": "2024-06-04T08:25:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs59I9QW",
          "commit": {
            "abbreviatedOid": "2bcdc00"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks a lot, crisp and clear! @matzf maybe before merging, we could check wether we want to remove the definition of peering links now in the glossary: \r\n\r\n> Peering Link: A specific type of link between two SCION border routers of different ASes, which may also be in different ISDs. A peering link can be seen as a short-cut on a normal path. Peering link information is added to segment information during the beaconing process and used to shorten paths while assembling them from segments.\r\n\r\n\r\n\r\n\r\nThis is also in the dataplane draft",
          "createdAt": "2024-06-05T15:07:16Z",
          "updatedAt": "2024-06-05T15:10:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs59UTTG",
          "commit": {
            "abbreviatedOid": "0f58f57"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "...changes at your discretion.",
          "createdAt": "2024-06-06T16:35:57Z",
          "updatedAt": "2024-06-06T16:49:48Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "\"or in a different ISD\" -> \"or in different ISDs\"",
              "createdAt": "2024-06-06T16:35:58Z",
              "updatedAt": "2024-06-06T16:49:48Z"
            },
            {
              "originalPosition": 25,
              "body": "\"Valley-freedom\" sounds weird... it's a tough one, but I found thin precedent for the form \"valley-freeness\": \r\n\r\nIt is interesting to note that there were increment in pulp freeness and reduction in the pulp strength when the same chitosan prepared was added from the first day up to the fifth day.\r\n[Mechanical properties of paper from oil palm pulp treated with chitosan from horseshoe crab](https://www.thefreelibrary.com/Mechanical+properties+of+paper+from+oil+palm+pulp+treated+with...-a0440400148)",
              "createdAt": "2024-06-06T16:48:39Z",
              "updatedAt": "2024-06-06T16:49:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59ZZFm",
          "commit": {
            "abbreviatedOid": "0f58f57"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-07T07:11:32Z",
          "updatedAt": "2024-06-07T07:11:33Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Changed it to valley freeness -- I found one paper using that term, and its from Adrian :smile:.\r\nAlso, no hyphen seems correcter.",
              "createdAt": "2024-06-07T07:11:32Z",
              "updatedAt": "2024-06-07T07:11:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59ZZZd",
          "commit": {
            "abbreviatedOid": "0f58f57"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-07T07:12:19Z",
          "updatedAt": "2024-06-07T07:12:20Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Done.",
              "createdAt": "2024-06-07T07:12:20Z",
              "updatedAt": "2024-06-07T07:12:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOJx2-rs5xYzUn",
      "title": "Clarify PCB selection policies and endpoint's needs",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/33",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #16.\r\n\r\n> > From: Joel Halpern\r\n> > There seems to be a philosophical contradiction in section 2.3.1 (Selection of PCBs to propagate) of the control plane document. Given the philosophy of SCION, the goal should be to propagate PCBs with the highest probability of collectively meeting the needs of the end hosts that will perform path construction. Of course, this AS doesn't know that. But the text ignores this distinction.\r\n> \r\n> Tis also relates to [rfc9217 section-2.8](https://www.rfc-editor.org/rfc/rfc9217.html#section-2.8):\r\n> >  how can the incentives of network operators and end users be aligned to realize the vision of path-aware networking, ..\r\n\r\n---- \r\n\r\nVery good phrasing from reviewer, paraphrased in the text.\r\nTried to clarify the incentives by explaining it as a two stage process. First the AS removes anything that doesn't seem \"viable\";  among the remaining PCBs, the incentives of AS and endpoints are aligned. \r\n",
      "createdAt": "2024-06-04T07:36:33Z",
      "updatedAt": "2024-06-21T16:49:38Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "selection-policy-endpoint-needs",
      "headRefOid": "6e5257d631aa3e453a89b87b8d3f47f985e0905b",
      "closedAt": "2024-06-21T16:49:35Z",
      "mergedAt": "2024-06-21T16:49:35Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "1eb85516903ff150f1a681db24d0438573faab3b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs586XGM",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-04T08:21:24Z",
          "updatedAt": "2024-06-04T08:21:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs59Idpi",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:21:00Z",
          "updatedAt": "2024-06-05T14:22:00Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": ">  Of course, this AS doesn't know that. But the text ignores this distinction. \r\n\r\nHow would you handle this comment? Is the policy you mention above sufficient? ",
              "createdAt": "2024-06-05T14:21:00Z",
              "updatedAt": "2024-06-05T14:22:00Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFrom these viable PCBs, only a relatively small subset should be propagated, to avoid excessive overhead of the path discovery system in bigger networks.\r\n```\r\n\r\nIs it a must? A should? How _small_ should the subset be?  ",
              "createdAt": "2024-06-05T14:21:57Z",
              "updatedAt": "2024-06-05T14:22:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59OvC7",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-06T07:13:39Z",
          "updatedAt": "2024-06-06T07:13:39Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "The numbers are mentioned below (5/50).",
              "createdAt": "2024-06-06T07:13:39Z",
              "updatedAt": "2024-06-06T07:13:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59O1wj",
          "commit": {
            "abbreviatedOid": "9495ea9"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-06T07:21:42Z",
          "updatedAt": "2024-06-06T07:21:42Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "That's the comment this PR addresses. My proposed text distinguishes between the interests of the AS and the interests of the endpoints, and it explicitly mention that an AS has no info about the endpoints specific needs.\r\nWhile of course this could be said with more or different words, I don't know what else could be said.",
              "createdAt": "2024-06-06T07:21:42Z",
              "updatedAt": "2024-06-06T07:21:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOJx2-rs5xZwY_",
      "title": "Clarify selection of MAC",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/34",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Refer to default hop field MAC algorithm in DP draft, which MUST be supported.\r\n\r\nContributes to #23.\r\nContributes to https://github.com/scionassociation/scion-dp_I-D/issues/7:\r\n- Explain why there is both a \"chaining\" of signatures in PCBs, and chaining of MACs in hop fields.\r\n\r\nRefers to https://github.com/scionassociation/scion-dp_I-D/pull/26, and uses ~identical paragraph.",
      "createdAt": "2024-06-04T09:45:01Z",
      "updatedAt": "2024-06-21T16:34:26Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "default-mac-algo",
      "headRefOid": "3bc1d7c751c0755697e3e6a08d7a307755c841b5",
      "closedAt": "2024-06-21T16:34:22Z",
      "mergedAt": "2024-06-21T16:34:22Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "b5e097110b483e6922e235ef66657c2ffc2f9bd8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs587RRQ",
          "commit": {
            "abbreviatedOid": "cd0ad9e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-04T09:56:22Z",
          "updatedAt": "2024-06-04T09:56:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs587zng",
          "commit": {
            "abbreviatedOid": "cd0ad9e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Just some minor comments (also related to my comments in https://github.com/scionassociation/scion-dp_I-D/pull/26 )",
          "createdAt": "2024-06-04T10:59:03Z",
          "updatedAt": "2024-06-04T11:02:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe algorithm used to compute the hop field MAC is an AS-specific choice. The operator of an AS can freely choose a MAC algorithm without outside coordination. However, the control service and routers of the AS do need to agree on the algorithm used.\r\nControl service and router implementations MUST support the Default Hop Field MAC algorithm described in {{I-D.scion-dp}}. This document does not specify any further mechanism to coordinate this choice between control services and routers of one AS.\r\n```",
              "createdAt": "2024-06-04T10:59:03Z",
              "updatedAt": "2024-06-04T11:02:22Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n- `mac`: The message authentication code (MAC) used in the data plane to verify the hop field, as described in {{I-D.scion-dp}}.\r\n```\r\nI think one more reference does not hurt",
              "createdAt": "2024-06-04T11:01:45Z",
              "updatedAt": "2024-06-04T11:02:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59Ty0M",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-06T15:40:36Z",
          "updatedAt": "2024-06-06T15:40:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This is to address the following comment, https://github.com/scionassociation/scion-dp_I-D/issues/7:\r\n\r\n> Both the PCB authentication and the hop authentication use a mechanism that computes the signature over all previous hops. This seems odd. If each hop includes the previous hop, that seems to produce an immutable chain at lower cost. At the very least, an explanation would seem called for.",
              "createdAt": "2024-06-06T15:40:36Z",
              "updatedAt": "2024-06-06T15:40:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs59Udx3",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-06T16:53:56Z",
          "updatedAt": "2024-06-06T16:53:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5-QM0w",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-14T11:36:37Z",
          "updatedAt": "2024-06-14T11:36:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5_I3b6",
          "commit": {
            "abbreviatedOid": "3bc1d7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-21T16:34:10Z",
          "updatedAt": "2024-06-21T16:34:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDOJx2-rs5xd1Yv",
      "title": "CS API - minor wording change",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/35",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-04T19:47:51Z",
      "updatedAt": "2024-07-08T16:11:57Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "66253684fc5e9ae56ad10f7cc1677016b0df7a27",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "grpc_api_described_wordsmithing",
      "headRefOid": "2ea280f93d3993a539d36d6817a256b809d129bf",
      "closedAt": "2024-06-05T12:51:40Z",
      "mergedAt": "2024-06-05T12:51:39Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "89d9bf1fb384c523516750bb253522a557e3148d"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "I added a potential reference for the connect RPC, feel free to change it if you think there is a better reference ",
          "createdAt": "2024-06-05T07:13:36Z",
          "updatedAt": "2024-06-05T07:13:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs59EwCS",
          "commit": {
            "abbreviatedOid": "2ea280f"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-05T08:27:23Z",
          "updatedAt": "2024-06-05T08:27:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOJx2-rs5xrDCd",
      "title": "change Language for PCB propagation (flooding)",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/37",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Addresses #36 36",
      "createdAt": "2024-06-06T12:05:36Z",
      "updatedAt": "2024-06-06T12:06:25Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "60418e3460510480b9560bcaaf601a4ef2031c90",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "pcb_propagation",
      "headRefOid": "12eb17b81f3973bd105981d80a9d533a0b6af2ff",
      "closedAt": "2024-06-06T12:06:22Z",
      "mergedAt": "2024-06-06T12:06:22Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "f6dbf5677ee5a2f1ed892277e2a4f6dda422c3d5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 38,
      "id": "PR_kwDOJx2-rs5x_BvJ",
      "title": "Added revised Introduction",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/38",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Introduction with problem statement and component overview",
      "createdAt": "2024-06-10T14:17:58Z",
      "updatedAt": "2024-06-21T15:58:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "b62872ddb8427555057b24ed3e877ded662e5b35",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "knmeynell-patch-1",
      "headRefOid": "06ec2fa3595ff8e6c16abcf1d68c70617763991b",
      "closedAt": "2024-06-21T15:58:53Z",
      "mergedAt": "2024-06-21T15:58:53Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "1ea4648c6b2cd87a656648e8c7398975fdaf483d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5-QL_I",
          "commit": {
            "abbreviatedOid": "55ee565"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-14T11:34:26Z",
          "updatedAt": "2024-06-14T11:34:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDOJx2-rs5yYqb8",
      "title": "remove allowed",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/39",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves https://github.com/scionassociation/scion-dp_I-D/issues/11 ",
      "createdAt": "2024-06-13T16:15:33Z",
      "updatedAt": "2024-06-21T16:07:52Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1ea4648c6b2cd87a656648e8c7398975fdaf483d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "allowed",
      "headRefOid": "37b18c033e63524b92f7aed92f0f50e30318ed5d",
      "closedAt": "2024-06-21T16:07:49Z",
      "mergedAt": "2024-06-21T16:07:49Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5d331d933acb221893b6bbfbf2309ef7805edd12"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5-JIw9",
          "commit": {
            "abbreviatedOid": "cd401f8"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-06-13T16:47:02Z",
          "updatedAt": "2024-06-13T16:47:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\"... of IPv6 is MUST NOT be used.\" You have a stray \"is\" in-there.\r\n",
              "createdAt": "2024-06-13T16:47:02Z",
              "updatedAt": "2024-06-13T16:47:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDOJx2-rs5yqPB-",
      "title": "Move informative references to the informative section. Delete un-used ones",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/41",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #40 ",
      "createdAt": "2024-06-17T08:22:11Z",
      "updatedAt": "2024-06-19T11:24:28Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "4a0cc23314c8a1dcb94e97090d3f1df21fc10266",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "informative_normative",
      "headRefOid": "0e060bc0170e2b32be7718f353fd7c85b86a24f1",
      "closedAt": "2024-06-19T11:22:56Z",
      "mergedAt": "2024-06-19T11:22:56Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "b62872ddb8427555057b24ed3e877ded662e5b35"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5-iOQL",
          "commit": {
            "abbreviatedOid": "0e060bc"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-17T13:22:42Z",
          "updatedAt": "2024-06-17T13:22:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5-iOdp",
          "commit": {
            "abbreviatedOid": "0e060bc"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-17T13:23:02Z",
          "updatedAt": "2024-06-17T13:23:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOJx2-rs5zL3A4",
      "title": "Scalability of path discovery",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/42",
      "state": "MERGED",
      "author": "matzf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Scalability of path discovery.\r\n- Explain quality/quantity vs resource overhead\r\n- Resource cost in terms of number and length of discovered paths\r\n- Exploration time in terms of path length / network diameter\r\n- Separate analysis for inter/intra ISD beaconing:\r\n  - Typical / expected properties of the network\r\n  - Example numbers to give impression for order of magnitude of overhead\r\n\r\nFixes #8 ",
      "createdAt": "2024-06-21T13:23:58Z",
      "updatedAt": "2024-07-08T16:12:02Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "a7bf7e2f4da132cfbbe5aac2ace8dabc600dd0e0",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "scalability",
      "headRefOid": "8b8d3dd4313fd3a427379cfb7311fb82105bcb6f",
      "closedAt": "2024-07-08T15:35:58Z",
      "mergedAt": "2024-07-08T15:35:58Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe"
      },
      "comments": [
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for fixing my typos, @nicorusti.",
          "createdAt": "2024-07-03T13:28:50Z",
          "updatedAt": "2024-07-03T13:28:50Z"
        },
        {
          "author": "tzaeschke",
          "authorAssociation": "NONE",
          "body": "General Note: \r\n- The notes contain several references to \"immediate cold-start PCB forwarding\" which in turn refers to the section #selection where it says\r\nunder \"Storing and Selecting Candidate PCBs\":\r\n\"Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].\"\r\n- The notes contain several references to \"beacon origination interval\", i.e. the intervall at which new beacons are created. I couldn't find any description\r\n  of this interval, maybe I overlooked it? Is it the same as the propagation interval?\r\n\r\n\r\n# Some points I found could be useful to add to the doc:\r\n- I couldn't find a discussion of beacon origination interval (or the RegistrationInterval), see \"DefaultOriginationInterval\" (or the DefaultRegistrationInterval) in the code.\r\n  Maybe I overlooked it? \r\n- Load balancing? E.g. everybody picks the shortest paths, all other paths remain unused...? How is this handled?\r\n\r\n\r\n\r\n# Introduction\r\n## Avoiding Circular Dependencies and Partitioning\r\n- Does this section (title) make sense as it is? The two topics (circular dependencies and partitioning) appear unrelated. Partitioning is discussed in a separate subsection\r\n- Also, this section claims to contain a list that explains how circular dependencies are avoided.\r\n  However, I am not sure how anything in the list explains anything about circular dependencies?\r\n\r\n### Partition and Healing\r\n- `ASes could always switch to otherwise unused links`. \r\n\r\n  - What are `unused` links? `Unused` indicates that they are not in the \"Best PCB\" set. \r\n  If that is the case, then we cannot simply \"switch\" to use them, we first need to have them discovered by beacons. This takes time, see `propagation interval` (unless PCB are forwarded immediately) and beacon `origination interval`.\r\n  - Also: Does \"Healing\" include \"adding new links\"? In this case we also need to wait for the `propagation interval` and the `origination interval`.\r\n  As I understand, with propagation interval being set to e.g. 10Minutes, this adds up to 5hops*1/2*10min= 25minutes for 5 hops.\r\n\r\n# Path Exploration or Beaconing {#beaconing}\r\n## Introduction and Overview\r\n\r\n- `Intra-ISD beaconing`: Isn't this incomplete? How are DOWN segments created? I think leaf ASes need to propagate paths back to the COREs? -> Link to #intra-reg ?\r\n- `Inter-ISD beaconing`: Similarily, I think there is a step where CORE beacons share their path DB with other CORE ASes in the same ISD?\r\n\r\n### Extending a PCB\r\n- `selects the best combinations`: Maybe link to a section that explains how this works? And what \"best\" means?\r\n\r\n## Path-Segment Construction Beacons\r\n### PCB Validity\r\n- `For the purpose of validation, a timestamp is considered \"future\" if it is later than the current time at the point of validation plus the minimum expiration time of a hop field (337.5 seconds, see ).`\r\nMaybe add an explanation why we add the minimum expiration time here?\r\nShouldn't \"future\" simply be timestamp + some_delta_to_account_for_server_time_inaccuracies, where the delta is maybe a few seconds rather than 5.5 minutes?\r\n\r\n\r\n\r\n\r\n## Propagation of PCBs {#path-prop}\r\n### Selection of PCBs to Propagate {#selection}\r\n#### Storing and Selecting Candidate PCBs\r\n\r\n- `temporary storage`: Maybe clarify what \"temporary\" means. \r\n  - How long are PCBs stored? \r\n  - Under what circumstances are they removed, e.g. when they expire? \r\n  - Or possibly replaced with a new version? What if the new version has an earlier expiration date?\r\n\r\n\r\n- `At each propagation event, each AS selects a set of the best PCBs from the candidates in the beacon store`\r\n\r\n\r\n- `The best PCBs set size SHOULD be at most \"50\" (PCBs) for intra-ISD beaconing and at most \"5\" (PCBs) for core beaconing.`\r\n  - I found this a bit confusing: the \"50\" appears to be the total number of beacons forwarded for non-core ASes, whereas the \"5\" refers to the number of \r\n    PCBs _per_ remote CORE AS. Maybe clarify this?\r\n\r\n- `Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, [...].`\r\n  - Is this true? It appears to conflict with many other parts of the document that talk about propagation intervals in the contect of cold-start.\r\n  - Is there a difference between \"bootstrapping\" (used here) and \"cold-start\" (used in other places)? Maybe stick to one term or explicitly declare equality?\r\n  - Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively\r\n    forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths? \r\n  - What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths\r\n    coming in all the time that need to be forwarded immediately, or not?\r\n    \r\n\r\n\r\n### Effects of Clock Inaccuracy\r\n- `PCBs are propagated at a configurable interval (typically, one minute).`\r\n  - Unless they are new, then the interval is ignored, see \"immediate cold-start PCB forwarding\".\r\n  - Maybe rephrase: \"(typically, one minute)\" ---> \"immediately for new beacons, minimum 5secs for intra-ISD, minimum one minute for inter-ISD\"?\r\n  See #path-prop: \"The propagation interval SHOULD be at least \"5\" (seconds) for intra-ISD beaconing and at least \"60\" (seconds) for core beaconing.\".\r\n  - Also, AFAIK, the current configured real-world interval is more like 10-15 minutes...?  \r\n\r\n- `PCBs with N hops may be validated up to N intervals (so typically N minutes) after origination`\r\n  - I think the word \"typically\" is misleading here, it can be understood as \"PCBs [...] are validated typically after N minutes\", whereas it actually means that the _maximum_ is typically N minutes. \r\n    Rephrase to \"(maximally N minutes)\" or \"(amounting to N minutes, assuming the minimum inter-ISD propagation interval)\"\r\n\r\n- Rephrase `The norm is 6 hours.` to `... SHOULD be 6 hours` ? What does 'norm' mean?\r\n\r\n- `In comparison to these time scales, clock offsets in the order of minutes are immaterial.`  \r\n  - This relates only to the previous paragraph about certificates; I guess it should be attached to the previous paragraph?\r\n\r\n\r\n## Path Discovery Time and Scalability {#scalability}\r\n- ~`balances _OF_ the number of discovered paths` -> remove OF~ Already fixed\r\n\r\n- `Generally, the time until a specific PCB is built depends on its length and the propagation interval.`? \r\n   - I think in the context of \"cold boot\u00a8, the propagation delay is \"0\", see \"immediate cold-start PCB forwarding\".\r\n- `PCB arrives at a random point in time during the interval and is buffered before potentially being propagated`\r\n  - see \"immediate cold-start PCB forwarding\"\r\n  - Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n\r\n- `As will become apparent, the inter-ISD beaconing results in excessive overhead with very large numbers of participating core ASes.`\r\n  - Does this need to be in the IETF spec?\r\n- `The ideal topology for SCION is to keep the inter-ISD core network to a moderate size, to benefit from the divide-and-conquer partitioning of ASes into ISDs and the efficiency of the intra-ISD beaconing.`\r\n  - What is done to ensure this? What happens if the size is not moderate? What is \"moderate\"?\r\n\r\n\r\n### Intra-ISD Beaconing\r\n\r\n- `Otherwise, child ASes at distance D below the new link, learn of the new link after D further propagation steps`\r\n   - New path: \"immediate cold-start PCB forwarding\"\r\n\r\n\r\n### Inter-ISD Beaconing\r\n\r\n- `On a cold start of the network, [...]. With a 5 second propagation period [...]`\r\n   - Above it says that bootstrapping results in immediatede forwarding, see \"immediate cold-start PCB forwarding\".\r\n\r\n- `When a new link is added to the network, it will be available to connect two ASes at distances from the link D1 and D2 from the link, respectively, after a mean time (D1+D2)*T/2.`\r\n  - Typo: duplicated \"from the link\";\r\n  - Also: see previous point about \"immediate cold-start PCB forwarding\"\r\n",
          "createdAt": "2024-07-05T15:39:07Z",
          "updatedAt": "2024-07-05T15:39:07Z"
        },
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Thank you for your feedback @tzaeschke ! I respond here regarding the scalability and clock inaccuracy sections.  For other sections, and for points that we don't have time to address in time this revision, I opened separate issues: \r\n* https://github.com/scionassociation/scion-cp_I-D/issues/45 \r\n* https://github.com/scionassociation/scion-deployment_I-D/issues/1  \r\n* https://github.com/scionassociation/scion-cp_I-D/issues/46 \r\n* https://github.com/scionassociation/scion-cp_I-D/issues/48\r\n\r\n\r\n## Regarding Effects of Clock Inaccuracy\r\n\r\n> I think the word \"typically\" is misleading here, it can be understood as \"PCBs [...] are validated typically after N minutes\", whereas it actually means that the maximum is typically N minutes.\r\nRephrase to \"(maximally N minutes)\"\r\n\r\nDone, maximally N minutes sounds good.\r\n\r\n> Also, AFAIK, the current configured real-world interval is more like 10-15 minutes...?\r\n \r\n@matzf I is it 1 min as in the draft, or 10-15? 10-15 feels a bit high to me \r\n\r\n\r\n>  Rephrase `The norm is 6 hours.` to `... SHOULD be 6 hours` ? What does 'norm' mean? \r\n\r\nI am a bit reluctant to use RFC2119 language (uppercase SHOULD) for exactly 6 hours. This is a value that overall depends on the maximum AS path expected in the network, and it might as well be a different value. I therefore rephrased like this:\r\n`For this reason, it is unadvisable to create hops with a short expiration time, that should be around 6 hours.` \r\n\r\n> In comparison to these time scales, clock offsets in the order of minutes are immaterial.\r\n> This relates only to the previous paragraph about certificates; I guess it should be attached to the previous paragraph?\r\n\r\nDone.\r\n\r\n\r\n\r\n## Regarding Path Discovery Time and Scalability {#scalability} \r\n\r\n> The notes contain several references to \"immediate cold-start PCB forwarding\"  \r\n\r\n@matzf clarified [here](https://github.com/scionassociation/scion-cp_I-D/pull/42#discussion_r1666689901) that this is not the case, I removed that note, this should also solve some many of the consistency issues you reported.\r\n\r\n> Also, I think the calculation needs to take into account the \"beacon origination interval\".\r\n \r\n To be handled in https://github.com/scionassociation/scion-cp_I-D/issues/45\r\n \r\n\r\n> `As will become apparent, the inter-ISD beaconing results in excessive overhead with very large numbers of participating core ASes.` \r\nDoes this need to be in the IETF spec?\r\n\r\nGood point, I rephrased this section to: \r\n```To achieve scalability in its routing process, SCION uses a divide-and-conquer approach, partitioning  ASes into ISDs. In order to benefit from this, an ideal topology SCION should keep the inter-ISD core network to a moderate size. For more specific observations, we distinguish between intra- and inter-ISD beaconing. ```\r\n\r\n> What is done to ensure this? What happens if the size is not moderate? What is \"moderate\"?\r\n \r\n We give some numbers in the  Inter-ISD Beaconing section with an example with 1000 core ASes, this gives a rough figure. The bandwidth and computation overhead figures there should also give a rough hint of what happens if the network grows too much: the overhead becomes considerable. \r\n What is done to ensure this IMHO depends on how the network is deployed, I think this topic would be a better fit to be discussed in the new deployment Internet Draft, I opened an issue there: https://github.com/scionassociation/scion-deployment_I-D/issues/1  \r\n \r\n > Typo: duplicated \"from the link\";\r\n\r\nFixed\r\n  \r\n  \r\n\r\n",
          "createdAt": "2024-07-07T21:02:39Z",
          "updatedAt": "2024-07-08T16:09:59Z"
        },
        {
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Commented on the related issues for the other sections.\r\n\r\n> > Also, AFAIK, the current configured real-world interval is more like 10-15 minutes...?\r\n> \r\n> @matzf I is it 1 min as in the draft, or 10-15? 10-15 feels a bit high to me\r\n\r\nThe 1 minute value seems realistic. SCIONLab uses 5 seconds for non-core beaconing and 1 minute for core beaconing. Anapaya's infrastructure reportedly runs with 30s.",
          "createdAt": "2024-07-08T14:58:51Z",
          "updatedAt": "2024-07-08T14:58:51Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs5_RqJa",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I won't make pronouncements on the math accuracy... I find it convincing enough. Regarding the breadth and depth, I think it's good. I imaging that this is what the reviewer was asking for.\r\n\r\nPossibly, we could add a summary, with a few key scaling estimates in O() form. Where e.g. PCB received per second: O(N^2) - Although, that'll be concerning in the mind of your average reviewer, btw. So may be no need to rub it in.",
          "createdAt": "2024-06-24T10:10:26Z",
          "updatedAt": "2024-06-24T10:10:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs5_SC_N",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T10:51:19Z",
          "updatedAt": "2024-06-24T11:19:41Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Remind the reader that only 50 PCBs per downlink are selected for propagation. ",
              "createdAt": "2024-06-24T10:51:19Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 72,
              "body": "Isn't that supposed to be 1000000/5 = 200K?... well, that's assuming a 5 seconds propagation interval, but you said it was slower than that. So, I don't know. 150K amounts to a propagation interval of 6 and 2/3 seconds...I don't believe that you'd use that deliberately :-)\r\n\r\n",
              "createdAt": "2024-06-24T11:06:55Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 73,
              "body": "Given your previous estimate of 250bytes per AS entry and core segments of ~10 ASes, I compute:\r\n200000 * 10 * 250 = 500M/s. Even using your 150K/s figure, I still get 375M/s. I missed something?\r\n",
              "createdAt": "2024-06-24T11:06:57Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 64,
              "body": "Remind the reader what the typical interval would be?",
              "createdAt": "2024-06-24T11:09:19Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 36,
              "body": "Here I'd cite the Irwin-Hall distribution, may be?",
              "createdAt": "2024-06-24T11:15:11Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            },
            {
              "originalPosition": 76,
              "body": "Ok, so here you seem to be using a 30s mean delay, so an interval of 1m.\r\n",
              "createdAt": "2024-06-24T11:18:52Z",
              "updatedAt": "2024-06-24T11:19:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_UbSZ",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T14:57:52Z",
          "updatedAt": "2024-06-24T14:57:52Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I used propagation interval is 60s (should mention this explicitly). My calculation was:\r\n- number of PCBs received per propagation interval: 5 * N * num interfaces = 1'000'000\r\n- number of AS entries received (== number of signature validations) per propagation interval == ~10 * number of PCBs == 10'000'000\r\n- number of AS entries per second: number of AS entries per propagation interval / 60s == 10'000'000 / 60 == 166'666.\r\n\r\nI must have rounded pretty badly... ",
              "createdAt": "2024-06-24T14:57:52Z",
              "updatedAt": "2024-06-24T14:58:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_Ud0r",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:02:15Z",
          "updatedAt": "2024-06-24T15:02:15Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "These numbers are per propagation interval (60 seconds). So:\r\n5 * 200 * 1000 * 10 * 250 / 60 = 41.6M/s",
              "createdAt": "2024-06-24T15:02:15Z",
              "updatedAt": "2024-06-24T15:02:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_UfXJ",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:04:59Z",
          "updatedAt": "2024-06-24T15:04:59Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": ":+1: ",
              "createdAt": "2024-06-24T15:04:59Z",
              "updatedAt": "2024-06-24T15:04:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_U4Pa",
          "commit": {
            "abbreviatedOid": "760c0e2"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:48:07Z",
          "updatedAt": "2024-06-24T15:48:08Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Ack. I had missed something.\r\n",
              "createdAt": "2024-06-24T15:48:07Z",
              "updatedAt": "2024-06-24T15:48:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_U7Y2",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:53:53Z",
          "updatedAt": "2024-06-24T15:53:53Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Ok. Works for me. I had missed the multiplication by path length and I had the wrong interval. ",
              "createdAt": "2024-06-24T15:53:53Z",
              "updatedAt": "2024-06-24T15:53:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_U75n",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T15:54:46Z",
          "updatedAt": "2024-06-24T15:54:47Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I've changed the numbers for the example; I noticed that length 10 is much longer than what we say above with the log n/loglog n average path length.\r\nFor 1000 ASes, the log n/loglog n is around 3.5. Because we say that we have paths that are longer than the shortest path, I use a generous 6 -- because this gives nice numbers.\r\nBecause the numbers coincidentally ended up confusingly similar to the intra-ISD case I've increased the number of core links from 200 to 300.\r\n\r\nSo:\r\n5 * 300 * 1000 = 1.5 million PCBs\r\n5 * 300 * 1000 * 6 / 60 = 150k AS entries per second\r\n5 * 300 * 1000 * 6 * 250 / 60 = 37.5MB/s\r\n",
              "createdAt": "2024-06-24T15:54:46Z",
              "updatedAt": "2024-06-24T15:54:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_a2fE",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T07:47:10Z",
          "updatedAt": "2024-06-25T07:47:10Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "It seems Irwin-Hall was the wrong pointer after all. I had to relearn this:\r\nGenerally, the variance of the sum of independent random variables is just the sum of the variances;  the variance of the sum of n independent, _identically_ distributed variables is just n times the variance of a single variable.\r\nThe variance of continuously uniformly distributed random variables over interval [a,b] is (b-a)^/12. (!) -- in our case, this interval is [0,T] and so the variance for the individual random variables is T^2/12.\r\n\r\nEven if this was not something I knew directly, this seems too basic / too much textbook knowledge to add a citation or long explanation. What do you think.",
              "createdAt": "2024-06-25T07:47:10Z",
              "updatedAt": "2024-06-25T07:47:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_bU9h",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T08:27:50Z",
          "updatedAt": "2024-06-25T08:27:50Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": ".. which means that we don't actual care about T^2 / 12, do we? Anyway, you're right. The stats heads will know and the others won't care or understand (you just demonstrated this on me: I didn't understand).",
              "createdAt": "2024-06-25T08:27:50Z",
              "updatedAt": "2024-06-25T08:27:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_bcRL",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T08:40:04Z",
          "updatedAt": "2024-06-25T08:40:05Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "I see that has been done.\r\n",
              "createdAt": "2024-06-25T08:40:04Z",
              "updatedAt": "2024-06-25T08:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_eXqw",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-25T13:22:10Z",
          "updatedAt": "2024-06-25T13:22:10Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "I still find it too easy to forget the \"at most 50 per child\" clause when reading \"If the same AS has 1000 child links...\". How about:\r\n\"If the same AS has 1000 child links, the propagation of the beacons will require signing one new AS entry for each of the propagated PCBs for each link (at most 50 per link), that is ....\"?\r\n\r\nNot binding.\r\n",
              "createdAt": "2024-06-25T13:22:10Z",
              "updatedAt": "2024-06-25T13:22:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs5_eX14",
          "commit": {
            "abbreviatedOid": "17ad81b"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-25T13:22:25Z",
          "updatedAt": "2024-06-25T13:22:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6ALmiD",
          "commit": {
            "abbreviatedOid": "4c7fc0d"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-01T06:28:24Z",
          "updatedAt": "2024-07-01T06:28:24Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Indeed, done. :+1: ",
              "createdAt": "2024-07-01T06:28:24Z",
              "updatedAt": "2024-07-01T06:28:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ahy6c",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks a lot for putting this together! Most of my comments are small language stuff, besides that I feel that some of the rough calculations could be framed slightly different",
          "createdAt": "2024-07-03T12:42:10Z",
          "updatedAt": "2024-07-03T17:40:05Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nThe path discovery mechanism balances the number of discovered paths and the time it takes to discover them versus resource overhead of the discovery.\r\n```",
              "createdAt": "2024-07-03T12:42:10Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nWith a propagation interval T at each AS, the mean time until the PCB is propagated in one AS therefore is T / 2 and the mean total time for the propagation steps of a PCB of length L is L * T / 2 (with a variance of L * T^2 / 12).\r\n```",
              "createdAt": "2024-07-03T12:59:46Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nNote that link removal is not part of path discovery in SCION. For scheduled removal of links, operators SHOULD let path segments expire. On link failures, end points route around the failed link by switching to different paths in the data plane.\r\n```",
              "createdAt": "2024-07-03T13:00:42Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nEach AS potentially receives PCBs for all down-paths between core to itself. While the number of distinct provider chains to the core is typically moderate, the multiplicity of links between provider ASes has multiplicative effect on the number of PCBs. Once this number grows above the limit value of 50, ASes trim the set of PCBs propagated. As the choice is among different ways to transit the local AS, operators are well equipped to choose among this set of PCBs.\r\n```",
              "createdAt": "2024-07-03T13:06:00Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 46,
              "body": "We say `The *best PCBs set size* SHOULD be at most \"50\" (PCBs)`, so we don't really set an upper bound to the number of PCBs. I feel the text here should be adapted accordingly. How about: \r\n```suggestion\r\nUltimately, the number of PCBs received by an AS per propagation interval for each parent link and propagated on each child link is bound to 50, the maximum recommended PCB set size. The length of these PCBs, and thus the number of AS entries to be processed and stored, is expected to be moderate and not grow considerably with network size. The total resource overhead for beacon propagation is easily manageable even for highly connected ASes.\r\n```\r\nI'm not entirely happy with my own wording, that is the best I could think of.\r\n",
              "createdAt": "2024-07-03T16:32:14Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 48,
              "body": "> an AS with a rather large number of 100 parent links \r\n\r\nAt one RTGWG session we got asked how SCION scales with the number of inter-AS links. It was someone working on Azure's backbone, they have ~30k + inter-AS links, so I feel 100 is not a rather large number",
              "createdAt": "2024-07-03T16:34:40Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 48,
              "body": "I'd also adapt wording:\r\n```suggestion\r\nTo illustrate this with some numbers, an AS with a rather large number of 100 parent links receives at most 5000 PCBs during a propagation interval. Assuming a generous average length of 10 AS entries for these PCBs, this corresponds to 50000 AS entries. Due to the variable length fields in AS entries, the sizes for storage and transmission cannot be predicted exactly, and we'll assume an average of 250 bytes per AS entry. At the shortest, and thus chattiest, recommended propagation interval of 5 seconds, this corresponds to an average bandwidth of around 2.5MB/s, and processing 10000 signature verifications per second.\r\n```\r\n\r\nAlso, I assume PCBs would be sent in batches (50000*250 would be ~ 12MB of PCBs), right? So there would be a burst, that on a slower link (like 1G) would last 0.1s, right? Or can this be distributed bit? over time? Perhaps we don't need to mention this, just something that came to my mind after reading this section",
              "createdAt": "2024-07-03T16:58:10Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 51,
              "body": "Maybe we could mention that this is assuming a worst case scenario where  the AS is not doing any selection on received PCBs?",
              "createdAt": "2024-07-03T17:02:03Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 53,
              "body": "In the draft we say:\r\n\r\n> **Note:** Note that during bootstrapping and if the AS obtains a PCB containing a previously unknown path, the AS SHOULD forward the PCB immediately, to ensure quick connectivity establishment. \r\n\r\nWouldn't this speed up bootstrapping time?",
              "createdAt": "2024-07-03T17:05:03Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nWhen a new parent-child link is added to the network, the parent AS will propagate the available PCBs in the next propagation event. If the AS on the child side of the new link is a leaf AS, path discovery is thus complete after one single propagation interval. Otherwise, child ASes at distance D below the new link, learn of the new link after D further propagation intervals.\r\n```",
              "createdAt": "2024-07-03T17:06:02Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            },
            {
              "originalPosition": 67,
              "body": "I feel these calculations are a bit hypothetical, because: \r\n* This 38 MB/s of  bandwidth would be distributed across 300 links (maybe it is better to say that the bandwidth overhead is ~ 1 Mbit/s per link\r\n* The overall CP load in an AS of such scale would be distributed on various instances (even tough one might suffice to handle the load for signature validation)",
              "createdAt": "2024-07-03T17:38:09Z",
              "updatedAt": "2024-07-03T17:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6ApXIp",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T08:35:03Z",
          "updatedAt": "2024-07-04T08:35:03Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Maybe here we could summarize by saying that the overall message complexity for an AS is linear to the number of core ASes N.",
              "createdAt": "2024-07-04T08:35:03Z",
              "updatedAt": "2024-07-04T08:35:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AqsGk",
          "commit": {
            "abbreviatedOid": "5f7a89e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T11:10:57Z",
          "updatedAt": "2024-07-04T11:11:37Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "New line missing before \"Note that...\" ?\r\n",
              "createdAt": "2024-07-04T11:10:58Z",
              "updatedAt": "2024-07-04T11:11:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Axjay",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T10:48:59Z",
          "updatedAt": "2024-07-05T10:48:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I disagree, this seems entirely out of place. We shouldn't randomly throw in normative behavior rules into informative, explanatory sections.",
              "createdAt": "2024-07-05T10:48:59Z",
              "updatedAt": "2024-07-05T10:49:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxlFw",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T10:53:42Z",
          "updatedAt": "2024-07-05T10:53:43Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Fixed, I made it \"down-path segment\" (and fixed the slightly broken sentence around it). FWIW, I think \"down path\" would not be hyphenated.",
              "createdAt": "2024-07-05T10:53:43Z",
              "updatedAt": "2024-07-05T10:53:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Axn7P",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:01:15Z",
          "updatedAt": "2024-07-05T11:01:15Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Accepting to keep things consistent, but I find this SHOULD there rather strange. That's the one parameter that must be controlled in order that receivers of beacons won't be overwhelmed. Maybe it could say something like \"MUST be less than 50 unless there is an out of band agreement\". Anyway, maybe something for another day.",
              "createdAt": "2024-07-05T11:01:15Z",
              "updatedAt": "2024-07-05T11:01:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Axr_m",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:12:52Z",
          "updatedAt": "2024-07-05T11:12:52Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "> At one RTGWG session we got asked how SCION scales with the number of inter-AS links. It was someone working on Azure's backbone, they have ~30k + inter-AS links, so I feel 100 is not a rather large number\r\n\r\nThe 100 explicitly refer to links to (transit-)providers. I can't imagine that the Azure backbone has too many inter-AS links to transit providers.\r\nFeel free to suggest a different way to present this, but what I tried was to give an impression for the upper bound for the resource overhead seen by a typical AS; 100 provider links seems more than what a typical (SCION-)AS will have.",
              "createdAt": "2024-07-05T11:12:52Z",
              "updatedAt": "2024-07-05T11:12:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxtAp",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:15:47Z",
          "updatedAt": "2024-07-05T11:15:47Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "It's not making this assumption; in this scenario we received 50 * 100 == 5000 PCBs and forward only 50 of on each child link.",
              "createdAt": "2024-07-05T11:15:47Z",
              "updatedAt": "2024-07-05T11:15:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxvyP",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:23:38Z",
          "updatedAt": "2024-07-05T11:23:39Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "That's the weirdest note. How can we define required / recommended behavior in a note?\r\nAlso, this behavior doesn't exist in the implementation. The idea seems a bit naive and completely underspecified. It's at least not obvious that this does not break the normal beaconing protocol, which _relies_ on these intervals.\r\nI'd rather we just drop this note.",
              "createdAt": "2024-07-05T11:23:38Z",
              "updatedAt": "2024-07-05T11:23:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AxyTI",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:30:22Z",
          "updatedAt": "2024-07-05T11:30:22Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I've not committed your suggestion directly but rather introduced the number one line above.\r\n```diff\r\n-Once this number grows above the limit value of 50, ASes trim the set of PCBs propagated.\r\n+Once this number grows above the maximum recommended best PCBs set size of 50, ASes trim the set of PCBs propagated.\r\n```",
              "createdAt": "2024-07-05T11:30:22Z",
              "updatedAt": "2024-07-05T11:30:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ax4VN",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:46:32Z",
          "updatedAt": "2024-07-05T11:46:33Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "But it's not, it's N times the path length. That's the whole buildup of this section:\r\n\r\n- [Resource costs] depend on the the number and length of the discovered path segments, that is, on the total number of AS entries of the discovered path segments.\r\n\r\n- Then we say that in core network, PCBs are roughly log(N) long.\r\n\r\n- With N the number of participating core ASes, an AS receives up to 5 * N PCBs per propagation interval per core link interface.\r\n",
              "createdAt": "2024-07-05T11:46:33Z",
              "updatedAt": "2024-07-05T11:46:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ax4sl",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:47:32Z",
          "updatedAt": "2024-07-05T11:47:32Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "The full bandwidth will be seen by the control service, both facing the network and for storage. This seems more relevant than the bandwidth across the individual links.\r\n\r\n> The overall CP load in an AS of such scale would be distributed on various instances\r\n\r\nI don't feel that this invalidates this calculations. The point was to illustrate that this is managable with modest resources.\r\n\r\nI'll throw in a sentence to say that control service tasks can be distributed to scale to even larger ASes (like this 30k inter-domain link backbone).\r\n",
              "createdAt": "2024-07-05T11:47:32Z",
              "updatedAt": "2024-07-05T11:54:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ax8kN",
          "commit": {
            "abbreviatedOid": "5f7a89e"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T11:58:08Z",
          "updatedAt": "2024-07-05T11:58:08Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Done.",
              "createdAt": "2024-07-05T11:58:08Z",
              "updatedAt": "2024-07-05T11:58:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A28Vv",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:08:29Z",
          "updatedAt": "2024-07-07T16:08:29Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "My intention was to refer to highlight that draining links by letting segments expire is recommended, but I see how this is off topic here. No strong opinions here, I'll leave as it it. ",
              "createdAt": "2024-07-07T16:08:29Z",
              "updatedAt": "2024-07-07T16:08:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A28bo",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:10:48Z",
          "updatedAt": "2024-07-07T16:10:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "This is hyphenated in the rest of the draft, thank you for keeping it consistent! ",
              "createdAt": "2024-07-07T16:10:48Z",
              "updatedAt": "2024-07-07T16:10:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A286T",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:25:08Z",
          "updatedAt": "2024-07-07T16:25:08Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Right, thanks for clarifying! ",
              "createdAt": "2024-07-07T16:25:08Z",
              "updatedAt": "2024-07-07T16:25:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A29Ev",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T16:31:07Z",
          "updatedAt": "2024-07-07T16:31:07Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Removed. This comes from the footnote page 24 of the SCION book, it was edited by Markus/Sam. Any idea how this ended up there? ",
              "createdAt": "2024-07-07T16:31:07Z",
              "updatedAt": "2024-07-07T16:31:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A2_QC",
          "commit": {
            "abbreviatedOid": "011ef7c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T17:41:11Z",
          "updatedAt": "2024-07-07T17:41:12Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Thanks for the clarification, as far as I understand then the message complexity in terms of number of signature validations per AS can be approximated with O(N*log(N)), while the amount of propagated PCBs per AS is  O(N), correct?\r\nIf you agree, I still think it might be more understandable to directly mention it",
              "createdAt": "2024-07-07T17:41:12Z",
              "updatedAt": "2024-07-07T17:42:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A3Fob",
          "commit": {
            "abbreviatedOid": "4e2e591"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-07T21:10:24Z",
          "updatedAt": "2024-07-07T21:10:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOJx2-rs5zNNZT",
      "title": "clarify path reversibility",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/43",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #22 ",
      "createdAt": "2024-06-21T17:08:48Z",
      "updatedAt": "2024-07-04T15:52:26Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "1eb85516903ff150f1a681db24d0438573faab3b",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "path_reversal",
      "headRefOid": "a501045e2ce0cd5857db15ea472e0e20e68adaff",
      "closedAt": "2024-07-04T15:52:22Z",
      "mergedAt": "2024-07-04T15:52:22Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "d275f5068aa9ed5dd11e9d803db416eacbe304c5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6AphN6",
          "commit": {
            "abbreviatedOid": "376fdf0"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T08:54:14Z",
          "updatedAt": "2024-07-04T09:00:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "That sentence doesn't seem grammatically correct. I am not sure what is doing the \"ensuring\". How about:\"\r\n\r\n- Path reversal: In SCION, every path is reversible. That is, the receiver of a packet can reverse the path in the packet header in order to produce a reply packet without having to perform a path lookup. Such a packet follows the original packet's path backwards.\r\n\"\r\n",
              "createdAt": "2024-07-04T08:54:14Z",
              "updatedAt": "2024-07-04T09:00:09Z"
            },
            {
              "originalPosition": 24,
              "body": "Point 6: haven't we already explained that? May be we could be more laconic here:\r\n\r\n6. The destination endpoint, once it receives the first packet, has the option to revert the path in the received packet in order to construct a response.",
              "createdAt": "2024-07-04T08:56:32Z",
              "updatedAt": "2024-07-04T09:00:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AqShY",
          "commit": {
            "abbreviatedOid": "376fdf0"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T10:19:05Z",
          "updatedAt": "2024-07-04T10:19:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Thanks a lot, nice wording! ",
              "createdAt": "2024-07-04T10:19:05Z",
              "updatedAt": "2024-07-04T10:19:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6AqTld",
          "commit": {
            "abbreviatedOid": "376fdf0"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T10:21:25Z",
          "updatedAt": "2024-07-04T10:21:25Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I was a b it redundant with wording because of the feedback we received: \r\n\r\n> think in the provider world it is expected that traffic between two endpoints uses bidirectionally the same path symmetrically. As each AS can select its own path to other AS's, it looks like SCION is not symmetrical. Maybe a comment around that could help. \r\n\r\nI'll use your proposal for more succinct wording, how about: \r\n`The destination endpoint, once it receives the first packet, may revert the path in the received packet in order to construct a response. This ensures that traffic flows on the same path bidirectionally.`\r\n",
              "createdAt": "2024-07-04T10:21:25Z",
              "updatedAt": "2024-07-04T10:25:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Aqt5m",
          "commit": {
            "abbreviatedOid": "a501045"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T11:15:12Z",
          "updatedAt": "2024-07-04T11:15:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 44,
      "id": "PR_kwDOJx2-rs50bp1b",
      "title": "Highlighted use of MUST, MUST NOT and SHOULD where appropriate.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/44",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Have not changed this in code references\r\nSolves #12 ",
      "createdAt": "2024-07-04T11:04:27Z",
      "updatedAt": "2024-07-08T16:11:53Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "d275f5068aa9ed5dd11e9d803db416eacbe304c5",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Final_Tweaks",
      "headRefOid": "c355bddd0f6451e063cca4a2d336d31c8008b6c1",
      "closedAt": "2024-07-08T09:51:44Z",
      "mergedAt": "2024-07-08T09:51:44Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "a7bf7e2f4da132cfbbe5aac2ace8dabc600dd0e0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6A3GLK",
          "commit": {
            "abbreviatedOid": "3fe971e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T21:31:12Z",
          "updatedAt": "2024-07-07T21:40:53Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "I think this should be a MUST, however this should be regulated in the PKI dtaft. I''ll just reword to avoid using RFC2119 words\r\n```suggestion\r\nThe signature metadata minimally contains the ISD-AS number of the signing entity and the key identifier of the public key to be used to verify the message. For more information on signing and verifying control-plane messages, see the chapter \"Signing and Verifying Control-Plane Messages\" of the SCION Control-Plane PKI Specification {{I-D.scion-cppki}}.\r\n```",
              "createdAt": "2024-07-07T21:31:12Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            },
            {
              "originalPosition": 116,
              "body": "I think this is a MUST rather than a SHOULD",
              "createdAt": "2024-07-07T21:35:14Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            },
            {
              "originalPosition": 133,
              "body": "Same as above",
              "createdAt": "2024-07-07T21:35:27Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            },
            {
              "originalPosition": 142,
              "body": "I feel that registering the segment is not an absolute requirement to the spec, I'd avoid RFC2119 wording: \r\n```suggestion\r\n- `SegmentType`: Specifies the type of the path segment to be registered. Currently, only the following type is used:\r\n```",
              "createdAt": "2024-07-07T21:38:14Z",
              "updatedAt": "2024-07-07T21:40:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6A6gTH",
          "commit": {
            "abbreviatedOid": "71d63f6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T09:48:18Z",
          "updatedAt": "2024-07-08T09:48:36Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "Discussed with @matzf , MAY seems more appropriate, as this is somehow optional if the AS wants to advertise the peering link\r\n\r\n```suggestion\r\n   - If the AS has peering links, the control service MAY add corresponding peer entry components to the signed body of the AS entry; one peer entry component for each peering link that the AS wants to advertise. The hop field component of each added peer entry MUST have a specified egress interface.\r\n```",
              "createdAt": "2024-07-08T09:48:18Z",
              "updatedAt": "2024-07-08T09:48:36Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\n2. If the AS has peering links, the control service MAY add corresponding peer entry components to the signed body of the AS entry - one peer entry component for each peering link that the AS wants to advertise. The egress interface ID in the hop field component of each added peer entry MUST NOT be specified.\r\n```",
              "createdAt": "2024-07-08T09:48:30Z",
              "updatedAt": "2024-07-08T09:48:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "PR_kwDOJx2-rs50tsW5",
      "title": "Clarify beaconing at bootstrapping ",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/47",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-08T15:45:17Z",
      "updatedAt": "2024-07-08T16:12:02Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "scalability",
      "headRefOid": "8b8d3dd4313fd3a427379cfb7311fb82105bcb6f",
      "closedAt": "2024-07-08T15:55:31Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 49,
      "id": "PR_kwDOJx2-rs50t6zB",
      "title": "Clarify beaconing fast retry at bootstrapping",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/49",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Solves #48 ",
      "createdAt": "2024-07-08T16:16:47Z",
      "updatedAt": "2024-07-21T17:26:01Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "beaconing_fast_retry",
      "headRefOid": "0863ace84c59f251fa995b699d7c819c7890d9a8",
      "closedAt": "2024-07-16T16:29:24Z",
      "mergedAt": "2024-07-16T16:29:24Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "0960054f97e054952821cd18b1421c2ae938aeef"
      },
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "Disucssed with JC, looks good enough to merge.",
          "createdAt": "2024-07-16T16:29:18Z",
          "updatedAt": "2024-07-16T16:29:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6BHrLK",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T13:06:31Z",
          "updatedAt": "2024-07-09T13:08:03Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I side with Matthias regarding the phrase \"bootstrapping\". This calls for a definition and such is hard to come by. Do we need to mention that at all?\r\n\r\nRegarding \"The AS SHOULD\". We just said that it \"SHOULD not\" in the paragraph above. So can't possibly express it like that. This may be one case where \"MAY\" is approriate, assuming we specify under which condition (since that derogates from the previous paragraph).\r\n\r\nRegarding when it MAY... I think that \"previously unknown\" segments, or \"previously unreachable destinations\" could qualify.\r\n",
              "createdAt": "2024-07-09T13:06:31Z",
              "updatedAt": "2024-07-09T13:08:41Z"
            },
            {
              "originalPosition": 13,
              "body": "Same consideration about boostrapping. What is bootstrapping.",
              "createdAt": "2024-07-09T13:06:36Z",
              "updatedAt": "2024-07-09T13:08:03Z"
            },
            {
              "originalPosition": 22,
              "body": "And again. Here I think it would be enough to mention the worst case and not bother with \"unless...\".\r\n",
              "createdAt": "2024-07-09T13:07:57Z",
              "updatedAt": "2024-07-09T13:08:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIMrE",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T13:56:57Z",
          "updatedAt": "2024-07-09T13:56:57Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "\"Bootstrapping\" was a quick & dirty word, I'll replace it with a list of conditions when the propagation interval MAY not be respected. ",
              "createdAt": "2024-07-09T13:56:57Z",
              "updatedAt": "2024-07-09T13:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIQER",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:01:48Z",
          "updatedAt": "2024-07-09T14:01:48Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Ok, I will remove all mentions of bootstrapping. However, I'd like that we discuss (maybe also with oncilla) if this fast retry mechanism should really be optional, or perhaps mandatory. \r\nIf it stays optional (using MAY in comment above), then we are ok to say here `at worst case`. If it becomes mandatory, then the structural delay here might become a lot better (however, I feel we still don't understand the full implications).\r\n\r\n",
              "createdAt": "2024-07-09T14:01:48Z",
              "updatedAt": "2024-07-09T14:01:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIesg",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:24:23Z",
          "updatedAt": "2024-07-09T14:24:23Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "(fee free to resolve if you like my text, or to propose an alternative)",
              "createdAt": "2024-07-09T14:24:23Z",
              "updatedAt": "2024-07-09T14:24:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIeui",
          "commit": {
            "abbreviatedOid": "a6248df"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:24:26Z",
          "updatedAt": "2024-07-09T14:24:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "(fee free to resolve if you like my text, or to propose an alternative)",
              "createdAt": "2024-07-09T14:24:26Z",
              "updatedAt": "2024-07-09T14:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BIe7h",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:24:45Z",
          "updatedAt": "2024-07-09T14:24:45Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "@jiceatscion @matzf @oncilla do these conditions sound reasonable? How would the AS check that it receives a previously unknown segment, shall we be more precise about this? \r\n\r\nON a similar note, @tzaeschke 's  comments were: \r\n>  Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths?\r\n\r\n> What means \"unknown path\"? Does it refer to all links in the segment or just the remote AS? If it is all links in the segment, then there may be many new paths coming in all the time that need to be forwarded immediately, or not?",
              "createdAt": "2024-07-09T14:24:45Z",
              "updatedAt": "2024-07-09T14:24:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BI2bw",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "oncilla",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-09T14:59:03Z",
          "updatedAt": "2024-07-09T14:59:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": ">  How would the AS check that it receives a previously unknown segment, shall we be more precise about this?\r\n\r\nI don't think this is accurate. We do not do fast recovery if we receive a previously unknown path segment in all cases.\r\n\r\nI think what it really boils down to is the following:\r\n\r\nIf we have not successfully distributed at least one beacon within the last beaconing interval, be it due to failing RPCs, or because no beacon was available to propagate, we enter the fast recovery mode.\r\n\r\n> Is this subject to the \"Best 5 PCB\" rule? -> If a new path is immediately forwarded, does it count towards th \"best 5\"? If not, then we are effectively forwarding >5 paths, correct? If yes, then the first 5 paths are always the best until they expire and can be replaced with other paths?\r\n\r\nThe questions are mute, because we do not immediately beacon if a new path segment is discovered.\r\n\r\n",
              "createdAt": "2024-07-09T14:59:03Z",
              "updatedAt": "2024-07-09T14:59:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BQRbQ",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-10T09:16:51Z",
          "updatedAt": "2024-07-10T09:44:13Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "\"be validated at worst case up to N intervals (so maximally N minutes)\". This is triply redundant:\r\n\r\n\"up to\" means \"<=\" means \"maximally\" means \"in the worst case\". I give you that the \"maximally\" phrase is about duration and not intervals, but still, that was more than clear enough as it was.\r\n",
              "createdAt": "2024-07-10T09:16:51Z",
              "updatedAt": "2024-07-10T09:44:13Z"
            },
            {
              "originalPosition": 9,
              "body": "Ok. so if we want to be both honest and minimalist, we should just give permission to the current implementation do do what it does, without mandating it (since I don't think we really know how good or bad it is). how about:\r\n\r\n\"\r\nNote that to ensure quick connectivity establishment, an AS MAY attempt to forward a PCB more frequently (\"fast recovery\") if no attempt is know to have succeeded. Current practice is to increase the frequency of attempts if and only if no beacon has been successfully propagated during the last beaconing interval.\r\n\"\r\n?",
              "createdAt": "2024-07-10T09:39:11Z",
              "updatedAt": "2024-07-10T09:44:13Z"
            },
            {
              "originalPosition": 45,
              "body": "\"...propagate the available PCBs at latest in...\"\r\n\r\n\"...propagate the available PCBs at the latest in...\"",
              "createdAt": "2024-07-10T09:43:27Z",
              "updatedAt": "2024-07-10T09:44:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BdlhW",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T14:08:48Z",
          "updatedAt": "2024-07-11T14:08:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "changed\r\n",
              "createdAt": "2024-07-11T14:08:48Z",
              "updatedAt": "2024-07-11T14:08:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BduXY",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T14:22:30Z",
          "updatedAt": "2024-07-11T14:22:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "ok",
              "createdAt": "2024-07-11T14:22:30Z",
              "updatedAt": "2024-07-11T14:22:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BdyTi",
          "commit": {
            "abbreviatedOid": "17d1c61"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T14:28:31Z",
          "updatedAt": "2024-07-11T14:28:32Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "How about this mix of your two wordings? \r\n```suggestion\r\nNote that to ensure quick connectivity establishment, an AS MAY attempt to forward a PCB more frequently (\"fast recovery\"). Current practice is to increase the frequency of attempts if no PCB propagation is know to have succeeded within the last propagation interval:\r\n\r\n- because the corresponding RPC failed\r\n\r\n- or because no beacon was available to propagate\r\n```",
              "createdAt": "2024-07-11T14:28:31Z",
              "updatedAt": "2024-07-11T14:28:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BenAX",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:24:32Z",
          "updatedAt": "2024-07-11T15:24:32Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Remove this \"at worst\"; can't be fewer steps (even if they'd be triggered quicker)",
              "createdAt": "2024-07-11T15:24:32Z",
              "updatedAt": "2024-07-11T15:24:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BenCP",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:24:34Z",
          "updatedAt": "2024-07-11T15:24:34Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nWhen a new parent-child link is added to the network, the parent AS will propagate the available PCBs in the next propagation event. If the AS on the child side of the new link is a leaf AS, path discovery is thus complete after at most one propagation interval. Otherwise, child ASes at distance D below the new link, learn of the new link after at worst D further propagation intervals.\r\n```\r\n\r\n\"fast recovery\" does not accelerate finding _additional_ paths. It could only help if the AS and its entire subtree was previously disconnected. That seems an unnecessary weird edge case to explain, I'd just leave it out (and it remains correct).",
              "createdAt": "2024-07-11T15:24:34Z",
              "updatedAt": "2024-07-11T15:24:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6BenGH",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "matzf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:24:37Z",
          "updatedAt": "2024-07-11T15:24:37Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "wether -> whether\r\n\r\nThe fast recovery mechanism only significantly affects the path discovery time for (the first) down segments.\r\nIn core beaconing, it's mostly irrelevant for establishing connectivity, as it is disabled as soon as one PCB was propagated over an interface. Because origination/propagation starts from everywhere, this does not create any meaningful connectivity.\r\n\r\nIf you want to mention it at all, I would describe it specifically for the down beaconing case, at the end of the paragraph starting with \"On a cold start of the network ...\". Something like:\r\n\"When all ASes start propagation interval just after they've received the first PCBs from any of their providers (see 'fast recovery'), the construction of a first path to connect each AS to the ISD core is accelerated.\".\r\n",
              "createdAt": "2024-07-11T15:24:37Z",
              "updatedAt": "2024-07-11T15:24:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Ber7R",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T15:31:13Z",
          "updatedAt": "2024-07-11T15:31:13Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "right, I'll do",
              "createdAt": "2024-07-11T15:31:13Z",
              "updatedAt": "2024-07-11T15:31:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6B-48w",
          "commit": {
            "abbreviatedOid": "d10bf38"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-16T16:22:07Z",
          "updatedAt": "2024-07-16T16:22:07Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Thanks, I added your wording there.",
              "createdAt": "2024-07-16T16:22:07Z",
              "updatedAt": "2024-07-16T16:22:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 51,
      "id": "PR_kwDOJx2-rs51FRYp",
      "title": "Update GitHub actions",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/51",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-11T11:17:08Z",
      "updatedAt": "2024-07-11T11:17:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "70f77f07a11c0c92f2ce1da81ab192a44566b7fe",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "actions_update",
      "headRefOid": "f5c6c8782d127ba5dbeadd33103bf83ce7936cea",
      "closedAt": "2024-07-11T11:17:51Z",
      "mergedAt": "2024-07-11T11:17:51Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "c8ec077c3769f92300ec68f1bbf6ed6bb3ae83b7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 53,
      "id": "PR_kwDOJx2-rs511Ni3",
      "title": "wormhole attack: mention proof of transit as detection mechansim",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/53",
      "state": "CLOSED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Resolves #52 ",
      "createdAt": "2024-07-18T21:31:00Z",
      "updatedAt": "2024-07-21T17:26:00Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "0960054f97e054952821cd18b1421c2ae938aeef",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "wormhole-pot",
      "headRefOid": "55bed7906485c5ea7df9b268218dde402a5db3fa",
      "closedAt": "2024-07-21T01:03:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "body": "You\u2019re right, the scenario in the draft refers to wormhole in the control plane (where PCBs are used to advertise a wormholed path), and PoT is useless there. \r\n\r\nI was thinking about a wormhole in the data plane. IN this case, you are also right, this is a pretty useless attack, as it requires two malicious on-path ASes. Right now, we talk about this in the DP draft `5.2.1.  Modification of the Path Header` . I\u2019ll therefore discard this PR and open one in the DP: https://github.com/scionassociation/scion-dp_I-D/pull/34 ",
          "createdAt": "2024-07-21T01:03:25Z",
          "updatedAt": "2024-07-21T01:03:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6CZnRN",
          "commit": {
            "abbreviatedOid": "f216d70"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-19T09:08:33Z",
          "updatedAt": "2024-07-19T09:08:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I am really no security expert, so my reading is worth the same as some random non-expert in your audience. From that naive perspective, I fail to grasp how recipients or senders requiring a proof of transit would help detect the wormhole. After all, the two attacker ASes are colluding to rewrite the packets. It seems to me they ought to have everything they need to write the fake proof of transit as well; the peering link could be real. In fact, there is no need to rewrite the packets; they could be tunneled into honest scion traffic taking the long route between the two attackers, making the peering link basically real. But that's probably just me not understanding how the proof is constructed.\r\n\r\nI am also not quite sure that the scenario qualifies as a wormhole attack. The usual scenario is that traffic is actually taken on shorter route without permission. So, the attacker is already on the path; the goal being to deceive the sender and receiver about their proximity (and, among other things, the perenity of the connectivity). In that case, proof of transit could defend against the attack. However, that isn't the case in your example. Your example is more of a reverse wormhole attack: an attractive wormhole is advertised but does not exist. The traffic takes a long route. So the purpose of the attacker is to insert itself on the path.\r\n",
              "createdAt": "2024-07-19T09:08:33Z",
              "updatedAt": "2024-07-19T09:08:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6Cap0n",
          "commit": {
            "abbreviatedOid": "f216d70"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-19T11:45:45Z",
          "updatedAt": "2024-07-19T11:45:45Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "What I want to say is that If traffic is \"swallowed\" via a wormhole shortcut, then packets will skip some of the ASes on path. If there is proof of transit, then the proof for the skipped ASes would be missing, revealing the attack.\r\nOn the other hand, it is impossible to prove that packets went though other ASes.. PoT can only prove that traffic did NOT go through the intended ASes. Does it make sense?\r\n\r\nI tried to update wording\r\n",
              "createdAt": "2024-07-19T11:45:45Z",
              "updatedAt": "2024-07-19T11:45:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOJx2-rs52BSbt",
      "title": "typo: appendix, use automatic references",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/54",
      "state": "MERGED",
      "author": "nicorusti",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-21T17:25:38Z",
      "updatedAt": "2024-07-21T17:31:49Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "0960054f97e054952821cd18b1421c2ae938aeef",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "typo",
      "headRefOid": "bed84f2cbaf0d32203d9337ef3b9482f973c3959",
      "closedAt": "2024-07-21T17:31:47Z",
      "mergedAt": "2024-07-21T17:31:47Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "2fea2e2ee6c8d57f9eb7d0d9ba71e43dc06edb8c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 59,
      "id": "PR_kwDOJx2-rs54flrO",
      "title": "Added reference about development",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/59",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-08-15T17:49:46Z",
      "updatedAt": "2024-08-30T13:47:45Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "2fea2e2ee6c8d57f9eb7d0d9ba71e43dc06edb8c",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "ietf-note",
      "headRefOid": "d6926ef48ee14b717724c299789b3ecdf91abdef",
      "closedAt": "2024-08-28T15:14:58Z",
      "mergedAt": "2024-08-28T15:14:58Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "28653e087822932fbc1133ec67847f8a77344331"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6HGXON",
          "commit": {
            "abbreviatedOid": "d6926ef"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T15:14:47Z",
          "updatedAt": "2024-08-28T15:14:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOJx2-rs56SB5g",
      "title": "General Edits",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/60",
      "state": "OPEN",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "General edits to improve consistency, readability and to rationalise superfluous text. Also fixed some unclear or confusing text.\r\n\r\nResolves #58 ",
      "createdAt": "2024-09-03T15:39:33Z",
      "updatedAt": "2024-10-11T16:27:22Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "5189e4d239f924e82de6afd9bf75d7bc89ee3fd3",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "general-review",
      "headRefOid": "3e884f101a12df812017a15d71c314efd18d22a8",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6I4n4V",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-11T11:29:52Z",
          "updatedAt": "2024-09-11T12:14:06Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "echo in title",
              "createdAt": "2024-09-11T11:29:52Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 50,
              "body": "echo",
              "createdAt": "2024-09-11T11:30:38Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 53,
              "body": "echo\r\n",
              "createdAt": "2024-09-11T11:30:53Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 494,
              "body": "\"such a\" -> \"such as\"",
              "createdAt": "2024-09-11T11:42:33Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 679,
              "body": "\"they SHOULD be around 6 hours\"\r\n\r\nNot your own edit but I wonder if we have to be so prescriptive here. May be we should instead RECOMMEND \"Several hours\" and indicate that 6h is the most common choice.",
              "createdAt": "2024-09-11T11:49:53Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 724,
              "body": "\"an acyclic graph\"\r\n\r\nThe original \"a directed acyclic graph\", though pedantic, would be more accurate. We DO pay attention to the direction of the connections.\r\n",
              "createdAt": "2024-09-11T11:56:25Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 730,
              "body": "\"has multiplicative effect\" -> \"has a multiplicative effect\", no?",
              "createdAt": "2024-09-11T11:57:35Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 777,
              "body": "\"As mentioned previously, \"\r\n\r\nDo we need to apologize for it?",
              "createdAt": "2024-09-11T12:02:23Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            },
            {
              "originalPosition": 796,
              "body": "\"as AS may want to\" -> \"as an AS may want to\"",
              "createdAt": "2024-09-11T12:05:11Z",
              "updatedAt": "2024-09-11T12:14:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuIR",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:23:13Z",
          "updatedAt": "2024-10-06T17:23:14Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Typo in 'Path Segment Construction Beacons (PCBs)",
              "createdAt": "2024-10-06T17:23:13Z",
              "updatedAt": "2024-10-06T17:23:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuJx",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:24:00Z",
          "updatedAt": "2024-10-06T17:24:01Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Okay",
              "createdAt": "2024-10-06T17:24:00Z",
              "updatedAt": "2024-10-06T17:24:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuLa",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:24:52Z",
          "updatedAt": "2024-10-06T17:24:52Z",
          "comments": [
            {
              "originalPosition": 494,
              "body": "> \"such a\" -> \"such as\"\r\n\r\nOkay",
              "createdAt": "2024-10-06T17:24:52Z",
              "updatedAt": "2024-10-06T17:24:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuMN",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:25:24Z",
          "updatedAt": "2024-10-06T17:25:24Z",
          "comments": [
            {
              "originalPosition": 679,
              "body": "Fine with me.",
              "createdAt": "2024-10-06T17:25:24Z",
              "updatedAt": "2024-10-06T17:25:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuMy",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:25:41Z",
          "updatedAt": "2024-10-06T17:25:41Z",
          "comments": [
            {
              "originalPosition": 724,
              "body": "Okay",
              "createdAt": "2024-10-06T17:25:41Z",
              "updatedAt": "2024-10-06T17:25:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuOt",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:26:38Z",
          "updatedAt": "2024-10-06T17:26:38Z",
          "comments": [
            {
              "originalPosition": 730,
              "body": "Either is grammatically correct, although J.C's suggestion is probably better.",
              "createdAt": "2024-10-06T17:26:38Z",
              "updatedAt": "2024-10-06T17:26:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuPn",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:27:00Z",
          "updatedAt": "2024-10-06T17:27:00Z",
          "comments": [
            {
              "originalPosition": 777,
              "body": "Okay",
              "createdAt": "2024-10-06T17:27:00Z",
              "updatedAt": "2024-10-06T17:27:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuQw",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:27:31Z",
          "updatedAt": "2024-10-06T17:27:31Z",
          "comments": [
            {
              "originalPosition": 796,
              "body": "Okay",
              "createdAt": "2024-10-06T17:27:31Z",
              "updatedAt": "2024-10-06T17:27:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MGuhW",
          "commit": {
            "abbreviatedOid": "bd41586"
          },
          "author": "knmeynell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:35:20Z",
          "updatedAt": "2024-10-06T17:35:21Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Okay",
              "createdAt": "2024-10-06T17:35:20Z",
              "updatedAt": "2024-10-06T17:35:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6H8hoC",
          "commit": {
            "abbreviatedOid": "e30ed3c"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Commenting just to resolve some conversations.. I am reviewing ",
          "createdAt": "2024-09-04T17:00:54Z",
          "updatedAt": "2024-10-11T15:25:49Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n**Control Plane**: The SCION Control Plane is responsible for the propagation and discovery of network paths, i.e., for the exchange of routing information between network nodes. The Control Plane thus determines where traffic can be sent and deals with questions such as how paths are discovered, which paths exist, etc. Within a SCION AS, such functionalities are carried out by the Control Service whereas packet forwarding is a task carried out by the data plane.\r\n```\r\nlink quality is not addressed by the CP\r\n",
              "createdAt": "2024-09-04T17:00:54Z",
              "updatedAt": "2024-10-11T15:25:49Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nA path MUST contain at most one peering link shortcut which means they can only be used in paths between ASes within the \"customer cone\" of the ASes connected by the peering link.\r\n```\r\n@jiceatscion can we use two peering links in a path? As far as I know no, therefore here we could use MUST",
              "createdAt": "2024-09-04T17:06:09Z",
              "updatedAt": "2024-10-11T15:25:49Z"
            },
            {
              "originalPosition": 32,
              "body": "Changed to:\r\n>  The Control Plane thus determines where traffic can be sent and deals with questions such as how paths are discovered, which paths exist, how they are disseminated to endpoints, etc. ",
              "createdAt": "2024-10-11T14:45:32Z",
              "updatedAt": "2024-10-11T15:25:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOJx2-rs57KXG8",
      "title": "grpc: describe empty responses and mention the existence of gRPC errors",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/62",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #61 ",
      "createdAt": "2024-09-11T13:19:28Z",
      "updatedAt": "2024-09-19T17:33:29Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "28653e087822932fbc1133ec67847f8a77344331",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "beaconing_api_errors",
      "headRefOid": "34bd2f3305dd0bc1eb673497696f139b6f7df268",
      "closedAt": "2024-09-19T17:33:23Z",
      "mergedAt": "2024-09-19T17:33:23Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "833acf74eb6bcccb1974bc883ee8c623b1bafc9f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6KCp1I",
          "commit": {
            "abbreviatedOid": "34bd2f3"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM\r\n",
          "createdAt": "2024-09-19T15:49:39Z",
          "updatedAt": "2024-09-19T15:49:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOJx2-rs58JkpE",
      "title": "mtu: add clarifications.",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/63",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #57 ",
      "createdAt": "2024-09-20T10:33:09Z",
      "updatedAt": "2024-10-04T12:24:40Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "833acf74eb6bcccb1974bc883ee8c623b1bafc9f",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "cp_mtu",
      "headRefOid": "959ec246190151f0b98855c1bc4c54100f3c3f37",
      "closedAt": "2024-10-04T12:24:37Z",
      "mergedAt": "2024-10-04T12:24:37Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "93ab0da2eb6b55dbdb5f3bdc5e4155f84fcdccf1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6LqJb3",
          "commit": {
            "abbreviatedOid": "0d37e42"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Thanks a lot, looks good. I proposed rewording of some sections and added a note in the config section ",
          "createdAt": "2024-10-02T14:13:23Z",
          "updatedAt": "2024-10-03T09:38:44Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nSCION paths represent a sequence of ASes and inter-AS links; each with possibly different MTUs. As a result, the path MTU is the minimum of the MTUs of each inter-AS link and intra-AS networks it traverses. Such MTU information is disseminated during path construction:\r\n\r\n* The MTU of the first and last ASes (represented by the MTU field of the corresponding [AS Entries](#ase-sign))\r\n* The MTU of each inter-AS link or peering link (indicated by the ingress_mtu field of each [](#hopentry) or the peer_mtu field of each [](#peerentry) used)\r\n* The MTU of any intra-AS network traversed if the ingress and egress interfaces of a hop exist on two different border routers\r\n\r\nIt is then made available to endpoints during the path lookup process.\r\n```\r\n\r\nI assume that the MTU is also included in the information returned after a lookup. Right now, we don't say much about this. Could it be more explicit?",
              "createdAt": "2024-10-02T14:13:23Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nRegarding the later point: A SCION endpoint using a path segment has no means of knowing whether a given hop implies traversing the corresponding AS' internal network or not, nor whether a possibly larger MTU applies. In addition, SCION control plane implementations are NOT REQUIRED to account for this in the hop's `ingress_mtu` field. As a result, a SCION endpoint looking up a path MUST assume that all hops are additionally constrained by the internal network MTU of each AS traversed.\r\n```",
              "createdAt": "2024-10-02T14:17:23Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- `mtu`: The maximum transmission unit (MTU) that is supported by all intra-domain links within the current AS. This value is set by the control service when adding the AS entry to the beacon. How the control service obtains this information is implementation dependent. Current practice is to make it a configuration item.\r\n```\r\nI think it is better to refer to the intra-domain underlay rather than to hosts",
              "createdAt": "2024-10-03T09:21:14Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n- `ingress_mtu`: Specifies the maximum transmission unit (MTU) of the ingress interface (in beaconing direction) of the hop being described. The MTU of path segments constructed from the containing beacon is necessarily less than or equal to this value. How the control service obtains the MTU of an inter-AS link is implementation dependent. It may be discovered or configured. Current practice to make it a configuration item.\r\n```",
              "createdAt": "2024-10-03T09:25:57Z",
              "updatedAt": "2024-10-04T09:18:20Z"
            },
            {
              "originalPosition": 16,
              "body": "Are you referring to a specific section of RFC1122? I skimmed through it and I did not find where you are referring to immediately. In the terminology section, it only says: \r\n```\r\n         MTU\r\n              The maximum transmission unit, i.e., the size of the\r\n              largest packet that can be transmitted.\r\n```",
              "createdAt": "2024-10-03T09:30:32Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n- `peer_mtu`: Specifies the maximum transmission unit (MTU) of the peering link being described. The MTU of paths via such link is necessarily less than or equal to this value.  How the control service obtains the MTU of an inter-AS link is implementation dependent. It may be discovered or configured. Current practice to make it a configuration item.\r\n```",
              "createdAt": "2024-10-03T09:31:27Z",
              "updatedAt": "2024-10-04T09:21:29Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nThis may be optimized if the control plane implementations made the hop's `ingress_mtu` field no greater than the MTU of the path between the two border routers involved in that hop. However existing implementations have not historically done this in favor of the more conservative approach to use the maximum AS MTU specified in [](#ase-sign).\r\n```",
              "createdAt": "2024-10-03T09:36:25Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            },
            {
              "originalPosition": 38,
              "body": "JFYI I've added this",
              "createdAt": "2024-10-03T09:38:09Z",
              "updatedAt": "2024-10-03T09:38:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyK_R",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:08:07Z",
          "updatedAt": "2024-10-03T10:08:08Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I think neither my nor your formulation are accurate. A path segment does not have an end-to-end MTU. Only a path does. In addition, we cannot say \"MUST\" or \"MUST NOT\" as no-one is setting any end-2-end MTU for a path at the protocol level. It is ony a property that results from the various MTU fields. How about:\r\n\r\n\"\r\n- `ingress_mtu`: Specifies the maximum transmission unit (MTU) of the ingress interface (in beaconing direction) of the hop being described. The MTU of path segments constructed from the containing beacon is necessarily less than or equal to this value. How the control service obtains the MTU of an inter-AS link is implementation dependent. It may be discovered or configured. Current practice to make it a configuration item.\r\n\"\r\n",
              "createdAt": "2024-10-03T10:08:07Z",
              "updatedAt": "2024-10-03T10:08:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyNwd",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:12:29Z",
          "updatedAt": "2024-10-03T10:12:30Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "A precise reference would be complicated. I was shocked to discover how poorly the term is defined. This is the closest I found to a definition and it is spread between the paragraph you quote and the text after it:\r\n\r\n> The terms frame, packet, datagram, message, and segment are\r\n>          illustrated by the following schematic diagrams:\r\n> \r\n>          A. Transmission on connected network:\r\n>            _______________________________________________\r\n>           | LL hdr | IP hdr |         (data)              |\r\n>           |________|________|_____________________________|\r\n> \r\n>            <---------- Frame ----------------------------->\r\n>                     <----------Packet -------------------->\r\n\r\nSo, the MTU is defined first as applying to a packet, and then a packet is defined as the portion of the Frame that follows the LL header.\r\n",
              "createdAt": "2024-10-03T10:12:29Z",
              "updatedAt": "2024-10-03T10:30:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyPLj",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:15:06Z",
          "updatedAt": "2024-10-03T10:15:06Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Same response as before and same suggestion for a third brew of the text.\r\n",
              "createdAt": "2024-10-03T10:15:06Z",
              "updatedAt": "2024-10-03T10:15:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyUYP",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:26:31Z",
          "updatedAt": "2024-10-03T10:26:31Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "No, that isn't quite true. The CS implementations do not conservatively use the AS's MTU as a limit on the ingress MTU. They let the endpoints do that. As a result, the endpoints *have* to do it. As a result, there's no point for the CS to offer the optimal MTU for a given hop.\r\n\r\nThe truth is that we'd need a migration strategy:\r\n* Phase 1: reduce the ingress MTU to that of the specific HOP (which has no effect on consumers of the HOP).\r\n* Phase 2: wait for all CS'es in the world to run running that modified code.\r\n* Phase 3: update the daemon and other segment consuming code to rely on the ingress MTU only and consider the AS's MTU of only the last HOP of the path.\r\n\r\nHow the heck do I summarize that in a normative doc? Yet, if we don't say it, someone will object and say the protocol is wasting a performance opportunity.\r\n",
              "createdAt": "2024-10-03T10:26:31Z",
              "updatedAt": "2024-10-03T10:26:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6LyU4K",
          "commit": {
            "abbreviatedOid": "0d37e42"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T10:27:38Z",
          "updatedAt": "2024-10-03T10:27:38Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "ack.\r\n",
              "createdAt": "2024-10-03T10:27:38Z",
              "updatedAt": "2024-10-03T10:27:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7P20",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:18:54Z",
          "updatedAt": "2024-10-04T09:18:55Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "True, I added your formulation.",
              "createdAt": "2024-10-04T09:18:54Z",
              "updatedAt": "2024-10-04T09:18:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7R7v",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:23:12Z",
          "updatedAt": "2024-10-04T09:23:12Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I updated my suggestion above. As this is a peering link, I think we cannot use the same wording as for regular links (we cannot refer to the MTU in a path segment, as the peering link intrinsically merges two distinct segments). Let me know wat you think about this wording: \r\n> The MTU of paths via such link is necessarily less than or equal to this value. \r\n",
              "createdAt": "2024-10-04T09:23:12Z",
              "updatedAt": "2024-10-04T09:23:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7UF7",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:27:31Z",
          "updatedAt": "2024-10-04T09:27:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "And I changed \"MTU of path segments\" to \"MTU of paths\", since we agreed that the MTU of a segment is undefined.",
              "createdAt": "2024-10-04T09:27:31Z",
              "updatedAt": "2024-10-04T09:27:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7VXy",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T09:30:11Z",
          "updatedAt": "2024-10-04T09:30:11Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Yes, that's what I would have done. I did apply the same change to the ingress MTU for a similar reason: there is no segment MTU; it all depends on which portion you use.",
              "createdAt": "2024-10-04T09:30:11Z",
              "updatedAt": "2024-10-04T09:30:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L7uyE",
          "commit": {
            "abbreviatedOid": "637ce5e"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T10:17:21Z",
          "updatedAt": "2024-10-04T10:17:21Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Thank you for the clarification, I see your point. Let me propose another wording (I have to open a new thread).",
              "createdAt": "2024-10-04T10:17:21Z",
              "updatedAt": "2024-10-04T10:17:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L8DSq",
          "commit": {
            "abbreviatedOid": "06e36e2"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:02:47Z",
          "updatedAt": "2024-10-04T11:02:47Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Ok, then let's perhaps leave the reference as it is, I think the text is clear enough,",
              "createdAt": "2024-10-04T11:02:47Z",
              "updatedAt": "2024-10-04T11:02:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L8VV6",
          "commit": {
            "abbreviatedOid": "06e36e2"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:41:05Z",
          "updatedAt": "2024-10-04T11:41:06Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "@jiceatscion how about this wording? In a nutshell: \r\n- I only mention MTU of each intra-AS network\r\n- I mention that endpoints are unaware of AS topologies, therefore they must assume intra-AS is traversed. This should be a strong enough justification for this approach (and we leave out ptential discussions for optimizations, that are not really of primary importance for this document)\r\n\r\n\r\n```suggestion\r\n* The MTU of each intra-AS network traversed (represented by the MTU field of the corresponding [AS Entries](#ase-sign))\r\n* The MTU of each inter-AS link or peering link (indicated by the ingress_mtu field of each [](#hopentry) or the peer_mtu field of each [](#peerentry) used)\r\n\r\nSuch information is then made available to endpoints during the path lookup process (See [](#lookup)). SCION endpoints are oblivious to the topology of intermediate ASes, therefore when looking up a path they MUST assume that all hops are constrained by the intra-AS MTU of each AS traversed.\r\n```",
              "createdAt": "2024-10-04T11:41:05Z",
              "updatedAt": "2024-10-04T11:43:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6L8doK",
          "commit": {
            "abbreviatedOid": "dabe855"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T11:58:47Z",
          "updatedAt": "2024-10-04T11:58:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOJx2-rs59iVAa",
      "title": "Updated Intro and added Change Log",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/65",
      "state": "CLOSED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-03T18:22:40Z",
      "updatedAt": "2024-10-03T18:28:40Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "833acf74eb6bcccb1974bc883ee8c623b1bafc9f",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Intro_update",
      "headRefOid": "120627fa8ae3fe3c707dc71f0824ab3cb889e055",
      "closedAt": "2024-10-03T18:28:39Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 66,
      "id": "PR_kwDOJx2-rs59ia0w",
      "title": "Updated Intro and add changelog",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/66",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #64 ",
      "createdAt": "2024-10-03T18:33:23Z",
      "updatedAt": "2024-10-11T14:43:41Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "401b12cb34dbcfbd813d6e1c064f42530e2c6a7d",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Intro_update",
      "headRefOid": "48116d0826bffb782bced133e1d0f3acc633cbdd",
      "closedAt": "2024-10-11T14:43:39Z",
      "mergedAt": "2024-10-11T14:43:39Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "5189e4d239f924e82de6afd9bf75d7bc89ee3fd3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6M2EL6",
          "commit": {
            "abbreviatedOid": "1858906"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I edited a bit the change log, looks good!",
          "createdAt": "2024-10-11T14:43:34Z",
          "updatedAt": "2024-10-11T14:43:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOJx2-rs59pP3J",
      "title": "cleanup: Cleaned-up protobufs appendix and add some missing refs to it",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/68",
      "state": "MERGED",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": " Also cleaned-up extraneous blank lines. Replaced phrases like \"on xyz-level\".\r\n\r\nFixes #67 ",
      "createdAt": "2024-10-04T16:55:59Z",
      "updatedAt": "2024-10-08T08:29:55Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "93ab0da2eb6b55dbdb5f3bdc5e4155f84fcdccf1",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "api",
      "headRefOid": "c82117d711d20a243e7ca4a0fcbfa278fdee91d1",
      "closedAt": "2024-10-08T08:29:55Z",
      "mergedAt": "2024-10-08T08:29:55Z",
      "mergedBy": "jiceatscion",
      "mergeCommit": {
        "oid": "59edc75fc902a83734ad852bc88795d253889ec2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6MPJfq",
          "commit": {
            "abbreviatedOid": "519c312"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks a lot! I left some minor comments/changes, the rest looks good! \r\n",
          "createdAt": "2024-10-07T19:35:30Z",
          "updatedAt": "2024-10-07T20:08:29Z",
          "comments": [
            {
              "originalPosition": 319,
              "body": "```suggestion\r\n1. First, the source endpoint queries the control service in its own AS (i.e., the source AS) for the required segments by sending a SegmentsRequest. The control service has up-path segments stored in its path database. Additionally, the control service checks if it has appropriate core- and down-path segments in store as well; in this case it returns them immediately in a SegmentsResponse.\r\n```",
              "createdAt": "2024-10-07T19:35:30Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            },
            {
              "originalPosition": 488,
              "body": "Does this description apply to all messages beklow? If so, I'd put it in the main text or in the figure description rather than at the top of the figure. Right now, in the compiled draft, it looks sort of funny: \r\n```\r\nFull Control Service gRPC API\r\n\r\n   The following code blocks provide, in protobuf format, the entire API\r\n   by which control services interact.\r\n\r\n   // This API is exposed on the SCION dataplane by the control services\r\n   // of core ASes and exposed on the \"intra-domain protocol\" network.\r\n   service SegmentLookupService {\r\n       // Segments returns all segments that match the request.\r\n       rpc Segments(SegmentsRequest) returns (SegmentsResponse) {}\r\n   }\r\n   ```\r\n\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-10-07T19:51:43Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            },
            {
              "originalPosition": 520,
              "body": "```suggestion\r\n{: #figure-11 title=\"Control Service gRPC API - Segment lookup. This API is exposed on the SCION dataplane by the control services of core ASes and exposed on the \"intra-domain protocol\" network.\"}\r\n```",
              "createdAt": "2024-10-07T20:03:20Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            },
            {
              "originalPosition": 525,
              "body": "Same as in comment above",
              "createdAt": "2024-10-07T20:04:59Z",
              "updatedAt": "2024-10-07T20:08:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MS9IP",
          "commit": {
            "abbreviatedOid": "519c312"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:29:11Z",
          "updatedAt": "2024-10-08T08:29:11Z",
          "comments": [
            {
              "originalPosition": 488,
              "body": "done",
              "createdAt": "2024-10-08T08:29:11Z",
              "updatedAt": "2024-10-08T08:29:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJx2-rs6MS9Pb",
          "commit": {
            "abbreviatedOid": "519c312"
          },
          "author": "jiceatscion",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:29:22Z",
          "updatedAt": "2024-10-08T08:29:22Z",
          "comments": [
            {
              "originalPosition": 520,
              "body": "done",
              "createdAt": "2024-10-08T08:29:22Z",
              "updatedAt": "2024-10-08T08:29:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 69,
      "id": "PR_kwDOJx2-rs598qM_",
      "title": "dp_draft: fix recommended/typical values for best PCB set size and AS cert TTL",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/69",
      "state": "OPEN",
      "author": "jiceatscion",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #50 ",
      "createdAt": "2024-10-08T13:00:39Z",
      "updatedAt": "2024-10-08T13:00:40Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "59edc75fc902a83734ad852bc88795d253889ec2",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "anapaya_review",
      "headRefOid": "d49ae7ed7dfb237ae61bb2b3fa03fd3f4c253f34",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 70,
      "id": "PR_kwDOJx2-rs59-G-G",
      "title": "Deprecates draft-dekater-panrg-scion-overview",
      "url": "https://github.com/scionassociation/scion-cp_I-D/pull/70",
      "state": "MERGED",
      "author": "knmeynell",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-08T15:52:15Z",
      "updatedAt": "2024-10-11T13:57:57Z",
      "baseRepository": "scionassociation/scion-cp_I-D",
      "baseRefName": "main",
      "baseRefOid": "59edc75fc902a83734ad852bc88795d253889ec2",
      "headRepository": "scionassociation/scion-cp_I-D",
      "headRefName": "Intro_notes",
      "headRefOid": "f43f0a68ff1a36671a98318146fc6bdd9f97c0d7",
      "closedAt": "2024-10-11T13:57:54Z",
      "mergedAt": "2024-10-11T13:57:54Z",
      "mergedBy": "nicorusti",
      "mergeCommit": {
        "oid": "401b12cb34dbcfbd813d6e1c064f42530e2c6a7d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJx2-rs6Midh_",
          "commit": {
            "abbreviatedOid": "f0cb977"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Can you make wording in the intro in par with DP? ",
          "createdAt": "2024-10-09T18:04:49Z",
          "updatedAt": "2024-10-09T18:04:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJx2-rs6M1q65",
          "commit": {
            "abbreviatedOid": "f43f0a6"
          },
          "author": "nicorusti",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-11T13:57:10Z",
          "updatedAt": "2024-10-11T13:57:10Z",
          "comments": []
        }
      ]
    }
  ]
}